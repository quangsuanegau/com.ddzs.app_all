(function () {
    var createPageHandler = function () {
        return (() => {
            var __webpack_modules__ = {
                7565: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = r(o("@app-module/system.shortcut")), a = r(i(7395)), s = i(5987);

                        function r(t) {
                            return t && t.__esModule ? t : {default: t}
                        }

                        function p(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function l(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? p(Object(i), !0).forEach((function (e) {
                                    var o, n, a, s;
                                    o = t, n = e, a = i[e], (n = "symbol" == typeof (s = function (t, e) {
                                        if ("object" != typeof t || !t) return t;
                                        var i = t[Symbol.toPrimitive];
                                        if (void 0 !== i) {
                                            var o = i.call(t, "string");
                                            if ("object" != typeof o) return o;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(t)
                                    }(n)) ? s : String(s)) in o ? Object.defineProperty(o, n, {
                                        value: a,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : o[n] = a
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : p(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        e.default = Custom_page({
                            data: {
                                pageName: "主页",
                                tabList: ["主页", "答题", "我的"],
                                isHomeLoad: !1,
                                maskShow: !1,
                                appearCount: 0,
                                goodsList: [],
                                refershUser: !1,
                                pageInfo: {pageindex: 1, pagesize: 20},
                                tabIndex: 0,
                                optionId: "1",
                                loadeding: !1,
                                loading: !1,
                                showPage: !1,
                                showEmpty: !1,
                                tabItemList: [{name: "主页"}, {name: "答题"}, {name: "我的"}],
                                nowAstroIndex: 0,
                                astroList: [],
                                brandcode: "",
                                cateId: "",
                                currentIndex: 0,
                                isShowNativeBoostGroupComp: !1,
                                isShowBoostComp: !1,
                                nativeBoostGroupController: {
                                    backPressTimes: 0,
                                    popCode: "",
                                    loopTimes: 5e3,
                                    middleCode: "",
                                    getBoost: 0,
                                    isAuditUser: !1,
                                    isBoostType: !1,
                                    actionCode: "PAGE_ENTRY",
                                    isFullScreen: !0,
                                    maxAdCount: 3,
                                    stopTimeout: 0,
                                    startTimeout: 0,
                                    customAction: {},
                                    popShow: !1,
                                    middleBackPressTimes: 0
                                },
                                videoBqtConfig: {
                                    popCode: "",
                                    actionCode: "",
                                    isShow: !1,
                                    backPressTimes: 0,
                                    customAction: {}
                                },
                                screenInserConfig: {
                                    popCode: "",
                                    actionCode: "",
                                    isShow: !1,
                                    backPressTimes: 0,
                                    customAction: {}
                                },
                                isAllowBackPress: !1,
                                backPressRefuseReport: !1,
                                pageDetail: {
                                    pageRoute: "/pagesA/Main?selectIndex=0",
                                    pageType: "一级页面",
                                    pageName: "主页",
                                    pageUrl: "主页",
                                    pageCode: "READ_MAIN",
                                    pageOrigin: "READ_MAIN"
                                },
                                isShowBoostAd: 1,
                                lastReadBookInfo: null,
                                pathUrl: "",
                                mySelectIndex: 0,
                                selectIndex: 0,
                                assessList: [],
                                topAssess: [],
                                secondAssess: [],
                                smallAssess: [],
                                isShowDeskFloat: !1,
                                nowBrand: "",
                                moduleShow: 0,
                                showPage: !1,
                                enterShow: 0,
                                speedShow: 0,
                                intent: 0,
                                complaintOpen: 0,
                                complaintShow: !1,
                                complaintLeft: 20,
                                complaintTop: 1e3,
                                complaintIcon: "../../assets/images/complaint_button.png",
                                isShowComplaintPop: !1
                            }, async onInit() {
                                let t = this;
                                "true" == t.$page.query.clearRouter && $utils.clear(), LOG("首页---onInit-----------", t.mySelectIndex), t.changeTabPageDetail(t.mySelectIndex), await a.default.page_param_handler(t.$app.$def, t), await a.default.page_user_data_init(t.$app.$def, t), "vivo" !== t.$app.$def.brand && "oppo" !== t.$app.$def.brand || $utils.requestFullscreen(this), t.isShowDeskFloat = 1 == Number(TACTICS_SDK.getGlobalData("configInfo").config.is_show_desk_float.val), t.$watch("mySelectIndex", "selectIndexChangeHandler"), t.tab2pageDetail(!0), t.isShowBoostAd = Number(TACTICS_SDK.getGlobalData("configInfo").config.main_list_ad.val), t.initBoostGroupConfig(), t.isShowBoostComp && 1 != t.isShowBoostAd ? t.isShowNativeBoostGroupComp = !0 : (t.isShowBoostComp = !1, t.isAllowBackPress = !0), 2 == t.intent && t.channelUserLoginFunction(), t.getNowAstro(), t.getAssessList();
                                const e = TACTICS_SDK.getGlobalData("configInfo").config;
                                console.log("craig", e), "is_enter_show" in e && (t.enterShow = e.is_enter_show ? Number(e.is_enter_show.val) : 0, console.log("enterShow", t.enterShow)), "is_speed_show" in e && (t.speedShow = e.is_speed_show ? Number(e.is_speed_show.val) : 0, console.log("speedShow", t.speedShow)), this.getComplaintConfig()
                            }, initBoostGroupConfig() {
                                let t = this, e = TACTICS_SDK_UTILS.initBoostGroupConfig("READ_COMMON");
                                t.nativeBoostGroupController.isAuditUser = e.isAuditUser, t.nativeBoostGroupController.isBoostType = e.isBoostType, t.nativeBoostGroupController.maxAdCount = e.maxAdCount, t.nativeBoostGroupController.loopTimes = e.loopTimes, t.isShowBoostComp = e.isShowBoostComp
                            }, async checkPageEnterPop() {
                                const t = this;
                                await t.$app.$def.screenAdHandle() || (LOG("页面进入弹窗参数", t.pageDetail), POP_TOOLS.commonFunc2PatchPopShow(t.pageDetail, "PAGE_ENTRY", "", t.pageDetail.pageRoute, t.$app.$def))
                            }, onShow() {
                                this.isJump && (this.isJump = !1, this.pageDetail.pageOrigin = this.$app.$def.getPagesCodeInfo().pageOrigin, this.$app.$def.changeCommonDataByPageShow(this), this.isAllowBackPress = !0, this.nativeBoostGroupController.startTimeout++), AD_UTILS.viewShowHandler(), this.hideMask();
                                const t = this.$app.getAppData("dataUser");
                                this.refershUser = !1, t && t.params.getUser && setTimeout((() => {
                                    this.refershUser = !0
                                }), 0), REPORT_SDK && REPORT_SDK.page_show()
                            }, changeTabs(t) {
                                this.tabIndex = t.index, this.selectIndex = t.index, this.mySelectIndex = t.index, this.uploadMainPageClick(t.index)
                            }, uploadMainPageClick(t) {
                                let e = "";
                                switch (t) {
                                    case 0:
                                        e = "主页tab";
                                        break;
                                    case 1:
                                        e = "闯关tab";
                                        break;
                                    case 2:
                                        e = "我的tab"
                                }
                                COMMON_REPORT_UTILS.page_click_report(e)
                            }, computed: {}, getNowAstro() {
                                this.astroList = (0, s.astroList)(), this.nowAstroIndex = (0, s.getAstro)(), this.nowAstroIndex = 12 == this.nowAstroIndex ? 0 : this.nowAstroIndex
                            }, getAssessList() {
                                let t = this;
                                t.assessList = [{
                                    type: "心理测评",
                                    title: "你知道自己的情商水平吗？",
                                    id: 1
                                }, {type: "心理测评", title: "你知道自己的情商水平吗？", id: 2}, {
                                    type: "心理测评",
                                    title: "你知道自己的情商水平吗？",
                                    id: 3
                                }, {type: "心理测评", title: "你知道自己的情商水平吗？", id: 4}, {
                                    type: "心理测评",
                                    title: "你知道自己的情商水平吗？",
                                    id: 5
                                }, {
                                    type: "心理测评",
                                    title: "你知道自己的情商水平吗？",
                                    id: 6
                                }], $apis.example.getHomeData().then((e => {
                                    if (200 == e.code) {
                                        let i = e.data;
                                        t.topAssess = i.slice(0, 1), t.secondAssess = i.slice(1, 2), t.smallAssess = i.slice(2, i.length)
                                    } else $utils.showToast(e.msg, 0)
                                }))
                            }, routePath(t, e) {
                                router.push({uri: t, params: e})
                            }, hideMask() {
                                this.appearCount ? this.maskShow = !1 : ++this.appearCount
                            }, install() {
                                var t = this;
                                let e = setTimeout((() => {
                                    n.default.hasInstalled({
                                        success: function (e) {
                                            t.isIcon = e
                                        }
                                    }), clearTimeout(e)
                                }), 500)
                            }, addDeskTopEventHandle(t) {
                                switch (t.detail.eventName) {
                                    case"addDesktopRes":
                                        this.addDesktopDataHandle(t.detail.isAddSuccess);
                                        break;
                                    case"addDesktopClick":
                                        this.addDesktop();
                                        break;
                                    case"addDesktopClose":
                                        this.isCloseIcon = !0
                                }
                            }, onHide() {
                                this.isJump = !0, AD_UTILS.viewHideHandler(), REPORT_SDK && REPORT_SDK.page_hide()
                            }, onReady() {
                                DEVICE_UTILS.getInfo().then((t => {
                                    let e = t.brand.toLowerCase();
                                    e = "oppo" == e || "realme" == e || "oneplus" == e ? "oppo" : "honor" == e || "huawei" == e ? "huawei" : "redmi" == e || "xiaomi" == e || "小米" == e || "Redmi" == e || "小米红米" == e ? "xiaomi" : "vivo" == e ? "vivo" : "other", this.nowBrand = e, this.statusBarHeight = Math.ceil(750 * t.statusBarHeight / t.screenWidth), LOG("this.nowBrand", this.nowBrand)
                                }))
                            }, onBackPress() {
                                let t = this;
                                return t.isShowComplaintPop ? (t.isShowComplaintPop = !1, !0) : t.isAllowBackPress ? t.videoBqtConfig.isShow ? (t.videoBqtConfig.backPressTimes++, !0) : t.screenInserConfig.isShow ? (t.screenInserConfig.backPressTimes++, !0) : t.isShowNativeBoostGroupComp ? (t.nativeBoostGroupController.backPressTimes++, !0) : (POP_TOOLS.noAd4UseEventHandler({
                                    actionCode: "PAGE_BACK",
                                    code: ""
                                }, l({}, t.pageDetail), t.$app.$def), !0) : (t.backPressRefuseReport || (t.backPressRefuseReport = !0, COMMON_REPORT_UTILS.back_click_report("", "", "初始化拦截")), !0)
                            }, goBack() {
                                this.isExitDialog = !1, this.$app.exit()
                            }, onDestroy() {
                            }, selectIndexChangeHandler(t, e) {
                                console.log("selectIndexChangeHandler================>", t), this.changeTabPageDetail(t), this.getComplaintConfig(), 2 != t && this.tab2pageDetail(!1)
                            }, changeTabPageDetail(t) {
                                switch (Number(t)) {
                                    case 0:
                                        this.pageDetail.pageCode = "READ_MAIN", this.pageDetail.pageRoute = "/pagesA/Main?selectIndex=0", this.pageDetail.pageName = "主页", this.pageDetail.pageUrl = "主页";
                                        break;
                                    case 1:
                                        this.pageDetail.pageCode = "READ_KNOWLEDGE", this.pageDetail.pageRoute = "/pagesA/Main?selectIndex=1", this.pageDetail.pageName = "闯关首页", this.pageDetail.pageUrl = "闯关首页";
                                        break;
                                    case 2:
                                        this.pageDetail.pageCode = "READ_MINE", this.pageDetail.pageRoute = "/pagesA/Main?selectIndex=2", this.pageDetail.pageName = "我的页", this.pageDetail.pageUrl = "我的页"
                                }
                                let e = this.$app.$def.getPagesCodeInfo(Number(this.mySelectIndex));
                                console.log("getPagesCodeInfo====>", e), this.pageDetail.pageOrigin = e.pageOrigin, this.pathUrl = e.pathUrl
                            }, tab2pageDetail(t) {
                                this.$app.$def.changeCommonDataByPageShow(this), COMMON_REPORT_UTILS.page_show_report(this.pathUrl), t || POP_TOOLS.commonFunc2PatchPopShow(this.pageDetail, "PAGE_ENTRY", "", this.pageDetail.pageRoute, this.$app.$def)
                            }, routerJumpSelfHandeler(t) {
                                for (let e in t) console.log(e), this[e] = "selectIndex" == e ? Number(t[e]) : t[e];
                                console.log("routerJumpSelfHandeler======>", this.mySelectIndex)
                            }, addBoostComp() {
                                this.nativeBoostGroupController.getBoost++
                            }, nativeBoostGroupEventDispatchHandler(t) {
                                let e = this;
                                switch (LOG("VIEW", "nativeBoostGroupEventDispatchHandler======>", t), t.detail.eventName) {
                                    case"noBoostComp4Use":
                                        let i = e.nativeBoostGroupController.popCode,
                                            o = e.nativeBoostGroupController.actionCode;
                                        e.nativeBoostGroupController.popCode = "", LOG("CUSTOM", "当前广告池无可用组件"), POP_TOOLS.noAd4UseEventHandler({
                                            actionCode: o,
                                            code: i
                                        }, l({}, e.pageDetail), e.$app.$def);
                                        break;
                                    case"noPopCode":
                                        POP_TOOLS.commonFunc2PatchPopShow(e.pageDetail, "PAGE_BACK", "", e.pageDetail.pageRoute, e.$app.$def);
                                        break;
                                    case"firstAdLoadComplete":
                                        LOG("CUSTOM", "第一个广告获取结束"), e.checkPageEnterPop();
                                        break;
                                    case"closePopData":
                                        e.nativeBoostGroupController.popCode = "", POP_TOOLS.commonPopControllerEventDispatch(t.detail, l({}, e.pageDetail), e.$app.$def)
                                }
                            }, addBqtVideoPop(t, e = "Baidu_KHEKCERA", i = "PAGE_ENTRY", o = {}) {
                                let n = this, a = e, s = i, r = o;
                                n.videoBqtConfig.isShow && (n.videoBqtConfig.isShow = !1), setTimeout((() => {
                                    n.videoBqtConfig.popCode = `${a}`, n.videoBqtConfig.actionCode = `${s}`, n.videoBqtConfig.customAction = r, n.videoBqtConfig.isShow = !0
                                }), 300)
                            }, bqtVideoAdControllerEventDispatchHandler(t) {
                                let e = this;
                                LOG("BQT_AD", "bqtVideoAdControllerEventDispatchHandler======>", t), "closePopData" === t.detail.eventName && (POP_TOOLS.bqtVideoAdEventDispatch(t.detail, l({}, e.pageDetail), e.$app.$def), "videoAdClick" !== t.detail.action && (e.videoBqtConfig.isShow = !1))
                            }, bqtScreenInsPop(t, e = "BaiduScreenInsertion_SOM6EFUP", i = "PAGE_ENTRY", o = {}) {
                                LOG("===bqtScreenInsPop");
                                let n = this, a = e, s = i, r = o;
                                n.screenInserConfig.isShow && (n.screenInserConfig.isShow = !1), n.screenInserConfig.popCode = a, n.screenInserConfig.actionCode = s, n.screenInserConfig.customAction = r, n.screenInserConfig.isShow = !0
                            }, screenInserControllerEventDispatchHandler(t) {
                                let e = this;
                                LOG("BQT_AD", "screenInserControllerEventDispatchHandler======>", t), "closePopData" === t.detail.eventName && ("adLoadFailed" == t.detail.action ? POP_TOOLS.noAd4UseEventHandler({
                                    actionCode: t.detail.actionCode,
                                    code: t.detail.popData.popConfig.code
                                }, l({}, e.pageDetail), e.$app.$def) : (e.screenInserConfig.isShow = !1, POP_TOOLS.commonPopControllerEventDispatch(t.detail, l({}, e.pageDetail), e.$app.$def)))
                            }, goAstroDetail() {
                                COMMON_REPORT_UTILS.page_click_report("星座详情"), $utils.routetheUrl("/pagesA/AstroDetail", {pathUrl: "主页"}, !1)
                            }, goCpDetail() {
                                COMMON_REPORT_UTILS.page_click_report("星座速配"), $utils.routetheUrl("/pagesA/CpDetail", {pathUrl: "主页"}, !1)
                            }, goAssessPage(t, e) {
                                COMMON_REPORT_UTILS.page_click_report("测题:" + e), $utils.routetheUrl("/pagesA/AssessPage", {
                                    bookId: t,
                                    pathUrl: "主页"
                                }, !1)
                            }, channelUserLoginFunction(t = 0) {
                                let e = this;
                                return new Promise((async i => {
                                    let o = await $apis.example.login({
                                        androidId: e.$app.$def.android,
                                        oaid: e.$app.$def.oaid,
                                        channelId: e.$app.$def.channelId,
                                        linkId: e.$app.$def.linkId,
                                        brand: e.$app.$def.brand,
                                        regId: e.$app.$def.regId,
                                        versionCode: e.$app.$def.versionCode,
                                        versionName: e.$app.$def.versionName,
                                        intent: e.intent,
                                        model: encodeURIComponent(e.$app.$def.deviceInfo.model)
                                    });
                                    200 == o.code ? (e.isLogin = !0, e.$app.$def.isVip = o.data.isvip, $utils.setStorage("userInfo", o.data), $utils.setStorage("token", o.data.online_token), i()) : 0 == t ? e.channelUserLoginFunction(t + 1) : i()
                                }))
                            }, getComplaintConfig() {
                                try {
                                    let t = TACTICS_SDK.getGlobalData("configInfo").config;
                                    if (this.complaintOpen = Number(t.is_open_complaint.val), 0 == this.complaintOpen) return;
                                    this.complaintTop = Number(t.complaint_top.val) || 1e3, this.complaintLeft = Number(t.complaint_left.val) || 20, this.complaintIcon = t.complaint_icon.val || "../../assets/images/complaint_button.png";
                                    let e = t.complaint_page.val || [];
                                    e.length && (this.complaintShow = e.includes(this.pageDetail.pageRoute))
                                } catch (t) {
                                    console.log("getPageAdButtonAnimation=====>", t)
                                }
                            }, showComplaintClick() {
                                COMMON_REPORT_UTILS.page_click_report(`${this.pageDetail.pageName}投诉`, "", `${this.bookId}`, `${this.chapterId}`), this.isShowComplaintPop = !0
                            }, complaintPopCancelClickHandler() {
                                this.isShowComplaintPop = !1
                            }, complaintPopSureClickHandler(t) {
                                $apis.example.complaintApi(t.detail.param).then((t => {
                                    200 == t.code && $utils.showToast("非常感谢您的反馈，我们将第一时间进行处理", 0)
                                })), this.isShowComplaintPop = !1
                            }
                        });
                        const c = e.default || t.exports, d = ["public", "protected", "private"];
                        if (c.data && d.some((function (t) {
                            return c[t]
                        }))) throw new Error('页面VM对象中的属性data不可与"' + d.join(",") + '"同时存在，请使用private替换data名称');
                        c.data || (c.data = {}, c._descriptor = {}, d.forEach((function (t) {
                            const e = typeof c[t];
                            if ("object" === e) {
                                c.data = Object.assign(c.data, c[t]);
                                for (const e in c[t]) c._descriptor[e] = {access: t}
                            } else "function" === e && console.warn("页面VM对象中的属性" + t + "的值不能是函数，请使用对象")
                        })))
                    }
                }, 4996: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["percent", "content", "size"],
                            data: () => ({style: {}, circleSize: ""}),
                            onInit() {
                                this.$watch("percent", "watchPercentChange"), n.defineAdComponent.call(this, "circle")
                            },
                            watchPercentChange(t, e) {
                                n.dispatchAdEvent.call(this, "onPercentChange", t)
                            }
                        }
                    }
                }, 5813: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["imgsrc", "text", "btnstyle"],
                            data: {closeImg: "", closeText: "", closeImgStyle: ""},
                            onInit() {
                                n.defineAdComponent.call(this, "closeAdBtn")
                            }
                        }
                    }
                }, 1063: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["list", "customstyle", "item", "bindevent", "id", "btnAnimate"],
                            data: () => ({}),
                            onInit() {
                                n.defineAdComponent.call(this, "custom")
                            },
                            clickHandler(t, e) {
                                t && t.click && (e.adEventName = t.click, this.$emit("customClick", e), t.clickBubble || e.stopPropagation && e.stopPropagation())
                            },
                            touchstartHandler(t, e) {
                                e.stopPropagation && e.stopPropagation()
                            },
                            customClick(t) {
                                this.$emit("customClick", t), t.stopPropagation && t.stopPropagation()
                            },
                            videoFinish(t, e) {
                                t.finish && (e.adEventName = t.finish, this.$emit("customClick", e)), e.stopPropagation && e.stopPropagation()
                            },
                            videoTimeUpdate(t, e) {
                                t.timeupdate && (e.adEventName = t.timeupdate, this.$emit("customClick", e)), e.stopPropagation && e.stopPropagation()
                            },
                            videoPrepared(t, e) {
                                t.prepared && (e.adEventName = t.prepared, this.$emit("customClick", e)), e.stopPropagation && e.stopPropagation()
                            },
                            videoPause(t, e) {
                                t.pause && (e.adEventName = t.pause, this.$emit("customClick", e)), e.stopPropagation && e.stopPropagation()
                            },
                            videoError(t, e) {
                                t.error && (e.adEventName = t.error, this.$emit("customClick", e)), e.stopPropagation && e.stopPropagation()
                            },
                            videoStart(t, e) {
                                t.error && (e.adEventName = t.start, this.$emit("customClick", e)), e.stopPropagation && e.stopPropagation()
                            },
                            containerClick(t, e) {
                                (t = t || this.item) && t.click && (e.adEventName = t.click, this.$emit("customClick", e), t.clickBubble || e.stopPropagation && e.stopPropagation())
                            }
                        }
                    }
                }, 4845: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["visible"], data() {
                                return {
                                    overlayClass: "",
                                    panelClass: "",
                                    isVisible: this.visible,
                                    adData: {},
                                    style: {},
                                    closePng: ""
                                }
                            }, onInit() {
                                this.$watch("visible", "toggleVisible"), n.defineAdComponent.call(this, "downloadPanel")
                            }, toggleVisible(t) {
                                n.dispatchAdEvent.call(this, "toggleVisible", t)
                            }, closeClick(t) {
                                n.dispatchAdEvent.call(this, "closeClick", t)
                            }, btnClick(t) {
                                n.dispatchAdEvent.call(this, "btnClick", t)
                            }, panelClick(t) {
                                n.dispatchAdEvent.call(this, "panelClick", t)
                            }
                        }
                    }
                }, 4936: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["adstyle", "videoautoplay", "videomuted", "downloadpanel", "templateid", "showvolumn", "needrefresh"],
                            data: () => ({
                                feedType: "",
                                adData: {},
                                btnText: "",
                                closePng: "",
                                rePlayPng: "",
                                showTailFrame: !1,
                                tailFrameStyle: {},
                                isDownloadPanel: !1,
                                customPanel: !1,
                                videoMuted: !1,
                                templateId: "",
                                templateConfig: [],
                                isAdLoaded: !1,
                                downloadPanelConfig: [],
                                exposeId: "",
                                btnAnimate: ""
                            }),
                            onInit() {
                                n.defineAdComponent.call(this, "feedAd")
                            },
                            onAdExpose() {
                                n.dispatchAdEvent.call(this, "onAdExpose")
                            },
                            onAdDisappear() {
                                n.dispatchAdEvent.call(this, "onAdDisappear")
                            },
                            customClick(t) {
                                t.detail.adEventName && n.dispatchAdEvent.call(this, t.detail.adEventName, t)
                            }
                        }
                    }
                }, 1194: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            data: () => ({
                                isAdLoaded: !1,
                                feedType: "",
                                adData: {},
                                btnText: "",
                                closePng: "",
                                templateId: "",
                                templateConfig: [],
                                enableClose: !1,
                                countdown: 3,
                                showTailFrame: !1,
                                intMainStyle: {},
                                intContentStyle: {},
                                countDownStyle: {},
                                lastTime: 0,
                                videoMuted: !0,
                                enableSkip: !1
                            }), props: {}, onAdExpose() {
                                n.dispatchAdEvent.call(this, "onAdExpose")
                            }, onAdDisappear() {
                                n.dispatchAdEvent.call(this, "onAdDisappear")
                            }, customClick(t) {
                                t.detail.adEventName && n.dispatchAdEvent.call(this, t.detail.adEventName, t)
                            }, onInit() {
                                n.defineAdComponent.call(this, "intAd")
                            }, bindClose(t) {
                                t.stopPropagation(), this.$emit("close")
                            }, bindTimerClick(t) {
                                t.stopPropagation()
                            }
                        }
                    }
                }, 4028: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);

                        function a(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function s(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? a(Object(i), !0).forEach((function (e) {
                                    var o, n, a, s;
                                    o = t, n = e, a = i[e], (n = "symbol" == typeof (s = function (t, e) {
                                        if ("object" != typeof t || !t) return t;
                                        var i = t[Symbol.toPrimitive];
                                        if (void 0 !== i) {
                                            var o = i.call(t, "string");
                                            if ("object" != typeof o) return o;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(t)
                                    }(n)) ? s : String(s)) in o ? Object.defineProperty(o, n, {
                                        value: a,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : o[n] = a
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : a(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        e.default = {
                            props: ["entry", "itemStyle"],
                            data: () => ({style: {}, logoUrl: ""}),
                            computed: {
                                styleBox() {
                                    return s(s({}, this.itemStyle), this.style.logoContainer)
                                }
                            },
                            onInit() {
                                n.defineAdComponent.call(this, "logo")
                            },
                            onClick(t) {
                                n.dispatchAdEvent.call(this, "onClick", t)
                            },
                            onTouchstart(t) {
                                n.dispatchAdEvent.call(this, "onTouchstart", t)
                            }
                        }
                    }
                }, 821: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: {
                                appid: {type: [String, Number], required: !0},
                                apid: {type: [String, Number], required: !0},
                                type: {type: String, required: !0, default: "feed"},
                                entry: {type: String, required: !1},
                                openimg: {type: String, required: !1},
                                adstyle: {
                                    type: Object, required: !1, default: {}, validator: function (t) {
                                        return (0, n.validateAdstyle)(t)
                                    }
                                },
                                videoautoplay: {type: [Boolean, String], required: !1, default: "true"},
                                downloadpanel: {type: Boolean, default: !1},
                                videomuted: {type: [Boolean, String], required: !1, default: "true"},
                                templateid: {type: String, required: !1},
                                customclose: {type: Boolean, required: !1, default: !1},
                                splashrestrict: {type: String, required: !1, default: "0"},
                                device: {type: String, required: !1, default: ""},
                                mac: {type: String, required: !1, default: ""},
                                showCountdown: {type: Boolean, required: !1, default: !1},
                                showvolumn: {type: Boolean, required: !1, default: !0},
                                refresh: {required: !1},
                                skiptime: {type: Number, required: !1},
                                visible: {type: [Boolean, String, Number], required: !1, default: !1},
                                req: {type: String, required: !1, default: ""}
                            },
                            data: () => ({
                                adData: {},
                                panelVisible: !1,
                                adVisible: !0,
                                pageY: "100",
                                needrefresh: !1,
                                sendLogUrl: "",
                                intVisible: !1
                            }),
                            onInit() {
                                this.initTime = (new Date).getTime(), this.$watch("refresh", "onRefreshPropChange"), this.$watch("visible", "onIntVisibleChange"), n.defineAdComponent.call(this, "mobadsAd")
                            },
                            onIntVisibleChange(t, e) {
                                this.intVisible = !0, n.dispatchAdEvent.call(this, "onRefreshPropChange", t !== e)
                            },
                            onReady() {
                                n.dispatchAdEvent.call(this, "onReady")
                            },
                            onDestroy() {
                                n.dispatchAdEvent.call(this, "onDestroy")
                            },
                            onClick(t) {
                                n.dispatchAdEvent.call(this, "onClick", t)
                            },
                            onTouchstart(t) {
                                n.dispatchAdEvent.call(this, "onTouchstart", t)
                            },
                            downloadPanelClose(t) {
                                n.dispatchAdEvent.call(this, "downloadPanelClose", t)
                            },
                            downloadClick(t) {
                                n.dispatchAdEvent.call(this, "downloadClick", t)
                            },
                            showFeedback(t) {
                                n.dispatchAdEvent.call(this, "showFeedback", t)
                            },
                            initComplete(t) {
                                n.dispatchAdEvent.call(this, "initComplete", t)
                            },
                            areaClick(t) {
                                n.dispatchAdEvent.call(this, "onClick", t.detail)
                            },
                            onRefreshPropChange(t, e) {
                                n.dispatchAdEvent.call(this, "onRefreshPropChange", t !== e)
                            },
                            intClose() {
                                n.dispatchAdEvent.call(this, "onIntClose")
                            }
                        }
                    }
                }, 3984: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["openimg", "entry", "adstyle", "downloadpanel", "customclose", "splashrestrict", "skiptime"],
                            data: () => ({
                                adData: {},
                                countdown: 5,
                                imgUrl: "",
                                isshow: !1,
                                percent: 20,
                                closetype: 4,
                                style: {},
                                isDownloadPanel: !1,
                                btnText: "",
                                showSplashBtn: !1,
                                circleSize: 90
                            }),
                            onInit() {
                                n.defineAdComponent.call(this, "openAd")
                            },
                            imgLoadCompleted() {
                                n.dispatchAdEvent.call(this, "imgLoadCompleted")
                            },
                            logoClick() {
                                n.dispatchAdEvent.call(this, "logoClick")
                            },
                            onAdSkip(t) {
                                n.dispatchAdEvent.call(this, "onAdSkip", t)
                            },
                            imgLoadErr() {
                                n.dispatchAdEvent.call(this, "imgLoadErr")
                            },
                            onDestroy() {
                                n.dispatchAdEvent.call(this, "onDestroy")
                            },
                            privacyClick(t) {
                                n.dispatchAdEvent.call(this, "privacyClick", t)
                            },
                            permissionClick(t) {
                                n.dispatchAdEvent.call(this, "permissionClick", t)
                            }
                        }
                    }
                }, 1424: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(4078);
                        e.default = {
                            props: ["adstyle", "rewardtime", "closetime", "showCountdown"],
                            data: () => ({
                                adData: {},
                                templateConfig: [],
                                videomuted: !1,
                                showTailFrame: !1,
                                progress: 0,
                                lastTime: 0,
                                showSkip: !1,
                                rewardTime: 30,
                                lastRewardTime: 0
                            }),
                            onInit() {
                                n.defineAdComponent.call(this, "rewardAd")
                            },
                            customClick(t) {
                                t.detail.adEventName && n.dispatchAdEvent.call(this, t.detail.adEventName, t)
                            }
                        }
                    }
                }, 4410: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(5667);
                        e.default = {
                            props: {adId: {type: String, required: !0}}, onInit() {
                                n.defineAdComponent.call(this, "YlhAd")
                            }, onReady() {
                                n.dispatchAdEvent.call(this, "onReady")
                            }, onDestroy() {
                                n.dispatchAdEvent.call(this, "onDestroy")
                            }
                        }
                    }
                }, 9835: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(5667);
                        e.default = {
                            props: {adId: {type: String, required: !0}}, onInit() {
                                n.defineAdComponent.call(this, "YlhAdClickableArea")
                            }, onReady() {
                                n.dispatchAdEvent.call(this, "onReady")
                            }
                        }
                    }
                }, 8744: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n, a = (n = i(9084)) && n.__esModule ? n : {default: n};
                        e.default = {
                            data: {time: 5, pageVisibleStatus: !0},
                            props: {
                                actionCode: {type: String, default: ""},
                                countDownTime: {type: Number, default: 5},
                                positionRight: {type: Number, default: 50},
                                buttonText: {type: String, default: "跳过"},
                                buttonPosition: {type: Number, default: 3},
                                buttonStyle: {type: Number, default: 1}
                            },
                            onInit() {
                                this.time = this.countDownTime, this.updateTimerStatusHandler(), 50 !== this.positionRight && 0 !== this.positionRight || !this.pageVisibleStatus || this.countDown(), AD_SDK.resetScreenAdClick(), this.$watch("positionRight", "rightChangeHandler"), this.$on("updateTimerStatus", this.updateTimerStatusHandler), this.$on("pauseTimer", this.pauseTimer)
                            },
                            skip() {
                                this.computeSkipInterception() || this.endTime(`${this.action2Name(this.actionCode)}广告跳过`)
                            },
                            endTime(t) {
                                const e = this;
                                clearInterval(e.setInter), e.setInter = null, AD_SDK.isScreenAdClick() || (e._vmEvents && e.$emit("eventWatch", {logName: t}), AD_SDK.resetScreenAdClick())
                            },
                            countDown() {
                                const t = this;
                                t.setInter = setInterval((() => {
                                    t.time--, 0 === t.time && t.endTime(`${t.action2Name(t.actionCode)}广告倒计时结束`)
                                }), 1e3)
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && a.default[`${t}`] && a.default[`${t}`].name ? a.default[`${t}`].name : "未知", e
                            },
                            rightChangeHandler(t, e) {
                                50 !== t && 0 !== t || (this.countDown(), AD_SDK.resetScreenAdClick())
                            },
                            pauseTimer() {
                                LOG("双开屏", "双开屏倒计时暂停"), clearInterval(this.setInter), this.setInter = null
                            },
                            continueTimer() {
                                LOG("双开屏", "双开屏倒计时继续"), this.countDown()
                            },
                            updateTimerStatusHandler() {
                                this.$visible !== this.pageVisibleStatus && (this.$visible ? this.continueTimer() : this.pauseTimer(), this.pageVisibleStatus = this.$visible)
                            },
                            onDestroy() {
                                clearInterval(this.setInter), this.setInter = null
                            },
                            computed: {
                                getBtnPosition() {
                                    let t = "";
                                    switch (this.buttonPosition) {
                                        case 1:
                                            t = `top:200px;left:${this.positionRight || 50}px`;
                                            break;
                                        case 2:
                                            t = `bottom:264px;left:${this.positionRight || 50}px`;
                                            break;
                                        case 3:
                                        default:
                                            t = `top:200px;right:${this.positionRight || 50}px`;
                                            break;
                                        case 4:
                                            t = `bottom:264px;right:${this.positionRight || 50}px`
                                    }
                                    return t
                                }
                            },
                            computeSkipInterception() {
                                if (!CLICK_UTILS.dom_click_vali_shake("compute_skip_interception")) return LOG("计算跳过拦截", "防抖拦截"), !0;
                                let t = TACTICS_SDK.getGlobalData("configInfo").config;
                                const e = t.open_skip_interception && Number(t.open_skip_interception.val) || 0;
                                if (LOG("计算跳过拦截", "后台开关", e), e && "SCREEN_TOUCH" === this.actionCode && !CLICK_UTILS.dom_click_vali_shake("skip_interception", 1500)) {
                                    if (LOG("计算跳过拦截", "1s内点击"), this.$parent().curpopConfig && !AD_UTILS.isXM1(this.$app.$def.brand) && "huawei" != this.$app.$def.brand) return LOG("计算跳过拦截", "拦截+上报"), this.$parent().reportClick && this.$parent().reportClick("开屏1s内跳过不误触拦截"), !0;
                                    if (this.$parent().screenConfig || AD_UTILS.isXM1(this.$app.$def.brand) || "huawei" == this.$app.$def.brand) {
                                        let t = 0;
                                        if (this.$parent().curpopConfig ? (t = this.$parent().curpopConfig.screenConfig.isScreen2ClickAd, LOG("计算跳过拦截", "原生是否误触", t)) : this.$parent().screenConfig ? (t = this.$parent().screenConfig.isScreen2ClickAd, LOG("计算跳过拦截", "科大是否误触", t)) : LOG("计算跳过拦截", "计算误触失败", t), !t) return LOG("计算跳过拦截", "拦截+上报"), this.$parent().reportClick && this.$parent().reportClick("开屏1s内跳过不误触拦截"), !0
                                    }
                                }
                                return LOG("计算跳过拦截", "不拦截"), !1
                            }
                        }
                    }
                }, 298: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var o, n = (o = i("@app-module/system.device")) && o.__esModule ? o : {default: o};
                        e.default = {
                            data: {
                                addDesktopType: -1,
                                eventbutton: "eventbutton",
                                eventtype: "shortcut",
                                isOPPO: !0,
                                myButtonStyle: {width: 100, height: 100, bgColor: "#fff", radio: "4", image: ""}
                            },
                            props: {
                                buttonStyle: {
                                    type: Object,
                                    default: {width: 100, height: 100, bgColor: "#fff", radio: "4", image: ""}
                                }
                            },
                            onInit() {
                                console.log("............................", this.buttonStyle);
                                const t = this;
                                t.myButtonStyle = JSON.parse(JSON.stringify(t.buttonStyle)), n.default.getInfo({
                                    success: function (e) {
                                        let i = e.brand.toLowerCase();
                                        i = "oppo" == i || "realme" == i || "oneplus" == i ? "oppo" : "honor" == i || "huawei" == i ? "huawei" : "redmi" == i || "xiaomi" == i || "小米" == i || "Redmi" == i || "小米红米" == i ? "xiaomi" : "vivo" == i ? "vivo" : "other", console.log("deviceInfo========>", i), "oppo" == i && Number(e.platformVersionCode) > 1082 ? t.addDesktopType = 1 : "vivo" == i && Number(e.platformVersionCode) > 1091 ? t.addDesktopType = 2 : "xiaomi" == i && Number(e.platformVersionCode) >= 1100 || "huawei" == i && Number(e.platformVersionCode) >= 1083 ? t.addDesktopType = 3 : t.addDesktopType = 0
                                    }
                                })
                            },
                            addDesktopNormalClickHandle() {
                                this.$emit("eventWatch", {eventName: "addDesktopRes", addDesktopStatus: 1})
                            },
                            addDesktopClickHandle(t) {
                                console.log("addDesktopClickHandle=======>", t);
                                const {event_status_code: e = "空", eventStatusCode: i = "空"} = t;
                                0 == e || 0 == i ? this.$emit("eventWatch", {
                                    eventName: "addDesktopRes",
                                    addDesktopStatus: 2
                                }) : this.$emit("eventWatch", {eventName: "addDesktopRes", addDesktopStatus: 3})
                            }
                        }
                    }
                }, 3720: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, p(o("@app-module/system.prompt"));
                        var n = p(o("@app-module/system.router")), a = p(o("@app-module/system.device")),
                            s = p(o("@app-module/system.audio")), r = p(i(9084));

                        function p(t) {
                            return t && t.__esModule ? t : {default: t}
                        }

                        e.default = {
                            data: {
                                changeable: 0,
                                changeableOld: 0,
                                transAn: "",
                                adunitid: null,
                                adData: {imgUrlList: [], title: "", desc: "", clickBtnTxt: ""},
                                menuBarTop: 0,
                                menuBarRight: 0,
                                popShowGif: !0,
                                popShowGifImg: "",
                                backPressRefuseReport: !1,
                                popConfig: null,
                                delayConfig: {
                                    close: {type: !1, timer: null},
                                    crowd: {type: !1, timer: null},
                                    neg: {type: !1, timer: null},
                                    backPress: {type: !1, timer: null}
                                }
                            },
                            props: {
                                popConfigs: {type: Object, default: {}},
                                backPressTimes: {type: Number, default: 0},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                advConfig: {type: Object, default: {}},
                                pageName: {type: String, default: ""},
                                customAction: {type: Object, default: {}}
                            },
                            async onInit() {
                                this.$watch("changeableOld", "changeableFn");
                                let t = this;
                                t.popConfig = t.getFeature(t.popConfigs), LOG("BQT_AD", "唤醒1111", t.popConfig), t.popBeforeShowGif(t.popConfig), t.getMenuData(), t.initViewShow(), AD_SDK_UTILS.adConfigData.uploadFristPopClick++, TACTICS_SDK.sePopupShowTimes(t.popConfig.code), TACTICS_SDK.uploadAdInfo("show", t.advConfig);
                                let e = "否";
                                1 == t.popConfig.btnStyle.isBindingAd && (e = "是"), 1 == t.popConfig.commonStyle.notViewBackClosePopup && (e = "是");
                                let i = {
                                    ad_network: t.advConfig.ad_network,
                                    page_type: t.popConfig.popGroupName,
                                    ad_position: t.popConfig.popName,
                                    ad_style: t.popConfig.btnStyle.text ? "自定义文案" : "厂商文案",
                                    page_name: "有",
                                    ext_field_9: t.action2Name(t.actionCode),
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][t.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: e,
                                    ad_type: "APP唤醒",
                                    ad_id: t.advConfig.id,
                                    referer: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.function_name || "",
                                    scene: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.custom_content || ""
                                };
                                LOG("+==param", i), COMMON_REPORT_UTILS.custom_popup_show_report(i.ad_network, i.page_type, i.ad_position, i.ad_style, i.page_name, i.ext_field_9, i.ext_field_2, i.ext_field_3, i.ad_id, i.scene, i.referer, i.ad_type), t.$watch("backPressTimes", "backPressTimesChangeHandler")
                            },
                            replaceText: t => "@city" == t ? TACTICS_SDK.getReportData("LAST_VISITED_CITY") : "@brand" == t ? {
                                oppo: "OPPO",
                                vivo: "VIVO",
                                huawei: "华为",
                                xiaomi: "小米"
                            }[TACTICS_SDK.getReportData("MOBIL_FACTORY")] || "当前" : t,
                            changeableFn() {
                                if (LOG("=================22323"), ["roll", "rise"].includes(this.transAn) && !isNaN(this.changeableOld)) {
                                    LOG("=== // roll rise----", this.transAn);
                                    let t = /[.]/;
                                    if (LOG("== 是否包含小数点", t.test(this.changeableOld.toString())), t.test(this.changeableOld.toString())) {
                                        let t = setTimeout((() => {
                                            let e = 100 * this.changeable, i = 100 * this.changeableOld,
                                                o = i > 1e3 ? 2e3 : 400, n = Math.floor(Math.random() * o);
                                            e + n > i ? (this.changeable = (i / 100).toFixed(2), clearTimeout(t)) : (this.changeable = Number(Math.floor(e + n) / 100).toFixed(2), this.changeableFn())
                                        }), 200)
                                    } else {
                                        let t = setTimeout((() => {
                                            let e = this.changeableOld > 100 ? 150 : 30,
                                                i = Math.floor(Math.random() * e);
                                            this.changeable + i > this.changeableOld ? (this.changeable = this.changeableOld, clearTimeout(t)) : (this.changeable = Math.floor(Number(this.changeable) + Number(i)), this.changeableFn())
                                        }), 200)
                                    }
                                } else if ("count" != this.transAn || isNaN(this.changeableOld)) this.changeable = this.changeableOld; else {
                                    LOG("=== // 倒计时", this.changeable);
                                    let t = this.changeable > 0 && setTimeout((() => {
                                        this.changeable--, this.changeable > 0 ? this.changeableFn() : clearTimeout(t)
                                    }), 1e3)
                                }
                            },
                            getMenuData() {
                                let t = this;
                                try {
                                    let e = t.$page.getMenuBarRect();
                                    e && e.menuBarWidth > 0 && a.default.getInfo({
                                        success: function (i) {
                                            try {
                                                let o = 750 / i.screenWidth;
                                                t.menuBarRight = t.keepTwoDecimal(750 - e.menuBarRight * o), t.menuBarHeight = e.menuBarHeight, t.menuBarWidth = t.keepTwoDecimal(e.menuBarWidth * o), t.menuBarTop = t.keepTwoDecimal(e.menuBarTop * o)
                                            } catch (t) {
                                            }
                                        }
                                    })
                                } catch (t) {
                                }
                            },
                            keepTwoDecimal(t) {
                                var e = parseFloat(t);
                                return !isNaN(e) && Math.round(100 * t) / 100
                            },
                            getFeature(t) {
                                let e = this, i = Object.assign({}, t), o = parseFloat(t.commonStyle.scale);
                                return i.btnStyle.font = Number(i.btnStyle.font) * o, i.btnStyle.height = e.advConfig && Number(i.btnStyle.height) * o > 80 ? 80 : Number(i.btnStyle.height) * o, i.btnStyle.hotAbout = e.advConfig && Number(i.btnStyle.hotAbout) * o, i.btnStyle.hotBottom = e.advConfig && Number(i.btnStyle.hotBottom) * o, i.btnStyle.hotTop = e.advConfig && Number(i.btnStyle.hotTop) * o, i.btnStyle.left = Number(i.btnStyle.left) * o, i.btnStyle.radio = Number(i.btnStyle.radio) * o, i.btnStyle.top = Number(i.btnStyle.top) * o, i.btnStyle.width = Number(i.btnStyle.width) * o, i.closeStyle.distance = Number(i.closeStyle.distance) * o, i.closeStyle.height = Number(i.closeStyle.height) * o, i.closeStyle.top = Number(i.closeStyle.top) * o, i.closeStyle.width = Number(i.closeStyle.width) * o, i.negStyle.font = Number(i.negStyle.font) * o, i.negStyle.height = Number(i.negStyle.height) * o, i.negStyle.left = Number(i.negStyle.left) * o, i.negStyle.top = Number(i.negStyle.top) * o, i.negStyle.width = Number(i.negStyle.width) * o, i.popStyle.width = Number(i.popStyle.width) * o, i.popStyle.height = Number(i.popStyle.height) * o, i.materialStyle.height = Number(i.materialStyle.height) * o, i.materialStyle.width = Number(i.materialStyle.width) * o, i.materialStyle.top = Number(i.materialStyle.top) * o, i.crowdStyle.between = Number(i.crowdStyle.between) * o, i.crowdStyle.distance = Number(i.crowdStyle.distance) * o, i.crowdStyle.font = Number(i.crowdStyle.font) * o, i.crowdStyle.height = Number(i.crowdStyle.height) * o, i
                            },
                            initViewShow() {
                                let t = this;
                                t.popConfig.closeStyle.delay > 0 ? t.delayConfig.close.timer = setTimeout((() => {
                                    t.delayConfig.close.type = !0, clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null
                                }), t.popConfig.closeStyle.delay) : t.delayConfig.close.type = !0, t.popConfig.crowdStyle.delay > 0 ? t.delayConfig.crowd.timer = setTimeout((() => {
                                    t.delayConfig.crowd.type = !0, clearTimeout(t.delayConfig.crowd.timer), t.delayConfig.crowd.timer = null
                                }), t.popConfig.crowdStyle.delay) : t.delayConfig.crowd.type = !0, t.popConfig.negStyle.delay > 0 ? t.delayConfig.neg.timer = setTimeout((() => {
                                    t.delayConfig.neg.type = !0, clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null
                                }), t.popConfig.negStyle.delay) : t.delayConfig.neg.type = !0, t.popConfig.commonStyle.backLockTime > 0 ? t.delayConfig.backPress.timer = setTimeout((() => {
                                    t.delayConfig.backPress.type = !0, clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null
                                }), t.popConfig.commonStyle.backLockTime) : t.delayConfig.backPress.type = !0
                            },
                            stopAudio() {
                                s.default.stop()
                            },
                            initViewHide() {
                                let t = this;
                                t.stopAudio(), t.delayConfig.close.timer && (clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null), t.delayConfig.crowd.timer && (clearTimeout(t.delayConfig.crowd.timer), t.delayConfig.crowd.timer = null), t.delayConfig.neg.timer && (clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null), t.delayConfig.backPress.timer && (clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null), t.delayConfig.close.type = !1, t.delayConfig.crowd.type = !1, t.delayConfig.neg.type = !1, t.delayConfig.backPress.type = !1
                            },
                            backPressTimesChangeHandler(t, e) {
                                let i = this;
                                if (i.delayConfig.backPress.type) CLICK_UTILS.dom_click_vali_shake(`backPressTimesChangeHandler_${i.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(i.advConfig, i.pageName), i.reportClick("物理返回"), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: i.popConfig,
                                        advConfig: i.advConfig
                                    },
                                    index: i.index,
                                    eventName: "closePopData",
                                    action: "backPress",
                                    actionCode: i.actionCode,
                                    customAction: i.customAction
                                }), i.initViewHide()); else {
                                    if (LOG("CUSTOM", "物理返回拦截中"), i.backPressRefuseReport) return;
                                    i.backPressRefuseReport = !0;
                                    let t = {
                                        ad_position: i.popConfig.popName,
                                        page_type: i.popConfig.popGroupName,
                                        element_name: "关闭弹窗拦截"
                                    };
                                    COMMON_REPORT_UTILS.back_click_report(t.ad_position, t.page_type, t.element_name)
                                }
                            },
                            backIconClick() {
                                let t = this;
                                LOG("CUSTOM", "backIconClick"), CLICK_UTILS.dom_click_vali_shake(`backIconClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.advConfig, t.pageName), t.reportClick("返回按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "backIconClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())
                            },
                            closeClick() {
                                let t = this;
                                t.delayConfig.close.type ? (LOG("CUSTOM", "closeClick"), CLICK_UTILS.dom_click_vali_shake(`closeClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.advConfig, t.pageName), t.reportClick("关闭"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "closeClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())) : LOG("CUSTOM", "关闭按钮点击拦截中^_^")
                            },
                            negClick() {
                                let t = this;
                                t.delayConfig.neg.type ? (LOG("CUSTOM", "negClick"), CLICK_UTILS.dom_click_vali_shake(`negClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.advConfig, t.pageName), t.reportClick("负向按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "negClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())) : LOG("CUSTOM", "负向按钮点击拦截中^_^")
                            },
                            deleteBtnClick() {
                                let t = this;
                                LOG("CUSTOM", "deleteBtnClick"), CLICK_UTILS.dom_click_vali_shake(`negClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.advConfig, t.pageName), t.reportClick("关闭广告"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "deleteBtnClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }))
                            },
                            calcPopData(t) {
                                let e = t, i = parseFloat(e.commonStyle.scale);
                                if (this.changeable = "0.0", this.changeableOld = "0.0", e.flexOverall = ["", "center", "flex-end", "flex-start"][e.commonStyle.popLocation], e.customTextStyle = {
                                    canShow: !1,
                                    text: [{text: "22222", style: {color: "#fff"}}],
                                    style: {}
                                }, e.customBoxStyle = {style: {}}, e.customTextStyle.style = {
                                    height: Number(e.commonStyle.customHeight) * i + "px",
                                    width: Number(e.commonStyle.customWidth) * i + "px",
                                    top: Number(e.commonStyle.customTextOffsetTop) * i + "px",
                                    flexDirection: "row",
                                    justifyContent: "center",
                                    alignItems: "center",
                                    position: "absolute"
                                }, 0 == Number(e.commonStyle.customTextOffsetLeft) ? e.customTextStyle.style.alignSelf = "center" : e.customTextStyle.style.left = Number(e.commonStyle.customTextOffsetLeft) * i + "px", console.log("VIEW", "原始自定义数据  ", e.commonStyle.customText), e.commonStyle.customText) {
                                    let t = e.commonStyle.customText.split("-"), s = t[1];
                                    var o = [], n = {C: "color", F: "fontSize", B: "fontWeight"},
                                        a = t[0].split("$").filter((t => t));
                                    console.log("allr", a);
                                    for (let t of a) {
                                        console.log(t);
                                        let e = {text: "", style: {}, class: ""}, i = t.split("_");
                                        e.text = i[0];
                                        let a = i[1].split(",");
                                        for (let t of a) e.style[n[t.split(":")[0]]] = t.split(":")[1];
                                        o.push(e)
                                    }
                                    console.log("textList", JSON.stringify(o)), e.customTextStyle.text = o.map((t => (t.style.fontSize = Number(t.style.fontSize) * i + "px", t.style.alignSelf = "auto", ("@" == t.text || "@city" == t.text || "@brand" == t.text) && (t.class = s), t))), this.transAn = s, "count" == this.transAn && (this.changeable = e.commonStyle.countDownTime), this.changeableOld = POP_TOOLS.getDynamicText(this.actionCode) || "", LOG("== this.transAn", this.transAn)
                                }
                                if (e.customTextStyle.canShow = e.commonStyle.customDisplay, Number(e.commonStyle.customTextOffsetTop) < 0 ? (e.customTextStyle.style.top = "0px", e.customBoxStyle.style = {
                                    height: Number(-e.commonStyle.customTextOffsetTop) * i + "px",
                                    width: "100%"
                                }) : (e.customTextStyle.top = Number(e.commonStyle.customTextOffsetTop) * i + "px", e.customBoxStyle.style = {
                                    height: "0px",
                                    width: "100%"
                                }), e.commonStyle.isOpenAudio && e.commonStyle.mp3SoundEffect) try {
                                    s.default.src = e.commonStyle.mp3SoundEffect, s.default.play()
                                } catch (t) {
                                    LOG("VIEW", "音频播放失败", t)
                                }
                                e.commonStyle.shakeIsNextBtn, e.commonStyle.countDownIsNextBtn && (this.countDownIsNextBtnTimer = setTimeout((() => {
                                    this.adButtonClickHandle()
                                }), 1e3 * Number(e.commonStyle.countDownTime))), this.curpopConfig = e, console.log("==this.curpopConfig", this.curpopConfig)
                            },
                            popBeforeShowGif(t) {
                                this.popShowGifImg = t.commonStyle.transitionBeforeImg, t.commonStyle.transitionBeforeTime ? (this.popShowGif = !0, this.calcPopData(this.popConfig), setTimeout((() => {
                                    this.popShowGif = !1
                                }), Number(t.commonStyle.transitionBeforeTime))) : (this.calcPopData(this.popConfig), this.popShowGif = !1)
                            },
                            popAfterShowGif(t, e, i = !1) {
                                let o = this, n = e;
                                try {
                                    o.stopAudio(), clearTimeout(o.countDownIsNextBtnTimer)
                                } catch (t) {
                                }
                                if (i) try {
                                    COMMON_REPORT_UTILS.ad_overtime_report(o.advConfig.scenario)
                                } catch (t) {
                                    LOG(t)
                                }
                                this.popShowGifImg = o.popConfig.commonStyle.transitionAfterImg, o.popConfig.commonStyle.transitionAfterTime ? (o.popShowGif = !0, setTimeout((() => {
                                    o.popShowGif = !1, o.$emit("eventWatch", {
                                        popData: {
                                            popConfig: o.popConfig,
                                            advConfig: o.advConfig
                                        },
                                        index: o.index,
                                        eventName: t,
                                        action: n,
                                        actionCode: o.actionCode,
                                        customAction: o.customAction
                                    })
                                }), Number(o.popConfig.commonStyle.transitionAfterTime))) : (o.popShowGif = !1, o.$emit("eventWatch", {
                                    popData: {
                                        popConfig: o.popConfig,
                                        advConfig: o.advConfig
                                    },
                                    index: o.index,
                                    eventName: t,
                                    action: n,
                                    actionCode: o.actionCode,
                                    customAction: o.customAction
                                }))
                            },
                            reportClick(t) {
                                let e = this, i = e.advConfig;
                                LOG("CUSTOM", "reportClick", i, e.popConfig);
                                let o = "否";
                                1 == e.popConfig.btnStyle.isBindingAd && (o = "是"), 1 == e.popConfig.commonStyle.notViewBackClosePopup && (o = "是");
                                let n = {
                                    ad_network: e.advConfig.ad_network,
                                    page_type: e.popConfig.popGroupName,
                                    ad_position: e.popConfig.popName,
                                    ad_style: e.popConfig.btnStyle.text ? "自定义文案" : "厂商文案",
                                    page_name: "有",
                                    ext_field_9: e.action2Name(e.actionCode),
                                    scene: e.popConfig.configBaseFormData ? e.popConfig.configBaseFormData.custom_content : "",
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][e.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: o,
                                    element: t,
                                    ad_id: e.advConfig.id || "",
                                    referer: e.popConfig.configBaseFormData && e.popConfig.configBaseFormData.function_name || ""
                                };
                                POP_TOOLS.resetActionPopType(), LOG("CUSTOM", "reportClick", n), COMMON_REPORT_UTILS.custom_popup_click_report(n.page_type, n.ad_position, n.ad_network, n.element, n.ad_style, n.page_name, n.ext_field_9, n.ext_field_2, n.ext_field_3, n.ad_id, n.scene, n.referer, "APP唤醒")
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && r.default[`${t}`] && r.default[`${t}`].name ? r.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            },
                            adLoad(t) {
                                let e = this;
                                if (t && t.adData) {
                                    const i = JSON.parse(t.adData);
                                    e.adData = i, e.advConfig.result = "有广告", e.advConfig.isAdLoadError = !1, e.advConfig.ad_style = `${i.interactionType ? i.interactionType : "0"}`, AD_SDK.uploadAdInfo("request", e.advConfig), e.$emit("eventWatch", {
                                        popData: {
                                            popConfig: e.popConfig,
                                            advConfig: e.advConfig
                                        },
                                        index: e.index,
                                        eventName: "adLoadSuccess",
                                        action: "adLoadSuccess",
                                        actionCode: e.actionCode,
                                        customAction: e.customAction
                                    }), LOG("CUSTOM", "adLoad 信息流广告展示成功：", i)
                                }
                            },
                            adShow(t) {
                                LOG("CUSTOM", "adShow"), this.adPicShowFunc()
                            },
                            adPicShowFunc() {
                                LOG("CUSTOM", "adPicShowFunc==>that.advConfig", this.advConfig), AD_SDK.uploadAdInfo("show", this.advConfig)
                            },
                            adClickForBtn(t = 0) {
                                let e = this;
                                1 != t && 2 != t && 3 != t && CLICK_UTILS.dom_click_vali_shake(`adClickForBtn_${e.__id__}`, 3e3) && (e.reportClick("正向按钮", e.advConfig), LOG("CUSTOM", "adClickForBtn==>that.advConfig", e.advConfig), e.$app.$def.isNeedShowDialogForAdClick("btn").then((() => {
                                    n.default.push({uri: e.advConfig.advDetail.url}), TACTICS_SDK_UTILS.clickAppAdv(e.advConfig.advDetail.adId, e.advConfig.advDetail.mediaId), TACTICS_SDK.uploadAdInfo("click", e.advConfig, "btn"), AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickBtn"])
                                })))
                            },
                            noAdClickForBtn(t = 0) {
                                LOG("mxt 不跳转广告按钮");
                                let e = this;
                                CLICK_UTILS.dom_click_vali_shake(`noAdClickForBtn_${e.__id__}`, 500) && (e.reportClick("正向按钮", e.advConfig), LOG("CUSTOM", "adClickForBtn==>that.advConfig", e.advConfig), e.popAfterShowGif("closePopData", "noClickBtn"))
                            },
                            adClickForBtnNormal() {
                                this.adClickForBtn()
                            },
                            adClickForImg() {
                                let t = this;
                                CLICK_UTILS.dom_click_vali_shake(`adClickForImg_${t.__id__}`, 3e3) && (t.reportClick("素材中", t.advConfig), LOG("CUSTOM", "adClickForImg==>that.advConfig", t.advConfig), t.$app.$def.isNeedShowDialogForAdClick("img").then((() => {
                                    n.default.push({uri: t.advConfig.advDetail.url}), TACTICS_SDK_UTILS.clickAppAdv(t.advConfig.advDetail.adId, t.advConfig.advDetail.mediaId), TACTICS_SDK.uploadAdInfo("click", t.advConfig, "img"), AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickImg"])
                                })))
                            }
                        }
                    }
                }, 5197: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {vWidth: "auto"},
                            props: {
                                materialWidth: {type: Number, default: 650},
                                rows: {type: Number, default: 1},
                                appInfo: {type: Object, default: {appSize: 0}}
                            },
                            onInit() {
                                this.fSize = this.materialWidth < 500 ? 13 : 22, "huawei" === this.$app.$def.brand && this.appInfo.appVersion && (this.vWidth = this.fSize * this.appInfo.appVersion.length + "px")
                            },
                            toPrivacy(t) {
                                t.stopPropagation(), $utils.routetheUrl(this.appInfo.appPrivacyUrl, {}, !1)
                            },
                            toPermission(t) {
                                t.stopPropagation(), $utils.routetheUrl(this.appInfo.appPermissionUrl, {}, !1)
                            },
                            toIntroduce(t) {
                                t.stopPropagation(), "xiaomi" === this.$app.$def.brand ? $utils.routetheUrl(this.introduce, {}, !1) : this.appInfo.introduce.showAppDetailPage({adId: this.appInfo.introduce.advDetail.adId})
                            }
                        }
                    }
                }, 8976: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n, a = (n = i(9084)) && n.__esModule ? n : {default: n};
                        e.default = {
                            props: {
                                pageName: {type: String, default: ""},
                                advConfig: {type: Object, default: null},
                                popConfig: {type: Object, default: null},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                backPressTimes: {type: Number, default: 0},
                                adStyle: {
                                    type: Object,
                                    default: {
                                        buttonStyle: {
                                            fontSize: "25px",
                                            backgroundColor: "#ffffff",
                                            color: "#ffffff",
                                            width: "350px",
                                            height: "150px",
                                            borderRadius: "20px",
                                            marginRight: "24px",
                                            backgroundImage: "https://ims.readnos.com/image%2F2022-06-28%2F1656399103317_button.png",
                                            backgroundPosition: "center center",
                                            backgroundRepeat: "no-repeat",
                                            backgroundSize: "350px 150px"
                                        }
                                    }
                                },
                                customAction: {type: Object, default: {}}
                            },
                            data: {
                                reloadCount: 0,
                                refresh: "0",
                                isSuccess: !1,
                                backPressRefuseReport: !1,
                                downLoadPopIsShow: !1,
                                delayConfig: {
                                    close: {type: !1, timer: null},
                                    neg: {type: !1, timer: null},
                                    backPress: {type: !1, timer: null}
                                }
                            },
                            computed: {
                                videoautoplay() {
                                    return 1 == this.advConfig.is_auto_play_feed_video_ads
                                }, downloadpanel() {
                                    return 1 == this.advConfig.is_show_second_dialog
                                }, videomuted() {
                                    return 1 == this.advConfig.is_mute_feed_video_ads
                                }, showvolumn() {
                                    return 1 == this.advConfig.is_show_volume_icon
                                }, checkActionCodeIsScreen() {
                                    return "SCREEN_TOUCH" == this.actionCode || "SECOND_SCREEN_TOUCH" == this.actionCode
                                }
                            },
                            onInit() {
                                LOG("BQT_AD", this.advConfig), this.initViewHide(), this.$watch("backPressTimes", "backPressTimesChangeHandler")
                            },
                            adLoadHandle() {
                                let t = this;
                                LOG("BQT_AD", "百度广告===>adLoadHandle"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    eventName: "adLoadSuccess",
                                    action: "adLoadSuccess",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), AD_SDK.uploadAdInfo("request", Object.assign({}, t.advConfig, {result: "有广告"}))
                            },
                            adLoadHandleBl() {
                                AD_SDK.uploadAdInfo("request", Object.assign({}, this.advConfig, {
                                    result: "发起请求",
                                    scenario: "弹窗顶部补量广告"
                                })), AD_SDK.uploadAdInfo("request", Object.assign({}, this.advConfig, {
                                    result: "有广告",
                                    scenario: "弹窗顶部补量广告"
                                }))
                            },
                            adShowHandle() {
                                let t = this;
                                LOG("BQT_AD", "百度广告===>adShowHandle"), AD_SDK.uploadAdInfo("show", Object.assign({}, t.advConfig, {result: "有广告"})), t.isSuccess = !0, t.initViewShow(), TACTICS_SDK.sePopupShowTimes(t.popConfig.code), t.advConfig.referer = t.action2Name(t.actionCode), COMMON_REPORT_UTILS.ad_sdk_take(Object.assign({}, t.advConfig, {result: "有广告"}), t.pageName);
                                let e = "否";
                                1 == t.popConfig.btnStyle.isBindingAd && (e = "是"), 1 == t.popConfig.commonStyle.notViewBackClosePopup && (e = "是");
                                let i = {
                                    ad_network: t.advConfig.ad_network,
                                    page_type: t.popConfig.popGroupName,
                                    ad_position: t.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "有",
                                    ext_field_9: t.action2Name(t.actionCode),
                                    ad_type: "原生",
                                    ad_id: t.advConfig.id,
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][t.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: e,
                                    referer: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.function_name || "",
                                    scene: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.custom_content || ""
                                };
                                COMMON_REPORT_UTILS.custom_popup_show_report(i.ad_network, i.page_type, i.ad_position, i.ad_style, i.page_name, i.ext_field_9, i.ext_field_2, i.ext_field_3, i.ad_id, i.scene, i.referer, i.ad_type), t.checkActionCodeIsScreen && t.initScreenConfig()
                            },
                            adShowHandleBl() {
                                AD_SDK.uploadAdInfo("show", Object.assign({}, this.advConfig, {
                                    result: "有广告",
                                    scenario: "弹窗顶部补量广告"
                                }))
                            },
                            adClickHandle() {
                                let t = this;
                                t.reportClick("正向按钮"), LOG("BQT_AD", "百度广告===>adClickHandle", Number(TACTICS_SDK.getGlobalData("configInfo").config.is_bqt_can_show_dialog.val)), 1 == Number(TACTICS_SDK.getGlobalData("configInfo").config.is_bqt_can_show_dialog.val) ? (LOG("百度下载广告提示打开，延迟500 跳转"), setTimeout((() => {
                                    t.downLoadPopIsShow || t.$emit("eventWatch", {
                                        popData: {
                                            popConfig: t.popConfig,
                                            advConfig: t.advConfig
                                        },
                                        eventName: "closePopData",
                                        action: "adClick",
                                        actionCode: t.actionCode,
                                        customAction: t.customAction
                                    })
                                }), 500)) : (LOG("百度下载广告提示关闭，直接跳转"), setTimeout((() => {
                                    t.$emit("eventWatch", {
                                        popData: {popConfig: t.popConfig, advConfig: t.advConfig},
                                        eventName: "closePopData",
                                        action: "adClick",
                                        actionCode: t.actionCode,
                                        customAction: t.customAction
                                    })
                                }), 50))
                            },
                            adClickHandleBl() {
                                AD_SDK.uploadAdInfo("click", Object.assign({}, this.advConfig, {
                                    result: "有广告",
                                    scenario: "弹窗顶部补量广告"
                                }))
                            },
                            adCloseHandle() {
                                let t = this;
                                LOG("BQT_AD", "百度广告===>adCloseHandle"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    eventName: "closePopData",
                                    action: "adCloseClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                })
                            },
                            adErrorHandle(t) {
                                let e = this;
                                LOG("BQT_AD", "百度广告===>adErrorHandle eventWatch"), e.$emit("eventWatch", {
                                    popData: {
                                        popConfig: e.popConfig,
                                        advConfig: e.advConfig
                                    },
                                    eventName: "closePopData",
                                    action: "adLoadFailed",
                                    actionCode: e.actionCode,
                                    customAction: e.customAction
                                }), AD_SDK.uploadAdInfo("request", Object.assign({}, e.advConfig, {result: "无广告"}));
                                let i = "否";
                                1 == e.popConfig.btnStyle.isBindingAd && (i = "是"), 1 == e.popConfig.commonStyle.notViewBackClosePopup && (i = "是");
                                let o = {
                                    ad_network: e.advConfig.ad_network,
                                    page_type: e.popConfig.popGroupName,
                                    ad_position: e.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "无",
                                    ext_field_9: e.action2Name(e.actionCode),
                                    ad_type: "原生",
                                    ad_id: e.advConfig.id,
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][e.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: i,
                                    referer: e.popConfig.configBaseFormData && e.popConfig.configBaseFormData.function_name || "",
                                    scene: e.popConfig.configBaseFormData && e.popConfig.configBaseFormData.custom_content || ""
                                };
                                COMMON_REPORT_UTILS.custom_popup_show_report(o.ad_network, o.page_type, o.ad_position, o.ad_style, o.page_name, o.ext_field_9, o.ext_field_2, o.ext_field_3, o.ad_id, o.scene, o.referer, o.ad_type)
                            },
                            adErrorHandleBl(t) {
                                AD_SDK.uploadAdInfo("request", Object.assign({}, this.advConfig, {
                                    result: "无广告",
                                    scenario: "弹窗顶部补量广告"
                                }))
                            },
                            adDownloadClickHandle() {
                                let t = this;
                                LOG("BQT_AD", "百度广告===>adDownloadClickHandle"), t.downLoadPopIsShow = !1, t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    eventName: "closePopData",
                                    action: "adClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                })
                            },
                            adDownloadCloseHandle() {
                                this.downLoadPopIsShow = !1, LOG("BQT_AD", "百度广告===>adDownloadCloseHandle")
                            },
                            adDownloadShowHandle() {
                                LOG("BQT_AD", "百度广告===>adDownloadShowHandle"), this.downLoadPopIsShow = !0
                            },
                            adDownloadedHandle() {
                                this.downLoadPopIsShow = !1, LOG("BQT_AD", "百度广告===>adDownloadedHandle")
                            },
                            backPressTimesChangeHandler(t, e) {
                                let i = this;
                                if (i.delayConfig.backPress.type) CLICK_UTILS.dom_click_vali_shake(`backPressTimesChangeHandler_${i.__id__}`, 500) && (i.reportClick("物理返回"), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: i.popConfig,
                                        advConfig: i.advConfig
                                    },
                                    eventName: "closePopData",
                                    action: "backPress",
                                    actionCode: i.actionCode,
                                    customAction: i.customAction
                                }), i.initViewHide()); else {
                                    if (LOG("CUSTOM", "物理返回拦截中"), i.backPressRefuseReport) return;
                                    i.backPressRefuseReport = !0;
                                    let t = {
                                        ad_position: i.popConfig.popName,
                                        page_type: i.popConfig.popGroupName,
                                        element_name: "关闭弹窗拦截"
                                    };
                                    COMMON_REPORT_UTILS.back_click_report(t.ad_position, t.page_type, t.element_name)
                                }
                            },
                            backIconClick() {
                                let t = this;
                                LOG("BQT_AD", "backIconClick"), CLICK_UTILS.dom_click_vali_shake(`backIconClick_${t.__id__}`, 500) && (t.reportClick("返回按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    eventName: "closePopData",
                                    action: "backIconClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())
                            },
                            endTime(t) {
                                this.closeClick(t)
                            },
                            closeClick(t) {
                                let e = this;
                                if (t && t.detail && t.detail.logName) e.reportClick(t.detail.logName); else {
                                    if (!e.delayConfig.close.type) return void LOG("BQT_AD", "关闭按钮点击拦截中^_^");
                                    if (LOG("BQT_AD", "closeClick"), !CLICK_UTILS.dom_click_vali_shake(`closeClick_${e.__id__}`, 500)) return;
                                    e.reportClick("关闭")
                                }
                                e.$emit("eventWatch", {
                                    popData: {popConfig: e.popConfig, advConfig: e.advConfig},
                                    eventName: "closePopData",
                                    action: "closeClick",
                                    actionCode: e.actionCode,
                                    customAction: e.customAction
                                }), e.initViewHide()
                            },
                            negClick() {
                                let t = this;
                                t.delayConfig.neg.type ? (LOG("BQT_AD", "negClick"), CLICK_UTILS.dom_click_vali_shake(`negClick_${t.__id__}`, 500) && (t.reportClick("负向按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    },
                                    eventName: "closePopData",
                                    action: "negClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())) : LOG("BQT_AD", "负向按钮点击拦截中^_^")
                            },
                            initViewShow() {
                                let t = this;
                                t.popConfig.closeStyle.delay > 0 ? t.delayConfig.close.timer = setTimeout((() => {
                                    t.delayConfig.close.type = !0, clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null
                                }), t.popConfig.closeStyle.delay) : t.delayConfig.close.type = !0, t.popConfig.negStyle.delay > 0 ? t.delayConfig.neg.timer = setTimeout((() => {
                                    t.delayConfig.neg.type = !0, clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null
                                }), t.popConfig.negStyle.delay) : t.delayConfig.neg.type = !0, t.popConfig.commonStyle.backLockTime > 0 ? t.delayConfig.backPress.timer = setTimeout((() => {
                                    t.delayConfig.backPress.type = !0, clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null
                                }), t.popConfig.commonStyle.backLockTime) : t.delayConfig.backPress.type = !0
                            },
                            initViewHide() {
                                let t = this;
                                t.delayConfig.close.timer && (clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null), t.delayConfig.neg.timer && (clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null), t.delayConfig.backPress.timer && (clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null), t.delayConfig.close.type = !1, t.delayConfig.neg.type = !1, t.delayConfig.backPress.type = !1
                            },
                            onDestroy() {
                                this.initViewHide()
                            },
                            reportClick(t, e = {}) {
                                let i = this, o = Object.assign({}, i.advConfig, e);
                                LOG("CUSTOM", "reportClick", o, i.advConfig);
                                let n = "否";
                                1 == i.popConfig.btnStyle.isBindingAd && (n = "是"), 1 == i.popConfig.commonStyle.notViewBackClosePopup && (n = "是");
                                let a = {
                                    ad_network: o.ad_network,
                                    page_type: i.popConfig.popGroupName,
                                    ad_position: i.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "有",
                                    ext_field_9: i.action2Name(i.actionCode),
                                    element: t,
                                    scene: i.popConfig && i.popConfig.configBaseFormData ? i.popConfig.configBaseFormData.custom_content : "",
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][i.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: n,
                                    ad_type: "原生",
                                    ad_id: o.id || "",
                                    referer: i.popConfig.configBaseFormData && i.popConfig.configBaseFormData.function_name || ""
                                };
                                POP_TOOLS.resetActionPopType(), LOG("CUSTOM", "reportClick", a), COMMON_REPORT_UTILS.custom_popup_click_report(a.page_type, a.ad_position, a.ad_network, a.element, a.ad_style, a.page_name, a.ext_field_9, a.ext_field_2, a.ext_field_3, a.ad_id, a.scene, a.referer, a.ad_type)
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && a.default[`${t}`] && a.default[`${t}`].name ? a.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            },
                            async initScreenConfig() {
                                let t = {screenCountDownTime: 0}, e = TACTICS_SDK.getGlobalData("configInfo").config,
                                    i = {
                                        SCREEN_TOUCH: "screen_count_down_time",
                                        SECOND_SCREEN_TOUCH: "second_screen_count_down_time"
                                    };
                                const o = e[i[this.actionCode]] && Number(e[i[this.actionCode]].val);
                                t.screenCountDownTime = o || 5, LOG("开屏误触", "百度开屏后台配置倒计时", t.screenCountDownTime), this.screenConfig = t
                            }
                        }
                    }
                }, 4353: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n, a = (n = i(9084)) && n.__esModule ? n : {default: n};
                        e.default = {
                            props: {
                                pageName: {type: String, default: ""},
                                advConfig: {type: Object, default: null},
                                popConfig: {type: Object, default: null},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                backPressTimes: {type: Number, default: 0},
                                customAction: {type: Object, default: {}}
                            },
                            data: {
                                intVisible: 0,
                                backPressRefuseReport: !1,
                                delayConfig: {backPress: {type: !1, timer: null}}
                            },
                            onInit() {
                                LOG("BQT_AD", this.advConfig), this.initViewHide(), this.intVisible = Date.now(), this.$watch("backPressTimes", "backPressTimesChangeHandler")
                            },
                            adShowHandle() {
                                let t = this;
                                LOG("BQT_AD", "百度广告===>adShowHandle"), AD_SDK.uploadAdInfo("show", Object.assign({}, t.advConfig, {result: "有广告"})), t.initViewShow(), TACTICS_SDK.sePopupShowTimes(t.popConfig.code), t.advConfig.referer = t.action2Name(t.actionCode), COMMON_REPORT_UTILS.ad_sdk_take(Object.assign({}, t.advConfig, {result: "有广告"}), t.pageName);
                                let e = "否";
                                1 == t.popConfig.btnStyle.isBindingAd && (e = "是"), 1 == t.popConfig.commonStyle.notViewBackClosePopup && (e = "是");
                                let i = {
                                    ad_network: t.advConfig.ad_network,
                                    page_type: t.popConfig.popGroupName,
                                    ad_position: t.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "有",
                                    ext_field_9: t.action2Name(t.actionCode),
                                    ad_type: "原生",
                                    ad_id: t.advConfig.id,
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][t.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: e,
                                    referer: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.function_name || "",
                                    scene: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.custom_content || ""
                                };
                                COMMON_REPORT_UTILS.custom_popup_show_report(i.ad_network, i.page_type, i.ad_position, i.ad_style, i.page_name, i.ext_field_9, i.ext_field_2, i.ext_field_3, i.ad_id, i.scene, i.referer, i.ad_type)
                            },
                            adClickHandle() {
                                let t = this;
                                t.reportClick("正向按钮"), LOG("BQT_AD", "百度广告===>adClickHandle", Number(TACTICS_SDK.getGlobalData("configInfo").config.is_bqt_can_show_dialog.val)), LOG("百度下载广告提示关闭，直接跳转"), setTimeout((() => {
                                    t.$emit("eventWatch", {
                                        popData: {popConfig: t.popConfig, advConfig: t.advConfig},
                                        eventName: "closePopData",
                                        action: "adClickBtn",
                                        actionCode: t.actionCode
                                    })
                                }), 50)
                            },
                            adCloseHandle() {
                                let t = this;
                                LOG("BQT_AD", "百度广告===>adCloseHandle"), t.reportClick("关闭按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: t.advConfig
                                    }, eventName: "closePopData", action: "closeClick", actionCode: t.actionCode
                                })
                            },
                            adErrorHandle(t) {
                                let e = this;
                                LOG("BQT_AD", "百度广告===>adErrorHandle eventWatch"), e.$emit("eventWatch", {
                                    popData: {
                                        popConfig: e.popConfig,
                                        advConfig: e.advConfig
                                    }, eventName: "closePopData", action: "adLoadFailed", actionCode: e.actionCode
                                }), AD_SDK.uploadAdInfo("request", Object.assign({}, e.advConfig, {result: "无广告"}));
                                let i = "否";
                                1 == e.popConfig.btnStyle.isBindingAd && (i = "是"), 1 == e.popConfig.commonStyle.notViewBackClosePopup && (i = "是");
                                let o = {
                                    ad_network: e.advConfig.ad_network,
                                    page_type: e.popConfig.popGroupName,
                                    ad_position: e.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "无",
                                    ext_field_9: e.action2Name(e.actionCode),
                                    ad_type: "原生",
                                    ad_id: e.advConfig.id,
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][e.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: i,
                                    referer: e.popConfig.configBaseFormData && e.popConfig.configBaseFormData.function_name || "",
                                    scene: e.popConfig.configBaseFormData && e.popConfig.configBaseFormData.custom_content || ""
                                };
                                COMMON_REPORT_UTILS.custom_popup_show_report(o.ad_network, o.page_type, o.ad_position, o.ad_style, o.page_name, o.ext_field_9, o.ext_field_2, o.ext_field_3, o.ad_id, o.scene, o.referer, o.ad_type)
                            },
                            backPressTimesChangeHandler(t, e) {
                                let i = this;
                                if (i.delayConfig.backPress.type) i.reportClick("物理返回"), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: i.popConfig,
                                        advConfig: i.advConfig
                                    }, eventName: "closePopData", action: "backPress", actionCode: i.actionCode
                                }), i.initViewHide(); else {
                                    if (LOG("CUSTOM", "物理返回拦截中"), i.backPressRefuseReport) return;
                                    i.backPressRefuseReport = !0;
                                    let t = {
                                        ad_position: i.popConfig.popName,
                                        page_type: i.popConfig.popGroupName,
                                        element_name: "关闭弹窗拦截"
                                    };
                                    COMMON_REPORT_UTILS.back_click_report(t.ad_position, t.page_type, t.element_name)
                                }
                            },
                            initViewShow() {
                                let t = this;
                                t.popConfig.commonStyle.backLockTime > 0 ? t.delayConfig.backPress.timer = setTimeout((() => {
                                    t.delayConfig.backPress.type = !0, clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null
                                }), t.popConfig.commonStyle.backLockTime) : t.delayConfig.backPress.type = !0
                            },
                            initViewHide() {
                                let t = this;
                                t.delayConfig.backPress.timer && (clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null), t.delayConfig.backPress.type = !1
                            },
                            onDestroy() {
                                this.initViewHide()
                            },
                            reportClick(t, e = {}) {
                                let i = this, o = Object.assign({}, i.advConfig, e);
                                LOG("CUSTOM", "reportClick", o, i.popConfig);
                                let n = {
                                    ad_network: o.ad_network,
                                    page_type: i.popConfig.popGroupName,
                                    ad_position: i.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "有",
                                    ext_field_9: i.action2Name(i.actionCode),
                                    element: t,
                                    scene: i.popConfig && i.popConfig.configBaseFormData ? i.popConfig.configBaseFormData.custom_content : "",
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][i.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: "否",
                                    ad_type: "原生",
                                    ad_id: o.id || "",
                                    referer: i.popConfig.configBaseFormData && i.popConfig.configBaseFormData.function_name || ""
                                };
                                POP_TOOLS.resetActionPopType(), LOG("CUSTOM", "reportClick", n), COMMON_REPORT_UTILS.custom_popup_click_report(n.page_type, n.ad_position, n.ad_network, n.element, n.ad_style, n.page_name, n.ext_field_9, n.ext_field_2, n.ext_field_3, n.ad_id, n.scene, n.referer, n.ad_type)
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && a.default[`${t}`] && a.default[`${t}`].name ? a.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            }
                        }
                    }
                }, 6057: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n, a = (n = i(9084)) && n.__esModule ? n : {default: n};

                        function s(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function r(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? s(Object(i), !0).forEach((function (e) {
                                    p(t, e, i[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : s(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        function p(t, e, i) {
                            var o;
                            return (e = "symbol" == typeof (o = function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var o = i.call(t, "string");
                                    if ("object" != typeof o) return o;
                                    throw new TypeError("@@toPrimitive must return a primitive value.")
                                }
                                return String(t)
                            }(e)) ? o : String(o)) in t ? Object.defineProperty(t, e, {
                                value: i,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : t[e] = i, t
                        }

                        e.default = {
                            props: {
                                pageName: {type: String, default: ""},
                                popCode: {type: String, default: ""},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                backPressTimes: {type: Number, default: 0},
                                customAction: {type: Object, default: {}}
                            },
                            data: {
                                videoConfig: {isShow: !1, popConfig: null, customAction: {}},
                                bqtConfig: {isShow: !1, advConfig: null, adStyle: null, customAction: {}},
                                appConfig: {
                                    isShow: !1,
                                    advConfig: null,
                                    adStyle: null,
                                    advConfig: null,
                                    customAction: {}
                                }
                            },
                            onInit() {
                                this.patchAdCompShow(this.popCode)
                            },
                            async patchAdCompShow(t) {
                                if (!t) return void console.error("百度视频广告组件(bqt-video-ad-controller) 函数(patchAdCompShow) 传入的弹窗code为空,请排查");
                                let e = this;
                                e.bqtConfig.isShow = !1, e.videoConfig.isShow = !1, e.appConfig.isShow = !1;
                                let i = t.split("_")[0].toLowerCase(),
                                    o = await TACTICS_SDK_UTILS.getPopupConfigByPopupCode(t);
                                if (o) switch (LOG("BQT_AD", "1获取的弹窗配置", o), i) {
                                    case"encourage":
                                        e.videoConfig.popConfig = Object.assign({}, o, JSON.parse(JSON.stringify(e.customAction))), e.videoConfig.customAction = Object.assign({}, e.customAction), e.videoConfig.isShow = !0;
                                        break;
                                    case"baidu":
                                        e.bqtConfig.popConfig = Object.assign({}, o, JSON.parse(JSON.stringify(e.customAction)));
                                        let i = await e.getManuAdvCommon("通用自定义弹窗", "AD_POP_COMMON", 3, 1, o.popGroupName, o.popName);
                                        if (LOG("BQT_AD", "百度广告获取的数据", i, t), "success" == i.type) {
                                            o.materialStyle.height = 320 * o.materialStyle.width / 702;
                                            let t = {
                                                buttonStyle: {
                                                    fontSize: `${o.btnStyle.font}px`,
                                                    backgroundColor: 1 == o.btnStyle.styleType ? o.btnStyle.bgColor : "",
                                                    color: o.btnStyle.color,
                                                    width: `${o.btnStyle.width}px`,
                                                    height: `${o.btnStyle.height}px`,
                                                    borderRadius: `${o.btnStyle.radio}px`,
                                                    marginRight: `${o.btnStyle.btnRight}px`,
                                                    backgroundImage: 1 == o.btnStyle.styleType ? "" : o.btnStyle.image,
                                                    backgroundPosition: "center center",
                                                    backgroundRepeat: "no-repeat",
                                                    backgroundSize: `${o.btnStyle.width}px ${o.btnStyle.height}px`
                                                },
                                                imgStyle: {
                                                    width: `${o.materialStyle.width}px`,
                                                    height: `${o.materialStyle.height}px`
                                                },
                                                titleStyle: {lines: "1"}
                                            };
                                            e.bqtConfig.adStyle = t;
                                            let n = i.data;
                                            LOG("BQT_AD", "百度广告原始数据", JSON.parse(JSON.stringify(n))), n.bqt_template_encode = 1 == o.btnStyle.position ? "3002" : "3003", LOG("BQT_AD", "百度广告更新后数据", JSON.parse(JSON.stringify(n))), e.bqtConfig.advConfig = JSON.parse(JSON.stringify(n)), e.bqtConfig.customAction = Object.assign({}, e.customAction), e.bqtConfig.isShow = !0
                                        } else e.$emit("eventWatch", {
                                            popData: {popConfig: null, advConfig: null},
                                            code: t,
                                            eventName: "closePopData",
                                            action: "adRequestFailed",
                                            actionCode: e.actionCode,
                                            popStyleName: "baidu"
                                        });
                                        break;
                                    case"appad":
                                        LOG("BQT_AD", "唤醒广告获取的数据", o);
                                        let n = await e.getManuAdvCommon("通用自定义弹窗", "AD_POP_COMMON", 4, 1, 1, o.popGroupName, o.popName);
                                        if (LOG("BQT_AD", "唤醒广告获取的数据", n), "success" == n.type) {
                                            let t = n.data;
                                            e.appConfig.popConfig = Object.assign({}, o, JSON.parse(JSON.stringify(e.customAction))), e.appConfig.advConfig = JSON.parse(JSON.stringify(t)), e.appConfig.customAction = Object.assign({}, e.customAction), e.appConfig.isShow = !0
                                        } else {
                                            try {
                                                e.reportAppNoUserAd(Object.assign({}, o, JSON.parse(JSON.stringify(e.customAction))))
                                            } catch (t) {
                                                LOG("==error", t)
                                            }
                                            e.$emit("eventWatch", {
                                                popData: {popConfig: null, advConfig: null},
                                                code: t,
                                                eventName: "closePopData",
                                                action: "adRequestFailed",
                                                actionCode: e.actionCode,
                                                popStyleName: "appad"
                                            })
                                        }
                                } else e.$emit("eventWatch", {
                                    popData: {popConfig: null, advConfig: null},
                                    code: t,
                                    eventName: "closePopData",
                                    action: "popCodeError",
                                    actionCode: e.actionCode,
                                    popStyleName: i
                                })
                            },
                            reportAppNoUserAd(t) {
                                LOG("=========reportAppNoUserAd", t);
                                let e = "否";
                                1 == t.btnStyle.isBindingAd && (e = "是"), 1 == t.commonStyle.notViewBackClosePopup && (e = "是");
                                let i = {
                                    ad_network: 1,
                                    page_type: t.popGroupName,
                                    ad_position: t.popName,
                                    ad_style: t.btnStyle.text ? "自定义文案" : "厂商文案",
                                    page_name: "无",
                                    ext_field_9: this.action2Name(this.actionCode),
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][t.btnStyle.jumpKey] || "未知",
                                    ext_field_3: e,
                                    ad_type: "APP唤醒",
                                    ad_id: "",
                                    referer: t.configBaseFormData && t.configBaseFormData.function_name || "",
                                    scene: t.configBaseFormData && t.configBaseFormData.custom_content || ""
                                };
                                LOG("+==param", i), COMMON_REPORT_UTILS.custom_popup_show_report(i.ad_network, i.page_type, i.ad_position, i.ad_style, i.page_name, i.ext_field_9, i.ext_field_2, i.ext_field_3, i.ad_id, i.scene, i.referer, i.ad_type)
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && a.default[`${t}`] && a.default[`${t}`].name ? a.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            },
                            bqtEvnetWatchHandle(t) {
                                LOG("BQT_AD", "111evt==>", t), "closePopData" === t.detail.eventName && (LOG("BQT_AD", "222222==>"), this.$emit("eventWatch", r(r({}, t.detail), {}, {popStyleName: "baidu"})), this.$app.$def.screenAdEnd(t))
                            },
                            videoEvnetWatchHandle(t) {
                                LOG("BQT_AD", "evt==>", t), "closePopData" === t.detail.eventName && (LOG("BQT_AD", "222222==>"), this.$emit("eventWatch", r(r({}, t.detail), {}, {popStyleName: "encourage"})))
                            },
                            appEvnetWatchHandle(t) {
                                LOG("BQT_AD", "evt==>", t), "closePopData" === t.detail.eventName && (LOG("BQT_AD", "222222==>"), this.$emit("eventWatch", r(r({}, t.detail), {}, {popStyleName: "appad"})))
                            },
                            getManuAdvCommon(t, e, i, o, n, a, s) {
                                return LOG("获取广告1", ...arguments), new Promise(((r, p) => {
                                    4 == i ? TACTICS_SDK_UTILS.getAppAdvData({
                                        scenario: t,
                                        sceneCode: e,
                                        adType: i,
                                        adTimes: o,
                                        popName: s,
                                        popGroupName: a,
                                        requestNum: n
                                    }).then((t => {
                                        r({type: "success", data: t})
                                    })).catch((t => {
                                        r({type: "failed", data: t})
                                    })) : AD_SDK_UTILS.getAd({
                                        scenario: t,
                                        sceneCode: e,
                                        adType: i,
                                        adTimes: o,
                                        popName: s,
                                        popGroupName: a,
                                        requestNum: n,
                                        success: function (t) {
                                            r({type: "success", data: t})
                                        },
                                        fail: function (t) {
                                            r({type: "failed", data: t})
                                        }
                                    })
                                }))
                            }
                        }
                    }
                }, 8438: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {isShowComplaintPop: !1},
                            props: {appType: {type: String, default: ""}},
                            selectItem(t) {
                                "toVip" === t ? ($utils.routetheUrl("/pagesB/Vip", {}, !1), this.$emit("eventClick", {type: "closePop"})) : this.$emit("eventClick", {type: t})
                            },
                            complaintPopClick() {
                                this.isShowComplaintPop = !0
                            },
                            complaintPopCancelClickHandler() {
                                this.isShowComplaintPop = !1, this.selectItem("closePop")
                            },
                            complaintPopSureClickHandler(t) {
                                $apis.example.complaintApi(t.detail.param).then((t => {
                                    200 == t.code && $utils.showToast("非常感谢您的反馈，我们将第一时间进行处理", 0)
                                })), this.isShowComplaintPop = !1, this.selectItem("closePop")
                            }
                        }
                    }
                }, 730: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {
                                complaintCuntDown: 5,
                                complaintTimer: null,
                                craig: !1
                            }, props: {isShowLastComplaintPop: {type: Boolean, default: !1}}, onInit() {
                                this.startComplaintCountDown()
                            }, complainCancelAction() {
                                let t = this;
                                setTimeout((() => {
                                    t.$emit("cancelClick")
                                }), 0), t.craig = !0, COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "负向按钮", "", "投诉正向按钮弹窗")
                            }, exitHandler() {
                                this.$app.$def.exitApp = !0, this.$app.exit(), COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "正向按钮", "", "投诉正向按钮弹窗")
                            }, startComplaintCountDown() {
                                this.complaintCuntDown = 5, this.complaintTimer = setInterval((() => {
                                    this.complaintCuntDown > 1 ? this.complaintCuntDown -= 1 : (clearInterval(this.complaintTimer), this.craig || (COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "正向按钮", "", "投诉正向按钮弹窗"), this.$app.$def.exitApp = !0, this.$app.exit()))
                                }), 1e3)
                            }
                        }
                    }
                }, 4327: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var o, n = (o = i("@app-module/system.router")) && o.__esModule ? o : {default: o};
                        e.default = {
                            data: {
                                complaintPlaceholer: "请描述具体原因，我们会尽快处理",
                                complaintContent: "",
                                adQuestion: "",
                                adQuestionList: ["广告太多", "内容敏感", "血腥暴力", "涉黄赌毒", "虚假欺诈", "抄袭/侵权", "广告相关", "其他问题"],
                                phone: "18091825990"
                            }, onInit() {
                                this.phone = TACTICS_SDK.getGlobalData("complaint_tel") || "18091825990"
                            }, complainCancelAction() {
                                let t = this;
                                t.$element("compaintTextarea").focus({focus: !1}), setTimeout((() => {
                                    t.$emit("cancelClick")
                                }), 0), COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "负向按钮", "", "投诉弹窗")
                            }, selectItem(t) {
                                this.adQuestion = t
                            }, complainSureAction() {
                                let t = this;
                                if ("" === t.adQuestion) return $utils.showToast("请选择举报类型");
                                t.$element("compaintTextarea").focus({focus: !1}), setTimeout((() => {
                                    t.$emit("sureClick", {
                                        param: {
                                            complaint_content: t.complaintContent,
                                            complaint_type: t.adQuestionList[t.adQuestion],
                                            androidId: t.$app.$def.android
                                        }
                                    })
                                }), 0), COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "正向按钮", "", "投诉弹窗")
                            }, callFn() {
                                COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "投诉电话", "", "投诉弹窗"), n.default.push({uri: `tel://${this.phone}`})
                            }
                        }
                    }
                }, 75: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {isSupportLottie: !1},
                            props: {
                                loop: {type: Boolean, default: !0},
                                source: {type: String, default: ""},
                                src: {type: String, default: ""},
                                imgStyle: {type: String, default: ""}
                            },
                            onReady() {
                                this.$app.$def.deviceInfo.platformVersionCode >= 1100 && (this.isSupportLottie = !0)
                            },
                            errorFunction() {
                                this.isSupportLottie = !1
                            }
                        }
                    }
                }, 317: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {
                                autoPlay: !0,
                                indicator: !1,
                                loopPlay: !0,
                                sliderValue: 3e3,
                                isVertical: !0,
                                marqueeList: [],
                                marqueeTop: "80px",
                                marqueeHeight: "50px",
                                isShowPopFlag: !0
                            },
                            props: {
                                posType: {type: String, default: "fixed"},
                                posLeft: {type: String, default: "40px"},
                                popBack: {type: Boolean, default: !0}
                            },
                            onReady() {
                                this.makeMarqueeList(), this.getMenuBarRect()
                            },
                            getMenuBarRect() {
                                let t = this;
                                ["READ_WELFARE", "DZP_ACTIVITY", "VIDEO_WELFARE"].includes(t.$app.$def.pageCodeInfo.pageCode) || (t.isShowPopFlag = !1);
                                let e = t.$app.$def.deviceInfo.platformVersionCode >= 1090 ? t.$page.getMenuBarBoundingRect() : "";
                                LOG("NOWMENUPOS1", e), e ? e.menuBarHeight < 20 ? (t.marqueeTop = "80px", t.marqueeHeight = "50px") : (t.marqueeTop = e.menuBarTop + "px", t.marqueeHeight = e.menuBarHeight + "px") : (LOG("nomenuPos", t.popBack), t.isShowPopFlag = t.popBack, t.marqueeTop = "80px", t.marqueeHeight = "50px", t.posType = "fixed", t.posLeft = "40px;")
                            },
                            backBtnClick() {
                                COMMON_REPORT_UTILS.page_click_report("返回"), this.$root().pageBack && this.$root().pageBack()
                            },
                            randomSort: (t, e) => Math.random() > .5 ? -1 : 1,
                            makeMarqueeList() {
                                this.marqueeList = [{
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892340059_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192315.png",
                                    userName: "内斯塔",
                                    userCoin: "2050"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892333904_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192303.png",
                                    userName: "土夫子",
                                    userCoin: "561"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892326788_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192247.png",
                                    userName: "the dan",
                                    userCoin: "1923"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892320099_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192238.png",
                                    userName: "TARMA",
                                    userCoin: "1332"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892313986_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192222.png",
                                    userName: "沐沐",
                                    userCoin: "963"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892307085_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192212.png",
                                    userName: "Jackson",
                                    userCoin: "155"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892300299_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192157.png",
                                    userName: "INK",
                                    userCoin: "1023"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892292841_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192146.png",
                                    userName: "海川",
                                    userCoin: "691"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892284267_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192140.png",
                                    userName: "董小姐",
                                    userCoin: "712"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892275976_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192130.png",
                                    userName: "David",
                                    userCoin: "467"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892267882_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192124.png",
                                    userName: "狙击手",
                                    userCoin: "284"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892259845_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192119.png",
                                    userName: "一天一天",
                                    userCoin: "1586"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892249576_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192112.png",
                                    userName: "安安",
                                    userCoin: "1355"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892240536_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192104.png",
                                    userName: "宝哥",
                                    userCoin: "827"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892222792_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192041.png",
                                    userName: "巴比",
                                    userCoin: "952"
                                }].sort(this.randomSort)
                            }
                        }
                    }
                }, 6453: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {
                                boostCompList: [],
                                boostExposureTimer: null,
                                boostRect: {width: 342, height: 288},
                                adRequestTimes: 0,
                                winHeight: 0
                            }, props: {}, async onInit() {
                                this.winHeight = await this.getListHeight(), this.initBoostAdRect();
                                try {
                                    EVENT_BUS.clear("exposurePoolHandler"), EVENT_BUS.on("exposurePoolHandler", (t => {
                                        this.boostCompList.push({
                                            index: this.boostCompList.length,
                                            showTimes: 0,
                                            isShow: !1,
                                            backPressTimes: 0,
                                            isSuccess: !0,
                                            isDelete: !1,
                                            layer: 0,
                                            popType: "",
                                            popCode: "",
                                            customAction: {},
                                            actionCode: "",
                                            nativeAdvObj: t,
                                            time: Date.now()
                                        }), this.popAd(), LOG("exposurePool", "进入曝光池:", t)
                                    }))
                                } catch (t) {
                                    LOG("exposurePool", t)
                                }
                                this.$app.$on("pageParamHandler", (t => {
                                    this.boostExposureTimer && (clearInterval(this.boostExposureTimer), this.boostExposureTimer = null)
                                }))
                            }, onDestroy() {
                                this.boostExposureTimer && (clearTimeout(this.boostExposureTimer), this.boostExposureTimer = null)
                            }, popAd() {
                                this.boostExposureTimer = setInterval((() => {
                                    for (let t = 0; t < this.boostCompList.length; t++) this.boostCompList[t].isSuccess && !this.boostCompList[t].isDelete && Date.now() - this.boostCompList[t].time > 1500 && (this.boostCompList[t].isDelete = !0, LOG("exposurePool定时清理补量", this.boostCompList[t]))
                                }), 1500)
                            }, async getListHeight() {
                                return new Promise(((t, e) => {
                                    this.winHeight > 0 ? t(this.winHeight) : DEVICE_UTILS.getInfo().then((e => {
                                        let i = Math.ceil(750 * e.windowHeight / e.windowWidth);
                                        t(i)
                                    }))
                                }))
                            }, initBoostAdRect() {
                                this.boostRect.width = 342, this.boostRect.height = 288
                            }, nativeBoostEventDispatchHandler(t) {
                                LOG("exposurePool", "nativeBoostEventDispatchHandler==>", t.detail.actionCode, t)
                            }
                        }
                    }
                }, 7804: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n, a = (n = i(9084)) && n.__esModule ? n : {default: n};

                        function s(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function r(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? s(Object(i), !0).forEach((function (e) {
                                    p(t, e, i[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : s(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        function p(t, e, i) {
                            var o;
                            return (e = "symbol" == typeof (o = function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var o = i.call(t, "string");
                                    if ("object" != typeof o) return o;
                                    throw new TypeError("@@toPrimitive must return a primitive value.")
                                }
                                return String(t)
                            }(e)) ? o : String(o)) in t ? Object.defineProperty(t, e, {
                                value: i,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : t[e] = i, t
                        }

                        let l = null;
                        e.default = {
                            data: {
                                boostCompList: [],
                                currentIndex: 0,
                                currentMinIndex: 0,
                                loopTimer: null,
                                boostExposureTimer: null,
                                currentPopCode: "",
                                pageEntryPopCode: "",
                                pageBackPopCode: "",
                                currentBackpressTimes: 0,
                                isAdding: !1,
                                boostRect: {width: 342, height: 288, marginRight: 24},
                                isFirstAdComplete: !1,
                                curMaxAdCount: 0,
                                adRequestTimes: 0,
                                winHeight: 0,
                                adTitleArr: [],
                                adgRequest: 1,
                                isShowSkeleton: !1,
                                isShowEcpmSkeleton: !1,
                                isPageEntry: !1,
                                reRequestPopCode: "",
                                isPageEntryNext: !1,
                                isPopAd: !1,
                                noAdPreloadVideoReady: !1,
                                isPageBackNext: !1,
                                checkTimer: null,
                                checkoutAdShowTimer: null,
                                wrapperStyle: "",
                                consecutiveFailuresGroup: 0,
                                isStopBoost: !1
                            },
                            props: {
                                backPressTimes: {type: Number, default: 0},
                                popCode: {type: String, default: ""},
                                middleCode: {type: String, default: ""},
                                loopTimes: {type: Number, default: 1e4},
                                maxShowTimes: {type: Number, default: 1e4},
                                getBoost: {type: Number, default: 0},
                                isAuditUser: {type: Boolean, default: !1},
                                isBoostType: {type: Boolean, default: !1},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                isFullScreen: {type: Boolean, default: !1},
                                pageCode: {type: String, default: ""},
                                pageName: {type: String, default: ""},
                                maxAdCount: {type: Number, default: 3},
                                stopTimeout: {type: Number, default: 0},
                                startTimeout: {type: Number, default: 0},
                                customAction: {type: Object, default: {}},
                                middleBackPressTimes: {type: Number, default: 0},
                                popClose: {type: Number, default: 0},
                                preloadVedioReady: {type: Boolean, default: !1}
                            },
                            async onInit() {
                                let t = this;
                                if (t.$app.$def.isOpenScreenAd && t.$app.$def.isOpenScreenAd() && t.isOpenSecondScreenAd() || "SECOND_SCREEN_TOUCH" === t.actionCode || (LOG("双开屏", "不触发双开屏，打开禁用截屏"), $utils.setSecure(t, !0)), t.winHeight = await t.getListHeight(), t.initBoostAdRect(), t.$watch("getBoost", "addBoostComp"), t.$watch("backPressTimes", "backPressTimesHandler"), t.$watch("middleBackPressTimes", "middleBackPressTimesHandler"), t.$watch("stopTimeout", "stopTimeoutHandler"), t.$watch("startTimeout", "startTimeoutHandler"), t.$watch("popCode", "popCodeHandler"), t.$watch("middleCode", "middleCodeHandler"), t.$watch("popClose", "popCloseHandler"), t.addBoostComp(), EVENT_BUS.clear("YlhSplashAdEvent"), EVENT_BUS.on("YlhSplashAdEvent", (e => {
                                    t.isConcurrentAd() && (this.isStopBoost = e, e ? t.stopTimeoutHandler() : t.startTimeoutHandler())
                                })), this.$app.$on("pageParamHandler", (t => {
                                    this.boostExposureTimer && (clearInterval(this.boostExposureTimer), this.boostExposureTimer = null), this.checkTimer && (clearTimeout(this.checkTimer), this.checkTimer = null), this.loopTimer && (clearTimeout(this.loopTimer), this.loopTimer = null), this.checkoutAdShowTimer && (clearTimeout(this.checkoutAdShowTimer), this.checkoutAdShowTimer = null), this.ecpmTimer && clearTimeout(this.ecpmTimer)
                                })), t.isPageVideoOpen() && t.setVideo("页面进入返回激励视频"), t.isOpenEcpm()) {
                                    const e = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_req_wait_time || 1e3;
                                    t.ecpmTimer = setTimeout((() => {
                                        t.firstAdLoadEvent(!0)
                                    }), e);
                                    const i = TACTICS_SDK.getGlobalData("configInfo"),
                                        o = i.config[TOOLS_UTILS.renameConfig("hr^nodm^mdv^v`jd^to")],
                                        n = o ? Number(o.val) : 0, a = i.config.is_open_join_pop,
                                        s = a ? Number(a.val) : 0;
                                    this.$parent().pageDetail && (this.$app.$def.pageCodeName !== this.pageCode || n && 0 === s) && (this.$app.$def.pageCodeName = this.pageCode, TACTICS_SDK_UTILS.getPopupCodeByTacticsSdk(this.$parent().pageDetail, {
                                        pageCode: this.$parent().pageDetail.pageCode,
                                        pageOrigin: this.$parent().pageDetail.pageOrigin,
                                        actionCode: this.actionCode
                                    }).then((t => {
                                        this.isSkeletonOpen(t).then((t => {
                                            if (t) {
                                                const {commonStyle: e = {}, customStyle: i = {}} = this[t] || {};
                                                this.isShowEcpmSkeleton = !0, this.skeletonImg = e.skeleton_img
                                            }
                                        }))
                                    })))
                                }
                            },
                            adBoostNum() {
                                let t = TACTICS_SDK.getGlobalData("configInfo").config.is_open_one_ad_boost;
                                t = t && Number(t.val) || 0;
                                let e = t ? 1 : 2;
                                return this.isOpenSwapAd() && (e *= 2), e
                            },
                            popCloseHandler() {
                                let t = this,
                                    e = t.boostCompList.findIndex((t => !t.isDelete && t.isShow && t.isSuccess));
                                -1 !== e && (t.boostCompList[e].isShow = !1, t.boostCompList[e].isDelete = !0)
                            },
                            popCodeHandler(t, e) {
                                let i = this;
                                if (!t) {
                                    let t = i.boostCompList.findIndex((t => t.popCode && -1 == t.popCode.indexOf("Middle")));
                                    -1 !== t && (i.boostCompList[t].actionCode = "", i.boostCompList[t].customAction = {}, i.boostCompList[t].popCode = "")
                                }
                            },
                            middleCodeHandler(t, e) {
                                let i = this;
                                if (!t) {
                                    let t = i.boostCompList.findIndex((t => t.popCode && -1 !== t.popCode.indexOf("Middle")));
                                    -1 !== t && (i.boostCompList[t].actionCode = "", i.boostCompList[t].customAction = {}, i.boostCompList[t].popCode = "", i.boostCompList[t].isShow = !1, i.boostCompList[t].popType = "popType")
                                }
                            },
                            async getListHeight() {
                                let t = this;
                                return new Promise(((e, i) => {
                                    t.winHeight > 0 ? e(t.winHeight) : DEVICE_UTILS.getInfo().then((t => {
                                        let i = Math.ceil(750 * t.windowHeight / t.windowWidth);
                                        e(i)
                                    }))
                                }))
                            },
                            stopTimeoutHandler() {
                                this.checkTimer && (clearTimeout(this.checkTimer), this.checkTimer = null), LOG("CUSTOM", "stopTimeoutHandler==>001"), this.isAdding = !0, this.loopTimer && (LOG("CUSTOM", "stopTimeoutHandler==>002"), clearTimeout(this.loopTimer), this.loopTimer = null)
                            },
                            startTimeoutHandler() {
                                LOG("CUSTOM", "startTimeoutHandler==>001"), this.isAdding = !1, this.loopTimer || (LOG("CUSTOM", "startTimeoutHandler==>002"), this.getNextBoostComp())
                            },
                            initBoostAdRect() {
                                let t = this, e = this.getIsShowBoostAdHandle();
                                t.boostRect.width = t.isAuditUser ? 702 : 342, t.boostRect.height = t.isAuditUser ? e ? 445.5 : 228 : 288, t.boostRect.marginRight = t.isAuditUser ? 0 : 18
                            },
                            middleBackPressTimesHandler(t, e) {
                            },
                            async backPressTimesHandler(t, e) {
                                let i = this;
                                if (i.isShowSkeleton) return void LOG("有正在显示的骨架图");
                                if ("purePop" === i.customAction.model) return void i.forcePop(i.popCode);
                                let o = i.boostCompList.filter((t => t.isShow && t.isSuccess && !t.isDelete && "middle" !== t.popType && "SECOND_SCREEN_TOUCH" !== i.actionCode && "SCREEN_TOUCH" !== i.actionCode)),
                                    n = o.length > 0 ? Number(o.pop().index) : -1;
                                if (-1 !== n) return LOG("CUSTOM", "==>", n, "当前有正在展示的补量组件"), void i.boostCompList[n].backPressTimes++;
                                {
                                    if (!AD_SDK_UTILS.adConfigData.vivoIsPageVideoShow && i.isPageVideoShow(i.actionCode, i.popCode)) return LOG("isPageVideoShow激励视频", i.actionCode), this.stopAdBoost(), AD_SDK.getPreloadVedioAdv(i.pageCode || 3), "PAGE_BACK" === i.actionCode && this.videoBackPopCode && "vivo" === this.$app.$def.brand && AD_SDK_UTILS.updataAdConfigData({vivoIsPageVideoShow: !0}), void (this.isShowEcpmSkeleton = !1);
                                    const t = i.loadAdByActionCode(i.actionCode, i.popCode);
                                    if (LOG("CUSTOM", "==>", 2222, i.boostCompList), i.popCode) {
                                        if (0 == i.boostCompList.slice(i.currentMinIndex).filter((t => t.isSuccess && "middle" !== t.popType && "SCREEN_TOUCH" !== t.actionCode && -1 !== t.mark)).length) {
                                            LOG("CUSTOM", "==>", 3333), COMMON_REPORT_UTILS.custom_popup_show_report(1, "无广告组", "无广告名称", "无按钮文案模式", "无", i.action2Name(i.actionCode), "无", "无", "无", "无");
                                            const e = await i.isSkeletonOpen(i.popCode);
                                            if (e) i.skeletonHandle(e); else {
                                                if ("forcePop" === i.customAction.model) return void i.forcePop(i.popCode);
                                                t || i.$emit("eventWatch", {
                                                    eventName: "noBoostComp4Use",
                                                    actionCode: `${i.actionCode}`,
                                                    customAction: i.customAction
                                                })
                                            }
                                        } else if (i.popCode) if (LOG("CUSTOM", "==>popCode", 555, i.popCode), t || i.reRequestAdShow(i.popCode) || i.isFetchAd(i.actionCode, i.popCode)) {
                                            const t = await i.isSkeletonOpen(i.popCode);
                                            t && i.skeletonHandle(t)
                                        } else i.patchBoostComp2Pop(i.popCode)
                                    } else i.$emit("eventWatch", {eventName: "noPopCode"})
                                }
                            },
                            patchBoostComp2Pop(t) {
                                let e = this;
                                e.changeCurrentIndex(), LOG("CUSTOM", "==>", 777), LOG("CUSTOM", "==>", 888, e.currentIndex), e.isDownLoadAdShowFirst() ? e.downLoadAdShow(t) ? e.getNextBoostComp() : (e.currentPopCode = t, e.addBoostComp("", t), e.isSkeletonOpen(t).then((i => {
                                    i && e.skeletonHandle(t)
                                })), LOG("非下载类重新请求一次")) : (e.showPop(t), e.getNextBoostComp())
                            },
                            addBoostComp(t, e) {
                                let i = this;
                                if (i.isAdding && !t && !e) return;
                                let o = 1;
                                if (i.isConcurrentAd()) o = 9, i.boostCompList.push({
                                    index: i.boostCompList.length,
                                    showTimes: 0,
                                    isShow: !1,
                                    backPressTimes: 0,
                                    isSuccess: !1,
                                    isDelete: !1,
                                    layer: 0,
                                    mark: 0,
                                    popType: "boost",
                                    popCode: "",
                                    customAction: {},
                                    actionCode: t || "",
                                    nativeAdvObj: {},
                                    time: 0,
                                    adType: o
                                }), i.adRequestTimes++, o = 7; else if (this.isOpenSwapAd() || this.isOpenEcpmAd()) {
                                    const n = this.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark && 7 !== t.nativeAdvObj.adType)),
                                        a = this.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark && 7 === t.nativeAdvObj.adType));
                                    let s = this.adBoostNum() / 2;
                                    if (n.length < s && a.length >= s) o = 1; else if (a.length < s && n.length >= s) o = 7; else {
                                        if (n.length >= s && a.length >= s && !t && !e) return clearTimeout(i.loopTimer), i.loopTimer = null, void LOG("SwapAd ecpm补量已完成");
                                        if (this.isOpenEcpmAd()) o = i.adRequestTimes % 2 == 0 ? 1 : 7; else {
                                            let t = TACTICS_SDK.getGlobalData("configInfo").config.ad_type_priority,
                                                e = t ? Number(t.val) : 1;
                                            o = i.adRequestTimes % 2 == 0 ? e : 7 === e ? 1 : 7
                                        }
                                    }
                                    LOG("SwapAd ecpm请求广告类型：", o), AD_SDK_UTILS.updataAdConfigData({adType: o})
                                }
                                clearTimeout(i.loopTimer), i.loopTimer = null, i.boostCompList.push({
                                    index: i.boostCompList.length,
                                    showTimes: 0,
                                    isShow: !1,
                                    backPressTimes: 0,
                                    isSuccess: !1,
                                    isDelete: !1,
                                    layer: 0,
                                    mark: 0,
                                    popType: "boost",
                                    popCode: "",
                                    customAction: {},
                                    actionCode: t || "",
                                    nativeAdvObj: {},
                                    time: 0,
                                    adType: o
                                }), i.adRequestTimes++, i.isAdding = !0
                            },
                            onDestroy() {
                                let t = this;
                                t.loopTimer && (clearTimeout(t.loopTimer), t.loopTimer = null), this.checkTimer && (clearTimeout(this.checkTimer), this.checkTimer = null), this.checkoutAdShowTimer && (clearTimeout(this.checkoutAdShowTimer), this.checkoutAdShowTimer = null), this.ecpmTimer && clearTimeout(this.ecpmTimer)
                            },
                            getNextBoostComp() {
                                if (this.isStopBoost) return;
                                LOG("CUSTOM", "getNextBoostComp", this.isBoostType);
                                let t = this;
                                if (t.isAuditUser && t.curMaxAdCount >= 1) return void LOG("CUSTOM", "审核模式下只需要成功一次");
                                if (t.curMaxAdCount >= t.maxAdCount && t.isBoostType) return LOG("CUSTOM", "广告请求成功已超次数"), void (t.isBoostType = !1);
                                let e = t.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && -1 !== t.mark));
                                if (LOG("CUSTOM", "_filterArr==>", e, t.boostCompList), t.loopTimer) return t.checkTimerOut(e), void LOG("CUSTOM", "当前存在一个定时任务，无法启用多个任务");
                                if (t.isBoostType) t.loopTimer = setTimeout((() => {
                                    t.addBoostComp()
                                }), t.loopTimes); else {
                                    if (!(e.length < this.adBoostNum())) return void LOG("CUSTOM", `当前循环补量关闭状态，并且当前池子内有${this.adBoostNum()}个可用广告,则不继续获取广告`);
                                    t.loopTimer = setTimeout((() => {
                                        t.addBoostComp()
                                    }), t.loopTimes)
                                }
                            },
                            checkTimerOut(t) {
                                this.checkTimer && (clearTimeout(this.checkTimer), this.checkTimer = null), this.checkTimer = setTimeout((() => {
                                    this.loopTimer && (clearTimeout(this.loopTimer), this.loopTimer = null, this.isAdding = !1, t.length <= this.adBoostNum() - 1 && this.getNextBoostComp()), this.checkTimer = null
                                }), 3e3)
                            },
                            checkAgdTimerOut(t) {
                                if ("oppo" !== this.$app.$def.brand || !["pagesC/Read", "pagesB/Play"].includes(this.$page.name)) return !1;
                                const {
                                    secondScreen: e,
                                    adScreen: i,
                                    fristScreen: o,
                                    homeFristHeader: n,
                                    adChapterHead: a
                                } = AD_SDK_UTILS.getSpecialCondJudgment();
                                (o || n) && setTimeout((() => {
                                    t.length < this.adBoostNum() && this.addBoostComp()
                                }), 2e3)
                            },
                            changeSwapAdIndex(t) {
                                const e = this.boostCompList.filter((t => !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark && 7 !== t.nativeAdvObj.adType)),
                                    i = this.boostCompList.filter((t => !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark && 7 === t.nativeAdvObj.adType));
                                let o = null, n = null;
                                if (0 === e.length && 0 === i.length && (this.currentIndex = 0, this.boostCompList = []), e.length > 0 && (this.setCurrentIndex(e), o = this.boostCompList[this.currentIndex]), i.length > 0 && (this.setCurrentIndex(i), n = this.boostCompList[this.currentIndex]), o && n) if (o.layer !== n.layer) {
                                    const t = Math.min(o.layer, n.layer);
                                    this.currentIndex = t === o.layer ? o.index : n.index
                                } else {
                                    let t = TACTICS_SDK.getGlobalData("configInfo").config.ad_type_priority;
                                    t = t ? Number(t.val) : 1, this.currentIndex = 1 === t ? o.index : n.index
                                } else o ? this.currentIndex = o.index : n && (this.currentIndex = n.index);
                                LOG("SwapAd changeCurrentIndex", this.currentIndex, o, n, e, i)
                            },
                            changeCurrentIndex(t) {
                                if (this.isOpenSwapAd()) this.changeSwapAdIndex(); else {
                                    this.biddingHandle(t);
                                    let e = this.boostCompList.filter((t => !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark));
                                    this.setCurrentIndex(e)
                                }
                            },
                            setCurrentIndex(t) {
                                let e, i = this, o = [].concat(t);
                                switch (LOG("CUSTOM", "that.currentIndex==>555", i.boostCompList), LOG("CUSTOM", "that.currentIndex==>555_filterArr", o), i.isOpenEcpm() ? (e = t.sort(((t, e) => e.nativeAdvObj.price - t.nativeAdvObj.price)), LOG("ecpm _sortFilterArr", e)) : e = t.sort(((t, e) => t.layer - e.layer)), t.length) {
                                    case 0:
                                        i.currentIndex = 0, i.boostCompList = [], LOG("CUSTOM", "that.currentIndex==>444", i.currentIndex);
                                        break;
                                    case 1:
                                        i.currentIndex = o[0].index, LOG("CUSTOM", "that.currentIndex==>333", i.currentIndex);
                                        break;
                                    case 2:
                                        i.currentIndex = e[0].index, LOG("CUSTOM", "that.currentIndex==>222", i.currentIndex), i.deleteMoreAd(e, o);
                                        break;
                                    default:
                                        const t = i.adBoostNum();
                                        let n = 2, a = i.isOpenEcpm() ? t : 0, s = e.slice(0, 3);
                                        if (i.isConcurrentAd()) {
                                            s = e.slice(0, e.length), n = o.length - 1, a = n;
                                            let t = o.filter((t => !t.isShow && t.isSuccess && -1 !== t.mark));
                                            const r = o[n].nativeAdvObj;
                                            if (t.length > 2 && 9 === r.adType) {
                                                i.currentIndex = e[0].index;
                                                let t = i.boostCompList.filter((t => !t.isDelete && !t.isShow && t.isSuccess && -1 !== t.mark));
                                                i.currentMinIndex = 0 == t.length ? 0 : t[0].index, LOG("CUSTOM", "that.currentMinIndex==>0000001", i.currentIndex, i.currentMinIndex);
                                                try {
                                                    LOG("ecpm并发多的低价放入曝光池", r, o[n].index), this.boostCompList[o[n].index].isDelete = !0, EVENT_BUS.emit("exposurePoolHandler", r)
                                                } catch (t) {
                                                    LOG("exposurePoolHandler", t)
                                                }
                                                return
                                            }
                                        }
                                        if (i.isBoostType) setTimeout((() => {
                                            let t = o.filter((t => !t.isShow && t.isSuccess && -1 !== t.mark));
                                            t.length > 2 && (t[0].layer >= t[1].layer ? i.boostCompList[t[0].index].isDelete = !0 : i.boostCompList[t[1].index].isDelete = !0)
                                        }), 1500), i.currentIndex = s[0].index; else {
                                            let t = i.adBoostNum() + 1;
                                            i.isOpenSwapAd() && (t = i.adBoostNum() / 2 + 1);
                                            let o = s.filter((t => t.isShow && t.isSuccess && -1 !== t.mark));
                                            s[0].layer == s[1].layer && s[1].layer == s[2].layer ? (0 == o.length ? (LOG("setCurrentIndex删除"), i.boostCompList[s[a].index].isDelete = !0) : e.length > t && (LOG("setCurrentIndex删除01", n), i.boostCompList[s[n].index].isDelete = !0), i.currentIndex = s[i.isOpenEcpm() ? 0 : 1].index, LOG("CUSTOM", "that.currentIndex==>111001", i.currentIndex)) : s[1].layer == s[2].layer ? (0 == o.length ? i.boostCompList[s[1].index].isDelete = !0 : e.length > t && (LOG("setCurrentIndex删除02"), i.boostCompList[s[1].index].isDelete = !0), i.currentIndex = s[0].index, LOG("CUSTOM", "that.currentIndex==>111002", i.currentIndex)) : (0 == o.length ? i.boostCompList[s[n].index].isDelete = !0 : e.length > t && (LOG("setCurrentIndex删除03"), i.boostCompList[s[n].index].isDelete = !0), i.currentIndex = s[0].index, LOG("CUSTOM", "that.currentIndex==>111003", i.currentIndex))
                                        }
                                }
                                let n = i.boostCompList.filter((t => !t.isDelete && !t.isShow && t.isSuccess && -1 !== t.mark));
                                i.currentMinIndex = 0 == n.length ? 0 : n[0].index, LOG("CUSTOM", "that.currentMinIndex==>000000", i.currentMinIndex)
                            },
                            action2Name(t) {
                                LOG("CUSTOM", "actionCode==>", t);
                                let e = "";
                                return e = t && a.default[`${t}`] && a.default[`${t}`].name ? a.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            },
                            fiterBootsList() {
                                this.boostCompList.slice(this.currentMinIndex).filter((t => t.isSuccess && "middle" !== t.popType && -1 !== t.mark)).length > 0 ? (this.$emit("eventWatch", {
                                    eventName: "adLoadNum",
                                    loadStaus: "1"
                                }), this.$app.$def.isGroupNoAd = !1) : (this.$emit("eventWatch", {
                                    eventName: "adLoadNum",
                                    loadStaus: "0"
                                }), this.$app.$def.isGroupNoAd = !0)
                            },
                            nativeBoostEventDispatchHandler(t) {
                                LOG("CUSTOM", "nativeBoostEventDispatchHandler==>", t);
                                let e = this;
                                switch (t.detail.eventName) {
                                    case"adLoadSuccess":
                                        if (this.consecutiveFailuresGroup = 0, EVENT_BUS.emit("xiaomiAtobGroup", this.consecutiveFailuresGroup), e.filterAd(t) && 7 !== t.detail.customAction.adType) return;
                                        if (e.adgRequest++, AD_SDK_UTILS.getRequestHandle(), e.curMaxAdCount++, e.isFirstAdCompelte = !0, e.boostCompList[Number(t.detail.index)].isSuccess = !0, e.boostCompList[Number(t.detail.index)].layer = t.detail.popData.advConfig.layer, e.boostCompList[Number(t.detail.index)].nativeAdvObj = t.detail.popData.advConfig, e.reRequestPopCode && (e.changeCurrentIndex(), e.isShowSkeleton = !1, e.showPop(e.reRequestPopCode), e.reRequestPopCode = ""), (7 === t.detail.customAction.adType || e.isBoostType) && e.loopTimer && (clearTimeout(e.loopTimer), e.loopTimer = null, e.isAdding = !1), e.pageEntryPopCode && "PAGE_ENTRY" === t.detail.popData.advConfig.actionCode || e.currentPopCode || e.pageBackPopCode || (e.changeCurrentIndex(t.detail), e.getNextBoostComp()), e.isAdding = !1, LOG("广告成功次数", e.curMaxAdCount), e.firstAdLoadEvent(!1, t.detail.popData.advConfig.layer), "SCREEN_TOUCH" === e.actionCode && e.isOpenSecondScreenAd() && e.isFirstAdComplete && e.$emit("eventWatch", {eventName: "secondAdLoadComplete"}), e.$broadcast("updateAdTitleArr"), e.pageEntryPopCode && "PAGE_ENTRY" === t.detail.popData.advConfig.actionCode) {
                                            if (e.isDownLoadAdShowFirst() && !e.isPageEntryNext && !e.isDownloadAd(t.detail.index)) return e.isPageEntryNext = !0, e.isShowSkeleton && e.skeletonHandle(e.pageEntryPopCode), this.addBoostComp("PAGE_ENTRY"), void LOG("页面进入场景广告位拉取的为非下载类广告,需要再一次拉取");
                                            e.isShowSkeleton = !1, e.showPop(e.pageEntryPopCode, t.detail.index), e.pageEntryPopCode = "", e.getNextBoostComp()
                                        } else if (e.pageBackPopCode && "PAGE_BACK" === t.detail.popData.advConfig.actionCode) {
                                            if (e.isDownLoadAdShowFirst() && !e.isPageBackNext && !e.isDownloadAd(t.detail.index)) return e.isPageBackNext = !0, e.isShowSkeleton && e.skeletonHandle(e.pageBackPopCode), e.boostCompList[Number(t.detail.index)].isDelete = !0, this.addBoostComp("PAGE_BACK"), void LOG("页面返回场景广告位拉取的为非下载类广告,需要再一次拉取");
                                            e.isShowSkeleton = !1, e.showPop(e.pageBackPopCode, t.detail.index), e.pageBackPopCode = "", e.getNextBoostComp()
                                        } else e.currentPopCode ? (e.isShowSkeleton = !1, e.showPop(e.currentPopCode, t.detail.index), e.currentPopCode = "", e.getNextBoostComp()) : !e.isShowSkeleton || e.pageEntryPopCode || e.reRequestPopCode || e.pageBackPopCode || (e.isShowSkeleton = !1, e.showPop(e.popCode));
                                        break;
                                    case"adLoadFailed":
                                        if (this.consecutiveFailuresGroup += 1, EVENT_BUS.emit("xiaomiAtobGroup", this.consecutiveFailuresGroup), e.pageEntryPopCode && "PAGE_ENTRY" === t.detail.actionCode ? e.isShowSkeleton || (e.$emit("eventWatch", {
                                            eventName: "noBoostComp4Use",
                                            actionCode: `${e.actionCode}`,
                                            customAction: e.customAction
                                        }), e.pageEntryPopCode = "") : e.pageBackPopCode && "PAGE_BACK" === t.detail.actionCode && (e.isShowSkeleton || (e.$emit("eventWatch", {
                                            eventName: "noBoostComp4Use",
                                            actionCode: `${e.actionCode}`,
                                            customAction: e.customAction
                                        }), e.pageBackPopCode = "")), e.currentPopCode && (e.boostCompList.slice(e.currentMinIndex).filter((t => t.isSuccess && !t.isShow && !t.isDelete && "SCREEN_TOUCH" !== t.actionCode && -1 !== t.mark)).length > 0 ? (e.isShowSkeleton = !1, e.showPop(e.currentPopCode), e.currentPopCode = "", LOG("isFetchAd实时拉取失败，展示补量池广告")) : e.isShowSkeleton || (this.$emit("eventWatch", {
                                            eventName: "noBoostComp4Use",
                                            actionCode: `${this.actionCode}`,
                                            customAction: this.customAction
                                        }), e.currentPopCode = "")), e.adgRequest++, e.processFailure(), "冷却" !== t.detail.customAction.id && (7 === t.detail.customAction.adType || e.isBoostType) && e.loopTimer && (clearTimeout(e.loopTimer), e.loopTimer = null, e.isAdding = !1), 7 === t.detail.customAction.adType) e.boostCompList[Number(t.detail.index)].isSuccess || (e.boostCompList[Number(t.detail.index)].isDelete = !0); else {
                                            const i = e.boostCompList.pop();
                                            (i && -1 === i.mark || !0 === i.isSuccess || "PAGE_ENTRY" === i.actionCode && e.pageEntryPopCode && "PAGE_ENTRY" !== t.detail.actionCode || "PAGE_BACK" === i.actionCode && e.pageBackPopCode && "PAGE_BACK" !== t.detail.actionCode) && e.boostCompList.push(i)
                                        }
                                        e.reRequestPopCode && (e.isShowSkeleton = !1, e.changeCurrentIndex(), e.showPop(e.reRequestPopCode), e.reRequestPopCode = ""), e.getNextBoostComp(), e.isAdding = !1, e.firstAdLoadEvent();
                                        break;
                                    case"closePopData":
                                        if (-1 === e.boostCompList[Number(t.detail.index)].mark ? e.boostCompList[Number(t.detail.index)].isSuccess = !1 : (e.isOpenPageEntry() && e.boostCompList[Number(t.detail.index)].nativeAdvObj && "PAGE_ENTRY" === e.boostCompList[Number(t.detail.index)].nativeAdvObj.actionCode || e.isOpenPageBackAd() && e.boostCompList[Number(t.detail.index)].nativeAdvObj && "PAGE_BACK" === e.boostCompList[Number(t.detail.index)].nativeAdvObj.actionCode) && (e.boostCompList[Number(t.detail.index)].isDelete = !0), e.returnPoolHandle(t), "SCREEN_TOUCH" === t.detail.actionCode && e.isOpenSecondScreenAd() && e.$root().isSecondScreenAdLoadSuccess) return void e.$emit("eventWatch", r({}, t.detail));
                                        "SECOND_SCREEN_TOUCH" === t.detail.actionCode && (e.boostCompList[0].isShow = !1, e.boostCompList[0].popType = "boost", ("vivo" == this.$app.$def.brand || AD_UTILS.isXM2(e.$app.$def.brand)) && (e.boostCompList[0].isDelete = !0, e.boostCompList[Number(t.detail.index)].isDelete = !0, e.loopTimer && (clearTimeout(e.loopTimer), e.loopTimer = null))), "huawei" == this.$app.$def.brand && "deleteBtnClick" !== t.detail.action && e.$emit("eventWatch", r({}, t.detail)), "watchVideo4Free" !== t.detail.action && (e.boostCompList[Number(t.detail.index)].isShow = !1, e.boostCompList[Number(t.detail.index)].popType = "boost"), AD_UTILS.isXM2(e.$app.$def.brand) || "deleteBtnClick" == t.detail.action || "adClickBtn" == t.detail.action || "adClickImg" == t.detail.action || "noClickBtn" == t.detail.action || "noClickImg" == t.detail.action ? (e.boostCompList[Number(t.detail.index)].isDelete = !0, e.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && -1 !== t.mark)).length <= e.adBoostNum() - 1 && !e.isBoostType && e.loopTimer && (clearTimeout(e.loopTimer), e.loopTimer = null, e.isAdding = !1), this.checkoutAdShow()) : "SCREEN_TOUCH" === t.detail.actionCode && e.isOpenSecondScreenAd() ? e.boostCompList[Number(t.detail.index)].isDelete = !0 : (e.boostCompList[Number(t.detail.index)].showTimes++, e.boostCompList[Number(t.detail.index)].showTimes >= e.maxShowTimes && (e.boostCompList[Number(t.detail.index)].isDelete = !0), e.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && -1 !== t.mark)).length >= 2 && !e.isBoostType && e.loopTimer && (clearTimeout(e.loopTimer), e.loopTimer = null)), t.detail.popData.advConfig.isPriorityAd && (e.boostCompList[Number(t.detail.index)].isDelete = !0, POP_TOOLS.setPriorityPopClose(), EVENT_BUS.emit("closePopData", t.detail.popData.popConfig)), "huawei" != this.$app.$def.brand && "deleteBtnClick" !== t.detail.action && e.$emit("eventWatch", r({}, t.detail)), t.detail.isNeedDeleteComp && (e.boostCompList[Number(t.detail.index)].isDelete = !0), e.changeCurrentIndex(), e.getNextBoostComp(), "SCREEN_TOUCH" === t.detail.actionCode && e.isOpenSecondScreenAd() || e.$app.$def.screenAdEnd(t);
                                        break;
                                    case"watchVideo4Free":
                                    case"bottomScenceClick":
                                        e.$emit("eventWatch", r({}, t.detail));
                                        break;
                                    case"changeCloseAdPop":
                                    case"patchPopkey":
                                    case"popShow":
                                        if ("compareAdId" == t.detail.action) {
                                            const i = e.boostCompList[Number(e.currentIndex)];
                                            i && i.nativeAdvObj && i.nativeAdvObj.id != t.detail.popData.advConfig.id && e.boostCompList[Number(t.detail.index)].isShow && (e.boostCompList[Number(e.currentIndex)].isDelete = !0, LOG("展示异常不一致删除", e.boostCompList[Number(e.currentIndex)]));
                                            break
                                        }
                                        e.$emit("eventWatch", r({}, t.detail)), t.detail.customAction && t.detail.customAction.model && (e.boostCompList[Number(t.detail.index)].nativeAdvObj = t.detail.popData.advConfig, e.boostCompList[Number(t.detail.index)].isSuccess = !0, e.customAction.model = "");
                                        break;
                                    case"updateAdTitleArr":
                                        e.adTitleArr.unshift(t.detail.title);
                                        break;
                                    case"sliceAdTitleArr":
                                        let i = e.boostCompList.filter((t => t.isSuccess && !t.isDelete && -1 !== t.mark));
                                        LOG("广告媒体埋点", i.length), e.adTitleArr = e.adTitleArr.slice(0, i.length);
                                        break;
                                    case"deleteAd":
                                        e.boostCompList[Number(t.detail.index)].isDelete = !0
                                }
                                setTimeout((() => {
                                    e.fiterBootsList()
                                }), 0)
                            },
                            getIsShowBoostAdHandle() {
                                let t = 1;
                                switch (this.$page.name) {
                                    case"pagesA/Main":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.main_list_ad.val);
                                        break;
                                    case"pagesA/Welfare":
                                    case"pagesA/WelfareNew":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.welfare_list_ad.val);
                                        break;
                                    case"pagesC/Info":
                                    case"pagesB/GoodsDetail":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.info_list_ad.val);
                                        break;
                                    case"pagesB/Keepingbook":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.keeping_book_list_ad.val);
                                        break;
                                    case"pagesB/addPlan":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.plan_list_ad.val);
                                        break;
                                    case"pagesA/Guess":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.guess_index_ad.val);
                                        break;
                                    case"pagesB/Study":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.study_list_ad.val);
                                        break;
                                    case"pagesB/Lottery":
                                        t = 2;
                                        break;
                                    case"pagesC/Read":
                                        t = 1
                                }
                                return 2 == t
                            },
                            forcePop(t) {
                                if (!t) return void LOG("forcePop", "popCode为必填参数");
                                let e = this.boostCompList.findIndex((t => -1 === t.mark && !t.isDelete));
                                if (-1 != e) return this.boostCompList[e].popCode = t, this.boostCompList[e].actionCode = this.actionCode, this.boostCompList[e].popType = t.split("_")[0].toLowerCase(), this.boostCompList[e].customAction = this.customAction, void (this.boostCompList[e].isShow = !0);
                                this.boostCompList.push({
                                    index: this.boostCompList.length,
                                    mark: -1,
                                    showTimes: 0,
                                    isShow: !0,
                                    backPressTimes: 0,
                                    isSuccess: !1,
                                    isDelete: !1,
                                    layer: 0,
                                    popType: t.split("_")[0].toLowerCase(),
                                    popCode: t,
                                    customAction: this.customAction,
                                    actionCode: this.actionCode
                                })
                            },
                            hasPopShow() {
                                let t = this;
                                return t.boostCompList.filter((e => e.isShow && -1 === e.mark || e.isShow && e.isSuccess && !e.isDelete && "middle" !== e.popType && "SECOND_SCREEN_TOUCH" !== t.actionCode && "SCREEN_TOUCH" !== t.actionCode)).length > 0
                            },
                            showPop(t, e) {
                                this.isShowEcpmSkeleton = !1;
                                let i = this;
                                i.hasPopShow() || (i.currentIndex = e || i.currentIndex, "SECOND_SCREEN_TOUCH" === i.actionCode && i.boostCompList.some((t => "SCREEN_TOUCH" === t.actionCode)) && (i.currentIndex = 1), LOG("展示id和adId:", i.currentIndex, JSON.stringify(i.boostCompList[Number(i.currentIndex)].nativeAdvObj), i.boostCompList[Number(i.currentIndex)].nativeAdvObj.id, "和", i.boostCompList[Number(i.currentIndex)].nativeAdvObj.advDetail.adId), i.boostCompList[Number(i.currentIndex)].popCode = `${t}`, i.boostCompList[Number(i.currentIndex)].actionCode = i.actionCode, i.boostCompList[Number(i.currentIndex)].customAction = i.customAction, i.boostCompList[Number(i.currentIndex)].popType = "middlenative" == t.split("_")[0].toLowerCase() ? "middle" : t.split("_")[0].toLowerCase(), i.boostCompList[Number(i.currentIndex)].isShow = !0, LOG("AD", "当前动作:", i.boostCompList[Number(i.currentIndex)].actionCode, "当前id:", i.boostCompList[Number(i.currentIndex)].nativeAdvObj.id), LOG("reRequestAdShow", "当前展示:", i.actionCode, i.boostCompList[Number(i.currentIndex)]))
                            },
                            downloadShow(t) {
                                let e = this;
                                e.boostCompList[Number(e.currentIndex)].isShow = !1, e.boostCompList[Number(e.currentIndex)].isDelete = !0;
                                let i = e.boostCompList.filter((t => !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark)).sort(((t, e) => t.layer - e.layer));
                                i[0] ? e.isDownload(i[0].index) ? e.currentPopCode = t : e.showPop(t, i[0].index) : e.currentPopCode = t
                            },
                            isDownload: t => !1,
                            isOpenSecondScreenAd() {
                                return this.$app.$def.isOpenSecondScreenAd && this.$app.$def.isOpenSecondScreenAd()
                            },
                            returnPoolHandle(t) {
                                if (!["pagesC/Read", "pagesB/Play"].includes(this.$page.name)) return !1;
                                const {
                                        secondScreen: e,
                                        adScreen: i,
                                        fristScreen: o,
                                        homeFristHeader: n,
                                        adChapterHead: a
                                    } = AD_SDK_UTILS.getSpecialCondJudgment(),
                                    s = ["closeClick", "deleteBtnClick", "adClickBtn", "adClickImg", "noClickImg", "nextPage"];
                                o && "SCREEN_TOUCH" === t.detail.actionCode && s.includes(t.detail.action) && (LOG("开屏删除回池1"), this.boostCompList[Number(t.detail.index)].isDelete = !0), e && "SECOND_SCREEN_TOUCH" === t.detail.actionCode && s.includes(t.detail.action) && (LOG("开屏删除回池2"), this.boostCompList[Number(t.detail.index)].isDelete = !0), n && a.length > 0 && "READ_FIRST_CUSTOM" === t.detail.actionCode && s.includes(t.detail.action) && (LOG("章首删除回池"), this.boostCompList[Number(t.detail.index)].isDelete = !0), (o || e || n) && (this.isAdding = !1, this.loopTimer && (clearTimeout(this.loopTimer), this.loopTimer = null))
                            },
                            processFailure() {
                                if (["pagesA/Main", "pagesA/Welfare", "pagesA/WelfareNew", "pagesC/Info", "pagesB/GoodsDetail", "pagesB/Lottery"].includes(this.$page.name)) return AD_SDK_UTILS.getRequestHandle(5);
                                const {
                                    secondScreen: t,
                                    adScreen: e,
                                    fristScreen: i,
                                    homeFristHeader: o,
                                    adChapterHead: n
                                } = AD_SDK_UTILS.getSpecialCondJudgment();
                                i && t && o && n.length > 0 && 2 === this.adgRequest && (e.length > 0 || 0 === e.length) && AD_SDK_UTILS.getRequestHandle(3), !t && i && o && e.length > 0 && n.length > 0 && 2 === this.adgRequest && (e.length > 0 || 0 === e.length) && AD_SDK_UTILS.getRequestHandle(1), i && !o && !t && 2 === this.adgRequest && (e.length > 0 || 0 === e.length) && AD_SDK_UTILS.getRequestHandle(2), !t && !i && o && n.length > 0 && 2 === this.adgRequest && AD_SDK_UTILS.getRequestHandle(1), t || i || !o || 0 !== n.length || 2 !== this.adgRequest || AD_SDK_UTILS.getRequestHandle(2)
                            },
                            async isSkeletonOpen(t) {
                                try {
                                    if (!t) return !1;
                                    let e = TACTICS_SDK.getGlobalData("configInfo").config.is_open_skeleton_switch;
                                    if (!e) return !1;
                                    const {commonStyle: i = {}} = await this.getPopCodeConfig(t);
                                    return e = e && Number(e.val) || 0, !(!e || !i.skeleton_switch) && t
                                } catch (t) {
                                }
                                return !1
                            },
                            async getPopCodeConfig(t) {
                                if (this[t]) return this[t];
                                let e = await TACTICS_SDK_UTILS.getPopupConfigByPopupCode(t);
                                return e ? (this[t] = e, e) : {}
                            },
                            skeletonHandle(t) {
                                const {commonStyle: e = {}, customStyle: i = {}} = this[t] || {};
                                this.skeletonImg = e.skeleton_img;
                                const o = e.skeleton_close_time;
                                o && (this.isShowSkeleton = !0, this.isShowEcpmSkeleton = !1, this.reRequestPopCode || (l && clearTimeout(l), l = setTimeout((() => {
                                    l = null, this.isShowSkeleton && (this.isShowSkeleton = !1, this.currentPopCode = "", this.pageEntryPopCode = "", this.pageBackPopCode = "", e.force_pop_switch ? (this.customAction.model = "purePop", this.forcePop(t), "1" == i.is_open_no_ad_video && this.setVideo()) : this.$emit("eventWatch", {
                                        eventName: "noBoostComp4Use",
                                        actionCode: `${this.actionCode}`,
                                        customAction: this.customAction
                                    }))
                                }), o)))
                            },
                            setVideo(t, e, i) {
                                const o = this;
                                if (console.log("setVideo---------", "recommend", this.pageName, o.noAdPreloadVideoReady), o.noAdPreloadVideoReady) return void (e && e());
                                AD_SDK.destroyVideoAdv();
                                let n = !0;
                                const a = t || "无广告激励视频", s = {
                                    scenario: a, pageName: o.pageName, fail: e => {
                                        LOG(`${a}fail`, e), setTimeout((() => {
                                            o.setVideo(t)
                                        }), 1e3), o.noAdPreloadVideoReady = !1, n && i && i(), n = !1
                                    }, ready: () => {
                                        LOG(`${a}ready`), o.noAdPreloadVideoReady = !0, n && e && e(), n = !1, o.isOpenEcpm() && AD_SDK_UTILS.getEcpmCompareTypes().includes("2") && o.firstAdLoadEvent()
                                    }, success: () => {
                                        LOG(`${a}success`), o.noAdPreloadVideoReady = !1, n && i && i(), n = !1, o.isOpenEcpm() && "PAGE_BACK" !== o.actionCode && AD_SDK_UTILS.getEcpmCompareTypes().includes("2") ? (this.startAdBoost(), setTimeout((() => {
                                            o.pageBack()
                                        }), 1e3)) : o.pageBack()
                                    }, incomplete: () => {
                                        LOG(`${a}incomplete`), o.noAdPreloadVideoReady = !1, n && i && i(), n = !1, o.isOpenEcpm() && "PAGE_BACK" !== o.actionCode && AD_SDK_UTILS.getEcpmCompareTypes().includes("2") ? (this.startAdBoost(), setTimeout((() => {
                                            o.pageBack()
                                        }), 1e3)) : o.pageBack()
                                    }, type: o.pageCode || 3
                                };
                                AD_SDK.setPreloadVedioAdv(s)
                            },
                            loadAdByActionCode(t, e) {
                                return !this.isOpenEcpm() && ("PAGE_ENTRY" === t && e && !this.isPageEntry && this.isOpenPageEntry() ? this.pageEntryAd(t, e) : !("PAGE_BACK" !== t || !e || !this.isOpenPageBackAd()) && this.pageBackAd(t, e))
                            },
                            isOpenPageBackAd() {
                                let t = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_page_return;
                                return t && t.length > 0
                            },
                            pageBackAd(t, e) {
                                return this.pageBackPopCode || (this.isPageBackNext = !1, this.pageBackPopCode = e, "huawei" === this.$app.$def.brand && 0 === this.boostCompList.filter((t => t.isSuccess && "middle" !== t.popType && "SCREEN_TOUCH" !== t.actionCode && -1 !== t.mark)).length ? setTimeout((() => {
                                    this.addBoostComp(t)
                                }), 0) : this.addBoostComp(t)), !0
                            },
                            isOpenPageEntry() {
                                let t = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_page_entry;
                                return t && t.length > 0
                            },
                            pageEntryAd(t, e) {
                                return this.isPageEntry = !0, this.pageEntryPopCode = e, "huawei" === this.$app.$def.brand && "pagesC/Read" !== this.$page.name && 0 === this.boostCompList.filter((t => t.isSuccess && "middle" !== t.popType && "SCREEN_TOUCH" !== t.actionCode && -1 !== t.mark)).length ? setTimeout((() => {
                                    this.addBoostComp(t)
                                }), 0) : this.addBoostComp(t), !0
                            },
                            reRequestAdShow(t) {
                                let e = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_priority_display;
                                if (e && e.length > 0 && !this.reRequestPopCode && !this.isDownLoadAdShowFirst()) {
                                    let i = this.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && -1 !== t.mark)),
                                        o = !0;
                                    for (let t = 0; t < i.length; t++) if (-1 !== e.indexOf(i[t].layer)) {
                                        o = !1;
                                        break
                                    }
                                    return o ? (LOG("reRequestAdShow", "需要重新请求一次,当前补量池:", i), this.reRequestPopCode = t, this.addBoostComp("", t), !0) : (LOG("reRequestAdShow", "当前补量池:", i), !1)
                                }
                                return !1
                            },
                            isDownloadAd(t) {
                                const e = this.boostCompList[Number(t)].nativeAdvObj;
                                return "huawei" === e.brand && [103, 106, 107, 108, 101, 102, 110].includes(e.advDetail.creativeType) || "oppo" === e.brand && "点击安装" === e.advDetail.clickBtnTxt || "xiaomi" === e.brand && 2 === e.advDetail.interactionType ? (LOG("下载类", e), !0) : (LOG("非下载类", e), !1)
                            },
                            downLoadAdShow(t) {
                                let e = this.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && -1 !== t.mark)),
                                    i = !1;
                                for (let o = 0; o < e.length; o++) if (i = this.isDownloadAd(e[o].index), i) {
                                    this.showPop(t, e[o].index);
                                    break
                                }
                                return i
                            },
                            isDownLoadAdShowFirst() {
                                return ("huawei" === this.$app.$def.brand || "oppo" === this.$app.$def.brand || "xiaomi" === this.$app.$def.brand) && TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").download_priority && !this.isOpenEcpm()
                            },
                            filterAd(t) {
                                const e = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_circulate_config;
                                this.adCirculateConfig = e || {};
                                const i = "READ_READINFO" === this.pageCode && this.adCirculateConfig.readIsOpen,
                                    o = "READ_WELFARE" === this.pageCode && this.adCirculateConfig.benefitsPageIsOpen,
                                    n = "VIDEO_PLAY" === this.pageCode && this.adCirculateConfig.playPageIsOpen,
                                    a = "GUESS_GAME" === this.pageCode && this.adCirculateConfig.answerPageIsOpen,
                                    s = "WALK_POWER_HOME" === this.pageCode && this.adCirculateConfig.walkPowerHomeIsOpen,
                                    r = "WALK_SPACE_CLEAN" === this.pageCode && this.adCirculateConfig.walkClearIsOpen,
                                    p = "WALK_POWER_SAVING" === this.pageCode && this.adCirculateConfig.walkSavingIsOpen,
                                    l = "WALK_POWER_CLEAR" === this.pageCode && this.adCirculateConfig.walkPowerClearIsOpen,
                                    c = "READ_ASSESSPAGE" === this.pageCode && this.adCirculateConfig.cpAnswerIsOpen;
                                if (i || o || n || a || s || r || p || l || c) {
                                    const e = TACTICS_SDK.getGlobalData("ad_data_pool_tag");
                                    if (e) {
                                        const o = e.split(",");
                                        if (t.detail.popData.advConfig.advDetail && t.detail.popData.advConfig.advDetail.appInfo && o.includes(t.detail.popData.advConfig.advDetail.appInfo.appName)) return this.currentPopCode && this.isOpenFetchAd() ? (this.boostCompList[Number(t.detail.index)].isSuccess = !0, this.boostCompList[Number(t.detail.index)].isDelete = !0, this.isAdding = !1, this.addBoostComp("nextAdId", this.currentPopCode), LOG("isFetchAd 标签黑名单", appName), !0) : (this.boostCompList[Number(t.detail.index)].time = Date.now(), i || n ? (this.boostCompList[Number(t.detail.index)].isSuccess = !1, this.isAdding = !1, this.getNextBoostComp()) : (this.boostCompList[Number(t.detail.index)].isSuccess = !0, setTimeout((() => {
                                            this.boostCompList[Number(t.detail.index)].isSuccess = !1, this.isAdding = !1, this.getNextBoostComp()
                                        }), 1500)), LOG("native-boost-list数据池的曝光:", t.detail.popData.advConfig.advDetail.appInfo.appName, this.boostCompList[Number(t.detail.index)]), this.isPopAd || (this.isPopAd = !0, this.popAd()), !0)
                                    }
                                }
                                return !1
                            },
                            popAd() {
                                const t = this.adCirculateConfig.boostExposureTime < 1500 ? 1500 : this.adCirculateConfig.boostExposureTime;
                                this.boostExposureTimer = setInterval((() => {
                                    for (let e = 0; e < this.boostCompList.length; e++) this.boostCompList[e].time && !this.boostCompList[e].isDelete && Date.now() - this.boostCompList[e].time > t && (this.boostCompList[e].isDelete = !0, LOG("native-boost-group native-boost-list定时清理补量", this.boostCompList[e]))
                                }), t)
                            },
                            isOpenFetchAd() {
                                let t = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").config;
                                return !(!t || 1 !== Number(t.ad_switch) || this.isOpenEcpm())
                            },
                            isFetchAd(t, e) {
                                try {
                                    if (this.isOpenFetchAd()) {
                                        let i = TACTICS_SDK.getGlobalData("configInfo").config.is_open_screen_ad;
                                        i = i && Number(i.val) || 0;
                                        let o = TACTICS_SDK.getGlobalData("configInfo").config.is_open_homeScreen_advert;
                                        return o = o && Number(o.val) || 0, !i && o && "READ_FIRST_CUSTOM" === t && this.curMaxAdCount <= this.adBoostNum() ? (LOG("isFetchAd章首"), !1) : i || o || "PAGE_ENTRY" !== t ? "SCREEN_TOUCH" == t ? (LOG("isFetchAd开屏1"), !1) : (LOG("isFetchAd实时拉取", t), this.currentPopCode = e, this.addBoostComp("", e), !0) : (LOG("isFetchAd页面进入"), !1)
                                    }
                                } catch (t) {
                                    LOG("isFetchAd", t)
                                }
                                return !1
                            },
                            isOpenSwapAd() {
                                if (this.isOpenEcpm()) return !1;
                                let t = TACTICS_SDK.getGlobalData("configInfo").config.ad_type_priority;
                                return t = t ? Number(t.val) : 0, t && (this.wrapperStyle = "flex-wrap: wrap"), t
                            },
                            isFirstAdLoadComplete(t) {
                                return !this.isOpenSwapAd() || 0 === t || this.adRequestTimes >= 2
                            },
                            checkoutAdShow() {
                                clearTimeout(this.checkoutAdShowTimer), this.checkoutAdShowTimer = setTimeout((() => {
                                    try {
                                        this.checkoutAdShowTimer = null;
                                        const t = this.boostCompList.filter((t => !t.isShow && !t.isDelete && t.isSuccess && -1 !== t.mark)),
                                            e = $utils.getRouterInfo();
                                        if (e.name === this.$page.name) {
                                            let i = !1;
                                            for (let e = 0; e < t.length; e++) if (7 != t[e].nativeAdvObj.adType && !t[e].nativeAdvObj.isAdShow && Date.now() - t[e].nativeAdvObj.adTime > 2e3) {
                                                const o = t[e].index;
                                                this.boostCompList[o].isDelete = !0, LOG("checkoutAdShow isDelete", this.boostCompList[o]), i = !0
                                            }
                                            LOG("checkoutAdShow", i, e.name, this.$page.name, t.length), (i || 0 === t.length) && this.getNextBoostComp(), this.$parent().isAllowBackPress || (LOG("切换页面异常弹框关闭"), this.$parent().isAllowBackPress = !0, t.length < this.adBoostNum() && this.getNextBoostComp())
                                        }
                                    } catch (t) {
                                        LOG("checkoutAdShow", t)
                                    }
                                }), 2e3)
                            },
                            deleteMoreAd(t, e) {
                                try {
                                    const e = this;
                                    let i = !1;
                                    if (e.isOpenSwapAd() && 2 === e.adBoostNum() ? i = !0 : e.isOpenSwapAd() || 1 !== e.adBoostNum() || (i = !0), !i || e.isBoostType) return;
                                    LOG("deleteMoreAd", t);
                                    let o = t.slice(0, 2),
                                        n = o.filter((t => t.isShow && t.isSuccess && -1 !== t.mark));
                                    o[0].layer == o[1].layer ? (0 == n.length && (LOG("deleteMoreAd setCurrentIndex删除111001"), e.boostCompList[o[0].index].isDelete = !0), e.currentIndex = o[1].index, LOG("CUSTOM", "deleteMoreAd that.currentIndex==>111001", e.currentIndex)) : (0 == n.length && (LOG("deleteMoreAd setCurrentIndex删除111002"), e.boostCompList[o[1].index].isDelete = !0), e.currentIndex = o[0].index, LOG("CUSTOM", "deleteMoreAd that.currentIndex==>111002", e.currentIndex))
                                } catch (t) {
                                    LOG("deleteMoreAd", t)
                                }
                            },
                            isPageVideoOpen() {
                                if (this.isOpenEcpm()) return AD_SDK_UTILS.getEcpmCompareTypes().includes("2");
                                let t = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").config;
                                return t && t.is_first_show_video && ("oppo" === this.$app.$def.brand || "vivo" === this.$app.$def.brand)
                            },
                            isPageVideoShow(t, e) {
                                try {
                                    let i = this.isPageVideoOpen(), o = "未知";
                                    if (i && this.noAdPreloadVideoReady) {
                                        if ("PAGE_ENTRY" === t && e ? (o = "进入激励视频", this.$parent().nativeBoostGroupController.popCode = "", this.videoBackPopCode = e) : "PAGE_BACK" === t && e ? (o = "返回激励视频", this.videoBackPopCode = e) : "POPUP_CLOSE" === t && e ? (o = "关闭激励视频", this.$parent().nativeBoostGroupController.popCode = "", this.videoBackPopCode = e) : i = !1, LOG("isPageVideoShow", t, e, i), !i) return !1;
                                        if (this.isOpenEcpm()) {
                                            this.changeCurrentIndex();
                                            const t = this.boostCompList[Number(this.currentIndex)] && this.boostCompList[Number(this.currentIndex)].nativeAdvObj.price || 0,
                                                e = AD_SDK.getVideoEcpm() - t;
                                            if (LOG("ecpm price:", e, ",currentIndex:", this.currentIndex), e > 0) return COMMON_REPORT_UTILS.custom_popup_click_report("激励视频", "激励视频", 1, "激励视频", "激励视频", "激励视频", o, "激励视频", "激励视频", "激励视频", "激励视频", "激励视频", "视频"), !0
                                        } else {
                                            let t = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").config;
                                            const e = t && t.first_show_video_index || 0 == t.first_show_video_index ? t.first_show_video_index : 3;
                                            if (0 == this.boostCompList.slice(this.currentMinIndex).filter((t => !t.time && t.isSuccess && !t.isDelete && "middle" !== t.popType && "SCREEN_TOUCH" !== t.actionCode && -1 !== t.mark && t.layer < e)).length) return !0
                                        }
                                        this.videoBackPopCode = ""
                                    }
                                } catch (t) {
                                    this.videoBackPopCode = "", LOG("isPageVideoShow", t)
                                }
                                return !1
                            },
                            pageBack() {
                                this.videoBackPopCode && (TACTICS_SDK_UTILS.getPopupConfigByPopupCode(this.videoBackPopCode).then((t => {
                                    this.$emit("eventWatch", {
                                        popData: {popConfig: t},
                                        eventName: "closePopData",
                                        action: "backPress",
                                        actionCode: this.actionCode
                                    })
                                })), this.videoBackPopCode = "")
                            },
                            isOpenEcpm: () => AD_SDK_UTILS.getEcpmType() >= 2,
                            firstAdLoadEvent(t, e) {
                                let i = this.boostCompList.filter((t => !t.time && !t.isShow && !t.isDelete && (t.isSuccess || t.isLoading) && -1 !== t.mark)),
                                    o = !1;
                                o = this.isOpenEcpmAd() ? i.length > 1 : i.length > 0;
                                let n = this.isPageVideoOpen();
                                (!this.isOpenEcpm() || this.isOpenEcpm() && o && n && this.noAdPreloadVideoReady || o && !n || t) && !this.isFirstAdComplete && this.isFirstAdLoadComplete(e) && (LOG("firstAdLoadEvent", i, this.noAdPreloadVideoReady, t), this.isOpenEcpm() ? 0 === this.boostCompList.filter((t => t.isShow && t.isSuccess && !t.isDelete && "middle" !== t.popType && "SECOND_SCREEN_TOUCH" !== this.actionCode && "SCREEN_TOUCH" !== this.actionCode)).length && this.$emit("eventWatch", {eventName: "firstAdLoadComplete"}) : this.$emit("eventWatch", {eventName: "firstAdLoadComplete"}), this.isFirstAdComplete = !0, clearTimeout(this.ecpmTimer))
                            },
                            isOpenEcpmAd() {
                                return TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_compare_price_type, !!(this.isOpenEcpm() && this.ecpmAdNum() > 1 && this.adBoostNum() > 1)
                            },
                            startAdBoost() {
                                0 === this.stopTimeout && this.startTimeoutHandler()
                            },
                            stopAdBoost() {
                                0 === this.stopTimeout && this.stopTimeoutHandler()
                            },
                            ecpmAdNum() {
                                let t = AD_SDK_UTILS.getEcpmCompareTypes().length;
                                return AD_SDK_UTILS.getEcpmCompareTypes().includes("2") && (t -= 1), t
                            },
                            isConcurrentAd: () => 3 === AD_SDK_UTILS.getEcpmType(),
                            biddingHandle(t) {
                                if (t && this.isConcurrentAd()) {
                                    const e = t.popData.advConfig;
                                    if (e && 9 === e.adType && this.curMaxAdCount > 2) {
                                        let i = this.boostCompList.filter((t => !t.time && !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark && 9 !== t.nativeAdvObj.adType)).sort(((t, e) => e.nativeAdvObj.price - t.nativeAdvObj.price));
                                        LOG("ecpm bidding 比价", e.price, i, i.length > 0 && i[0].nativeAdvObj.price), i.length > 0 && e.price < i[0].nativeAdvObj.price ? this.biddingLowerExposure(t) : (LOG("ecpm bidding竞胜成功", e, t.index), this.boostCompList[t.index].nativeAdvObj.isUIShow = !0)
                                    } else if (2 === this.curMaxAdCount) {
                                        let t = this.boostCompList.filter((t => !t.time && !t.isDelete && t.isSuccess && "middle" !== t.popType && -1 !== t.mark)).sort(((t, e) => e.nativeAdvObj.price - t.nativeAdvObj.price));
                                        const e = t[1];
                                        LOG("ecpm bidding 比价", t), 9 === t[0].nativeAdvObj.adType ? (this.boostCompList[t[0].index].nativeAdvObj.isUIShow = !0, LOG("ecpm bidding竞胜成功", t[0], t[0].index), 9 === e.nativeAdvObj.adType && (EVENT_BUS.emit("exposurePoolHandler", this.boostCompList[e.index].nativeAdvObj), LOG("ecpm bidding竞胜成功2", e, e.index))) : 9 === e.nativeAdvObj.adType ? this.biddingLowerExposure(e) : LOG("ecpm 2个都为原生")
                                    }
                                }
                            },
                            biddingLowerExposure(t) {
                                let e = TACTICS_SDK.getGlobalData("configInfo").config.is_bidding_fail_exposure;
                                if (e = e && Number(e.val) || 0, LOG("ecpm ylhObj", t), e) {
                                    LOG("ecpm bidding比价失败曝光", this.boostCompList[t.index]);
                                    try {
                                        this.boostCompList[t.index].isDelete = !0, EVENT_BUS.emit("exposurePoolHandler", this.boostCompList[t.index].nativeAdvObj)
                                    } catch (t) {
                                        LOG("exposurePoolHandler", t)
                                    }
                                } else this.boostCompList[t.index].isDelete = !0, LOG("ecpm bidding比价失败不曝光,删除", this.boostCompList[t.index])
                            }
                        }
                    }
                }, 8184: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = c(o("@app-module/system.audio")),
                            a = (c(o("@app-module/system.prompt")), c(o("@app-module/system.device"))),
                            s = c(o("@app-module/system.router")), r = c(i(9084)), p = c(i(4415)),
                            l = c(o("@app-module/system.brightness"));

                        function c(t) {
                            return t && t.__esModule ? t : {default: t}
                        }

                        function d(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function u(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? d(Object(i), !0).forEach((function (e) {
                                    var o, n, a, s;
                                    o = t, n = e, a = i[e], (n = "symbol" == typeof (s = function (t, e) {
                                        if ("object" != typeof t || !t) return t;
                                        var i = t[Symbol.toPrimitive];
                                        if (void 0 !== i) {
                                            var o = i.call(t, "string");
                                            if ("object" != typeof o) return o;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(t)
                                    }(n)) ? s : String(s)) in o ? Object.defineProperty(o, n, {
                                        value: a,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : o[n] = a
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : d(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        let h = null;
                        e.default = {
                            data: {
                                changeable: 0,
                                changeableOld: 0,
                                transAn: "",
                                isShowMiddleMask: !1,
                                adunitid: null,
                                lottieCoinShow: !1,
                                adData: {imgUrlList: [], title: "", desc: "", clickBtnTxt: ""},
                                nativeAdvObj: null,
                                rgba: {r: 255, g: 255, b: 255, a: 1},
                                defaultStyle: {
                                    imageWidth: 342,
                                    imageHeight: 192,
                                    titleHeight: 48,
                                    titleFont: 22,
                                    titleColor: "#333333"
                                },
                                menuBarTop: 0,
                                menuBarRight: 0,
                                popShowGif: !1,
                                popShowGifImg: "",
                                nativeIsShowPop: !1,
                                backPressRefuseReport: !1,
                                isApplyShake: !1,
                                curMiddleConfig: {
                                    popType: "middle",
                                    popName: "自定义通用中插广告弹窗",
                                    popKey: "UL9H7FBF",
                                    popGroupName: "自定义通用中插广告弹窗组",
                                    popStyle: {
                                        layoutType: 1,
                                        width: 700,
                                        height: 1100,
                                        bgWidth: 700,
                                        bgHeight: 700,
                                        bgColor: "#eeeeee",
                                        bgRadio: 20,
                                        bgType: 1,
                                        bgImage: ""
                                    },
                                    maskStyle: {
                                        isShow: !0,
                                        maskType: 1,
                                        bgColor: "#000000",
                                        image: "",
                                        tip: {position: 1, distance: 40, width: 400, height: 200, image: ""}
                                    },
                                    wholeStyle: {
                                        bgType: 1,
                                        bgColor: "#ffffff",
                                        bgOpacity: .5,
                                        image: "https://ims.readnos.com/image%2F2022-08-19%2F1660905413369_9-9.jpg"
                                    },
                                    guideStyle: {
                                        isShow: !0,
                                        width: 500,
                                        height: 120,
                                        top: 450,
                                        image: "https://ims.readnos.com/image%2F2022-06-28%2F1656399103317_button.png"
                                    },
                                    tipStyle: {
                                        isShow: !0,
                                        width: 400,
                                        height: 200,
                                        distance: 40,
                                        image: "https://ims.readnos.com/image%2F2022-06-28%2F1656399103317_button.png"
                                    },
                                    commonStyle: {lockTime: 3e3, mistakeType: 1, isCover: !0},
                                    btnStyle: {
                                        text: "正向按钮文案",
                                        type: 1,
                                        radio: 40,
                                        height: 80,
                                        width: 660,
                                        bgColor: "#ff9900",
                                        color: "#ffffff",
                                        size: 30,
                                        top: 600,
                                        image: "https://ims.readnos.com/image%2F2022-06-28%2F1656399103317_button.png",
                                        huaweiValueType: 0,
                                        huaweiOpenType: 0
                                    },
                                    descStyle: {
                                        text: "这里广告文案描述",
                                        top: 370,
                                        width: 660,
                                        height: 60,
                                        size: 24,
                                        color: "#333333"
                                    },
                                    meterialStyle: {width: 660, height: 360, image: "", top: 20, radio: 20},
                                    bottomOcclusionStyle: {width: 0, height: 0, image: "", isShow: !1},
                                    functionConfig: {isCloseAd2ClickAd: 0}
                                },
                                curpopConfig: {
                                    popType: "boost",
                                    popName: "补量池广告",
                                    popGroupName: "补量池广告组",
                                    popKey: "UL9H7FBF",
                                    btnBackIsDisplay: !1,
                                    closeStyle: {
                                        isShow: !0,
                                        width: 25,
                                        height: 25,
                                        distance: 50,
                                        position: 4,
                                        delay: 2e3,
                                        opacity: 1,
                                        translateX: 0,
                                        top: 20,
                                        image: "https://tacticsclusters.oss-cn-beijing.aliyuncs.com/image%2F2023-06-19%2F1687168698801_def-close.png"
                                    },
                                    crowdStyle: {
                                        isShow: !1,
                                        width: 750,
                                        height: 40,
                                        color: "#ff9900",
                                        text: "这里是挤动文案",
                                        distance: 0,
                                        position: 1,
                                        delay: 3e3,
                                        image: "",
                                        font: 30,
                                        between: 30
                                    },
                                    popStyle: {
                                        height: 768,
                                        width: 633,
                                        image: "https://tacticsclusters.oss-cn-beijing.aliyuncs.com/image%2F2023-06-19%2F1687168686358_def-popup-bg.png"
                                    },
                                    btnStyle: {
                                        width: 497,
                                        height: 117,
                                        radio: 59,
                                        image: "",
                                        icon: "https://ims.readnos.com/image%2F2022-06-23%2F1655954565193_FL-JB%402x.png",
                                        iconSwitch: 0,
                                        hotTop: 0,
                                        hotBottom: 30,
                                        hotAbout: 20,
                                        bgColor: "#3563e0",
                                        color: "#FFFFFF",
                                        font: 36,
                                        text: "返回",
                                        breath: 0,
                                        jumpKey: 4,
                                        jumpValue: "PAGE_CODE",
                                        top: 543,
                                        left: 68,
                                        isBindingAd: 1,
                                        huaweiValueType: 0,
                                        huaweiOpenType: 0,
                                        isFirstRouter: 0
                                    },
                                    negStyle: {
                                        isShow: !0,
                                        width: 129,
                                        height: 40,
                                        font: 32,
                                        color: "#4875E3",
                                        left: 252,
                                        top: 694,
                                        radio: 0,
                                        jumpKey: 4,
                                        text: "继续观看",
                                        delay: 2e3,
                                        icon: ""
                                    },
                                    materialStyle: {width: 400, height: 225, top: 807},
                                    maskStyle: {opacity: .5, image: ""},
                                    commonStyle: {scale: 1, backLockTime: 5e3, isOpenShake: !1, shakePositionBottom: 0},
                                    menubarStyle: {
                                        isShow: !1,
                                        showType: 1,
                                        font: 40,
                                        text: "这里是滚动的menubar",
                                        image: "https://ims.readnos.com/image%2F2022-06-28%2F1656399103317_button.png",
                                        width: 750,
                                        height: 400,
                                        radio: 0
                                    },
                                    bottomStyle: {
                                        isShow: !1,
                                        showType: 1,
                                        font: 40,
                                        text: "这里是滚动的menubar",
                                        image: "https://ims.readnos.com/image%2F2022-06-28%2F1656399103317_button.png",
                                        width: 750,
                                        height: 400,
                                        radio: 0
                                    },
                                    iconStyle: {
                                        isShow: 0,
                                        width: 0,
                                        radius: 0,
                                        top: 0,
                                        left: 0,
                                        title: "",
                                        marginRight: 0,
                                        titleFontsize: 0,
                                        titleColor: "",
                                        desc: "",
                                        marginBottom: 0,
                                        descFontsize: 0,
                                        descColor: ""
                                    },
                                    customTextStyle: {
                                        canShow: !1,
                                        text: [{text: "22222", style: {color: "#fff"}}],
                                        style: {}
                                    },
                                    customBoxStyle: {style: {height: ""}},
                                    isCloseBtnToAd: !1,
                                    isNegBtnToAd: !1
                                },
                                delayConfig: {
                                    close: {type: !1, timer: null},
                                    crowd: {type: !1, timer: null},
                                    neg: {type: !1, timer: null},
                                    backPress: {type: !1, timer: null},
                                    middleLock: {type: !1, timer: null}
                                },
                                isShowBottomScence: !1,
                                xiaomiAdPayload: {
                                    upX: 0,
                                    upY: 0,
                                    downX: 0,
                                    downY: 0,
                                    adX: 0,
                                    adY: 0,
                                    height: 0,
                                    width: 0
                                },
                                isNoAd: !1,
                                isShowCloseAdPop: !1,
                                closeAd2Mark: "",
                                positionRight: 750,
                                isXM2Show: !1,
                                beforeJumpGif: !1,
                                isAllowBackPress: !1,
                                beforeJumpImg: {url: "", width: 0, height: 0},
                                adContentStyle: "",
                                isXmTemplateAd: !1,
                                curBrightnessVal: 0,
                                interfaceInUse: !1,
                                complaintOpen: 0,
                                complaintShow: !1,
                                complaintLeft: 20,
                                complaintTop: 1e3,
                                complaintIcon: "../../assets/images/complaint_button.png",
                                isShowComplaintPop: !1,
                                isShowLastComplaintPop: !1,
                                isShowControlSwitch: null
                            },
                            props: {
                                index: {type: Number, default: 0},
                                popCode: {type: String, default: ""},
                                backPressTimes: {type: Number, default: 0},
                                isShowPop: {type: Boolean, default: !1},
                                isAuditUser: {type: Boolean, default: !1},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                isFullScreen: {type: Boolean, default: !1},
                                pageCode: {type: String, default: ""},
                                pageName: {type: String, default: ""},
                                adRequestTimes: {type: Number, default: 0},
                                popType: {type: String, default: "boost"},
                                winHeight: {type: Number, default: 0},
                                customAction: {type: Object, default: {}},
                                preloadVedioReady: {type: Boolean, default: !1},
                                dataPollNativeAdvObj: {type: Object, default: {}},
                                noAdPreloadVideoReady: {type: Boolean, default: !1},
                                adType: {type: Number, default: 1}
                            },
                            async onInit() {
                                this.$watch("changeableOld", "changeableFn");
                                let t = this;
                                if (LOG("CUSTOM", "adData", t.isAuditUser), t.initAdImageRect(), t.$on("updateAdTitleArr", t.updateAdTitleArrHandle), t.$on("showSecondScreenPop", t.showSecondScreenPopHandle), t.$watch("backPressTimes", "backPressTimesChangeHandler"), t.$watch("isShowPop", "isShowPopChangeHandle"), "forcePop" === t.customAction.model || "purePop" === t.customAction.model) return void t.forceShowPop();
                                if (t.dataPollNativeAdvObj && t.dataPollNativeAdvObj.id) {
                                    t.nativeAdvObj = t.dataPollNativeAdvObj, t.nativeAdvObj.isUIShow = !0;
                                    const e = 7 === t.nativeAdvObj.adType && AD_UTILS.isXM2(t.nativeAdvObj.brand);
                                    return void (t.isXmTemplateAd = e)
                                }
                                LOG("ecpm req", t.adType);
                                let e = await t.getAdData(t.adType);
                                if (LOG("ecpm res", e, t.adType), LOG("CUSTOM", "adData", e), e) {
                                    t.nativeAdvObj = e, 9 === t.nativeAdvObj.adType ? t.nativeAdvObj.isUIShow = !1 : t.nativeAdvObj.isUIShow = !0;
                                    const i = 7 === t.nativeAdvObj.adType && AD_UTILS.isXM2(t.nativeAdvObj.brand);
                                    if (t.isXmTemplateAd = i, LOG("SwapAd 请求广告结果 isXmTemplateAd:", i, e), "oppo" !== t.nativeAdvObj.brand) if (i || (t.$emit("eventWatch", {
                                        popData: {
                                            popConfig: t.curpopConfig,
                                            advConfig: t.nativeAdvObj
                                        },
                                        index: t.index,
                                        eventName: "adLoadSuccess",
                                        action: "adLoadSuccess",
                                        actionCode: t.actionCode,
                                        customAction: t.customAction
                                    }), t.priorityAdHandle(0)), AD_UTILS.isXM2(t.nativeAdvObj.brand)) {
                                        let e = TACTICS_SDK.getGlobalData("configInfo").config.xiaomi2_probability_preload_show;
                                        e = e ? Number(e.val) : 100, t.isXM2Show = !!$utils.getProbabilityNum(1, e)
                                    } else t.adPicShowFunc();
                                    "huawei" == t.nativeAdvObj.brand && t.isFullScreen && (t.menuBarTop = 16)
                                } else t.$emit("eventWatch", {
                                    popData: {popConfig: t.curpopConfig, advConfig: null},
                                    index: t.index,
                                    eventName: "adLoadFailed",
                                    action: "adLoadFailed",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                });
                                this.popShowGif = !1
                            },
                            changeableFn() {
                                if (["roll", "rise"].includes(this.transAn) && !isNaN(this.changeableOld)) {
                                    LOG("=== // roll rise");
                                    let t = setTimeout((() => {
                                        let e = this.changeableOld > 100 ? 200 : 40, i = Math.floor(Math.random() * e);
                                        this.changeable + i > this.changeableOld ? (this.changeable = this.changeableOld, clearTimeout(t)) : (this.changeable += i, this.changeableFn())
                                    }), 120)
                                } else if ("count" != this.transAn || isNaN(this.changeableOld)) this.changeable = this.changeableOld; else {
                                    LOG("=== // 倒计时", this.changeable);
                                    let t = setTimeout((() => {
                                        this.changeable--, this.changeable > 0 ? this.changeableFn() : clearTimeout(t)
                                    }), 1e3)
                                }
                            },
                            getMenuData() {
                                let t = this;
                                try {
                                    let e = t.$page.getMenuBarRect();
                                    e && e.menuBarWidth > 0 && a.default.getInfo({
                                        success: function (i) {
                                            try {
                                                let o = 750 / i.screenWidth;
                                                t.menuBarRight = t.keepTwoDecimal(750 - e.menuBarRight * o), t.menuBarHeight = e.menuBarHeight, t.menuBarWidth = t.keepTwoDecimal(e.menuBarWidth * o), t.menuBarTop = t.keepTwoDecimal(e.menuBarTop * o)
                                            } catch (t) {
                                            }
                                        }
                                    })
                                } catch (t) {
                                }
                            },
                            keepTwoDecimal(t) {
                                var e = parseFloat(t);
                                return !isNaN(e) && Math.round(100 * t) / 100
                            },
                            initAdImageRect() {
                                let t = this, e = t.getIsShowBoostAdHandle();
                                t.defaultStyle.imageWidth = t.isAuditUser ? e ? 540 : 702 : 342, t.isAuditUser && e && (t.defaultStyle.imageHeight = 303.5, t.defaultStyle.titleHeight = 66)
                            },
                            isShowPopChangeHandle(t, e) {
                                let i = this;
                                LOG("CUSTOM", "isShowPopChangeHandle==>newVal", t), i.isShowMiddleMask = !1, Boolean(t) ? ("SECOND_SCREEN_TOUCH" !== i.actionCode && i.initViewHide(), i.getCodeData(i.popCode), AD_SDK_UTILS.adConfigData.uploadFristPopClick++) : (i.isShowBottomScence = !1, i.nativeAdvObj.popName = "补量池广告", i.nativeAdvObj.popGroupName = "补量池广告组", i.curpopConfig.popType = "boost", i.backPressRefuseReport = !1, AD_SDK_UTILS.updataAdConfigData({uploadFristPopClick: 3}), i.nativeIsShowPop = !1, i.initViewHide())
                            },
                            async getCodeData(t = "CommonNative_K6DFO7PF") {
                                let e = this,
                                    i = await TACTICS_SDK_UTILS.getPopupConfigByPopupCode(t, e.customAction.popKey || "", e.nativeAdvObj.id);
                                if (LOG("CUSTOM", "getCodeData==>result", i), i) {
                                    if (e.curMiddleConfig.bottomOcclusionStyle && (e.curMiddleConfig.bottomOcclusionStyle.isShow = !1), e.curpopConfig.commonStyle.isOpenShake = !1, e.curpopConfig.btnStyle.isFirstRouter = 0, "middlenative" === t.split("_")[0].toLowerCase()) {
                                        i = e.getMiddleFeature(i), LOG("CUSTOM", "getMiddleFeature==>result", i), i = Object.assign({}, i, {actionCode: e.actionCode}), e.nativeAdvObj.popName = i.popName, e.nativeAdvObj.popGroupName = i.popGroupName, e.curMiddleConfig = i, e.nativeIsShowPop = !0, e.customAction.popKey || TACTICS_SDK.sePopupShowTimes(t), e.initViewShowMiddle(), e.$emit("eventWatch", {
                                            popData: {
                                                popConfig: i,
                                                advConfig: null
                                            },
                                            popKey: e.curMiddleConfig.popKey,
                                            index: e.index,
                                            eventName: "patchPopkey",
                                            action: "patchPopkey",
                                            actionCode: e.actionCode,
                                            customAction: e.customAction,
                                            isExitKey: Boolean(e.customAction.popKey),
                                            needCreatVideoAd: !(!e.curMiddleConfig.bottomOcclusionStyle || !e.curMiddleConfig.bottomOcclusionStyle.isShow)
                                        }), e.nativeAdvObj.referer = e.action2Name(e.actionCode), COMMON_REPORT_UTILS.ad_sdk_take(e.nativeAdvObj, e.pageName);
                                        let o = {
                                            ad_network: e.nativeAdvObj.ad_network,
                                            page_type: e.curMiddleConfig.popGroupName,
                                            ad_position: e.curMiddleConfig.popName,
                                            ad_style: e.curMiddleConfig.commonStyle.isCover ? "自定义文案" : "厂商文案",
                                            page_name: "有",
                                            ext_field_9: e.action2Name(e.actionCode),
                                            ext_field_2: `${e.nativeAdvObj.layer + 1}`,
                                            ext_field_3: "是",
                                            ad_type: e.nativeAdvObj.ad_type,
                                            ad_id: e.nativeAdvObj.id,
                                            referer: "",
                                            scene: ""
                                        };
                                        e.setAdStyle(o), COMMON_REPORT_UTILS.custom_popup_show_report(o.ad_network, o.page_type, o.ad_position, o.ad_style, o.page_name, o.ext_field_9, o.ext_field_2, o.ext_field_3, o.ad_id, o.scene, o.referer, o.ad_type, AD_SDK.getAppStatus(e.nativeAdvObj)), "oppo" == e.nativeAdvObj.brand && "2.0" == e.nativeAdvObj.adMethod ? setTimeout((() => {
                                            e.isShowMiddleMask = !0, e.isShowBottomScence = !0
                                        }), 300) : e.isShowBottomScence = !0
                                    } else {
                                        i = e.getFeature(i), LOG("CUSTOM", "getFeature==>result", i), i = Object.assign({}, i, {actionCode: e.actionCode}), e.getComplaintConfig(i.customStyle.is_show_complaint), e.isShowControlSwitch = i.customStyle.is_show_complaint_last_pop, i.menubarStyle.isShow && e.getMenuData(), i.bottomStyle && i.bottomStyle.isShow && e.getMenuData(), e.nativeAdvObj.popName = i.popName, e.nativeAdvObj.popGroupName = i.popGroupName, e.curpopConfig = e.priorityPopConfigHandle(1, i), this.getAdContentStyle(), this.popBeforeShowGif(e.curpopConfig), e.nativeIsShowPop = !0, e.popShowCoinFlash(), TACTICS_SDK.sePopupShowTimes(t), e.initViewShow(), e.$emit("eventWatch", {
                                            popData: {
                                                popConfig: e.curpopConfig,
                                                advConfig: e.nativeAdvObj
                                            },
                                            index: e.index,
                                            eventName: "popShow",
                                            action: "popShow",
                                            actionCode: e.actionCode,
                                            customAction: e.customAction
                                        }), e.nativeAdvObj.referer = e.action2Name(e.actionCode), COMMON_REPORT_UTILS.ad_sdk_take(e.nativeAdvObj, e.pageName);
                                        let o = {
                                            ad_network: e.nativeAdvObj.ad_network,
                                            page_type: "middle" == e.popType ? e.curMiddleConfig.popGroupName : e.curpopConfig.popGroupName,
                                            ad_position: "middle" == e.popType ? e.curMiddleConfig.popName : e.curpopConfig.popName,
                                            ad_style: "厂商文案",
                                            page_name: "有",
                                            ext_field_9: e.action2Name(e.actionCode),
                                            ext_field_2: `${e.nativeAdvObj.layer + 1}`,
                                            ext_field_3: "否",
                                            ad_type: e.nativeAdvObj.ad_type,
                                            ad_id: e.nativeAdvObj.id,
                                            referer: "middle" !== e.popType && e.curpopConfig.configBaseFormData && e.curpopConfig.configBaseFormData.function_name || "",
                                            scene: ""
                                        };
                                        e.nativeIsShowPop && ("middle" == e.popType && e.curMiddleConfig.commonStyle.isCover ? o.ad_style = "自定义文案" : "middle" != e.popType || e.curMiddleConfig.commonStyle.isCover ? "middle" !== e.popType && e.curpopConfig.btnStyle.text ? o.ad_style = "自定义文案" : "middle" === e.popType || e.curpopConfig.btnStyle.text || (o.ad_style = "厂商文案") : o.ad_style = "厂商文案"), e.setAdStyle(o), e.nativeIsShowPop && "middle" !== e.popType && e.curpopConfig.configBaseFormData && (o.scene = e.curpopConfig.configBaseFormData.custom_content), o.ext_field_2 = `${e.nativeAdvObj.layer + 1}`, e.nativeIsShowPop && "middle" !== e.popType && 1 == e.curpopConfig.btnStyle.isBindingAd && (o.ext_field_3 = "是"), e.nativeIsShowPop && "middle" !== e.popType && 1 == e.curpopConfig.commonStyle.notViewBackClosePopup && (o.ext_field_3 = "是"), e.nativeIsShowPop && "middle" == e.popType && (o.ext_field_3 = "是"), COMMON_REPORT_UTILS.custom_popup_show_report(o.ad_network, o.page_type, o.ad_position, o.ad_style, o.page_name, o.ext_field_9, o.ext_field_2, o.ext_field_3, o.ad_id, o.scene, o.referer, o.ad_type, AD_SDK.getAppStatus(e.nativeAdvObj))
                                    }
                                    e.isXM2Show = !0, e.isAllowBackPress = !0, e.isXmTemplateAd || e.priorityAdHandle(1), e.changeBrightnessHandle()
                                } else e.$emit("eventWatch", {
                                    popData: {
                                        popConfig: e.curpopConfig,
                                        advConfig: e.nativeAdvObj
                                    },
                                    index: e.index,
                                    eventName: "closePopData",
                                    action: "popCodeError",
                                    actionCode: e.actionCode,
                                    customAction: e.customAction
                                })
                            },
                            removeMiddleAd(t) {
                                let e = this;
                                if (t.stopPropagation(), CLICK_UTILS.dom_click_vali_shake(`removeMiddleAd_${e.__id__}`, 1e3)) {
                                    if (LOG("CUSTOM", "removeMiddleAd==>去广告按钮点击"), COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), COMMON_REPORT_UTILS.page_click_report("中插去广告"), !e.curMiddleConfig.functionConfig.isCloseAd2ClickAd) return e.isShowCloseAdPop = !0, e.$on("changeCloseAdPop", e.changeCloseAdPopHandle), void e.$emit("eventWatch", {
                                        eventName: "changeCloseAdPop",
                                        isShowCloseAdPop: !0
                                    });
                                    e.closeAd2Mark = "中插去广告", (AD_UTILS.isXM1(this.nativeAdvObj.brand) || "huawei" == e.nativeAdvObj.brand || AD_UTILS.isVivo1(this)) && e.adClickForImg()
                                }
                            },
                            middleAdContentSwiperHandler(t) {
                                let e = this;
                                if (e.curMiddleConfig.commonStyle.mistakeType) switch (t.direction) {
                                    case"left":
                                    case"right":
                                        LOG("CUSTOM", "xiaomi ad swiper left or right"), LOG("CUSTOM", "xiaomi ad 执行滑动点击操作"), e.adClickForBtn()
                                } else {
                                    if ("up" == t.direction || "down" == t.direction) return;
                                    if (!e.delayConfig.middleLock.type && "left" == t.direction) return void $utils.showToast(e.customAction.toast || "");
                                    e.customAction.isFirstAd && "right" == t.direction ? $utils.showToast("已经是第一页了") : (COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), e.middleAdActionHandler("left" == t.direction ? "nextPage" : "prevPage", "left" == t.direction ? "下一页" : "上一页"))
                                }
                                t.stopPropagation()
                            },
                            middleXiaomiAdContentSwiperHandler(t) {
                                LOG("CUSTOM", "evt=>", t);
                                let e = this;
                                if ("up" != t.direction && "down" != t.direction) if (e.delayConfig.middleLock.type || "left" != t.direction) switch (t.direction) {
                                    case"left":
                                    case"right":
                                        LOG("CUSTOM", "xiaomi swiper left or right"), LOG("CUSTOM", "xiaomi 执行滑动关闭弹窗操作"), e.customAction.isFirstAd && "right" == t.direction ? $utils.showToast("已经是第一页了") : (COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), e.middleAdActionHandler("left" == t.direction ? "nextPage" : "prevPage", "left" == t.direction ? "下一页" : "上一页"))
                                } else $utils.showToast(e.customAction.toast || "")
                            },
                            middleOppoAdContentSwiper(t) {
                                let e = this;
                                if (LOG("CUSTOM", "middleOppoAdContentSwiper==>", t), "up" != t.direction && "down" != t.direction) if (e.delayConfig.middleLock.type || "left" != t.direction) switch (t.direction) {
                                    case"left":
                                    case"right":
                                        LOG("CUSTOM", "oppo swiper left or right"), LOG("CUSTOM", "oppo 执行滑动点击操作"), e.customAction.isFirstAd && "right" == t.direction ? $utils.showToast("已经是第一页了") : (COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), e.middleAdActionHandler("left" == t.direction ? "nextPage" : "prevPage", "left" == t.direction ? "下一页" : "上一页"))
                                } else $utils.showToast(e.customAction.toast || "")
                            },
                            middleVivoAdContentSwiper(t) {
                                let e = this;
                                if (LOG("CUSTOM", "middleVivoAdContentSwiper==>", t), t.target.attr.poptype && "emptyarea" == t.target.attr.poptype) {
                                    if ("up" == t.direction || "down" == t.direction) return;
                                    if (!e.delayConfig.middleLock.type && "left" == t.direction) return void $utils.showToast(e.customAction.toast || "");
                                    switch (t.direction) {
                                        case"left":
                                        case"right":
                                            LOG("CUSTOM", "vivo swiper left or right"), LOG("CUSTOM", "vivo 执行滑动点击操作"), e.customAction.isFirstAd && "right" == t.direction ? $utils.showToast("已经是第一页了") : (COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), e.middleAdActionHandler("left" == t.direction ? "nextPage" : "prevPage", "left" == t.direction ? "下一页" : "上一页"))
                                    }
                                }
                            },
                            middleAdContentClick(t) {
                                let e = this;
                                if (LOG("CUSTOM", "middleAdContent==>", t), CLICK_UTILS.dom_click_vali_shake(`middleAdContentClick_${e.__id__}`, 500) && t.target.attr.poptype && "emptyarea" == t.target.attr.poptype) {
                                    if (!e.delayConfig.middleLock.type && Number(t.pageX) > 375) return void $utils.showToast(e.customAction.toast || "");
                                    LOG("CUSTOM", "点击了空白区域关闭弹窗"), e.customAction.isFirstAd && Number(t.pageX) <= 375 ? $utils.showToast("已经是第一页了") : (COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), e.middleAdActionHandler(Number(t.pageX) > 375 ? "nextPage" : "prevPage", Number(t.pageX) > 375 ? "下一页" : "上一页"))
                                }
                            },
                            middleAdActionHandler(t, e) {
                                let i = this;
                                i.reportClick(e), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == i.popType ? i.curMiddleConfig : i.curpopConfig,
                                        advConfig: i.nativeAdvObj
                                    },
                                    index: i.index,
                                    eventName: "closePopData",
                                    action: t,
                                    actionCode: i.actionCode,
                                    customAction: i.customAction
                                })
                            },
                            getMiddleFeature(t) {
                                let e = this, i = Object.assign({}, t);
                                if (i.maskStyle.tip.image || (i.maskStyle.tip.width = 0, i.maskStyle.tip.height = 0, i.maskStyle.tip.distance = 0), 2 == i.popStyle.layoutType && (i.tipStyle.isShow = !1, i.maskStyle.tip.position = 1), i.tipStyle.isShow || (i.tipStyle.width = 0, i.tipStyle.height = 0, i.tipStyle.distance = 0), e.customAction.popKey && e.customAction.isNotLock && (i.commonStyle.lockTime = 0), i.btnStyle.height = e.nativeAdvObj && e.nativeAdvObj.isUsedAdButton && Number(i.btnStyle.height) > 60 ? 60 : Number(i.btnStyle.height), 2 === Number(e.nativeAdvObj.isUsedAdButton)) {
                                    let t = "", e = "", o = "";
                                    i.btnStyle.image && -1 == i.btnStyle.image.indexOf(".gif") ? (e = i.btnStyle.image, t = "", o = i.btnStyle.color) : (e = "", t = i.btnStyle.bgColor || "#FB3A2D", o = "#ffffff"), i.btnStyle.hwBtnBgColor = t, i.btnStyle.hwBtnBgImage = e, i.btnStyle.hwBtnColor = o
                                } else i.btnStyle.hwBtnBgColor = "", i.btnStyle.hwBtnBgImage = "", i.btnStyle.hwBtnColor = i.btnStyle.color;
                                let o = {functionConfig: {isCloseAd2ClickAd: 0}},
                                    n = TACTICS_SDK.getGlobalData("configInfo").config;
                                return n.open_remove_ad_touch && Number(n.open_remove_ad_touch.val) && ((!h || h && 1 === h.curMiddleConfig.functionConfig.isCloseAd2ClickAd) && (o.functionConfig.isCloseAd2ClickAd = 1), h = this), i = Object.assign({}, i, o), i
                            },
                            getFeature(t) {
                                let e = this, i = Object.assign({}, t), o = parseFloat(t.commonStyle.scale);
                                i.btnStyle.font = Number(i.btnStyle.font) * o, i.btnStyle.height = e.nativeAdvObj && e.nativeAdvObj.isUsedAdButton && Number(i.btnStyle.height) * o > 60 ? 60 : Number(i.btnStyle.height) * o, i.btnStyle.hotAbout = e.nativeAdvObj && e.nativeAdvObj.isUsedAdButton ? 0 : Number(i.btnStyle.hotAbout) * o, i.btnStyle.hotBottom = e.nativeAdvObj && e.nativeAdvObj.isUsedAdButton ? 0 : Number(i.btnStyle.hotBottom) * o, i.btnStyle.hotTop = e.nativeAdvObj && e.nativeAdvObj.isUsedAdButton ? 0 : Number(i.btnStyle.hotTop) * o, "xiaomi" == e.nativeAdvObj.brand && (i.btnStyle.height = Number(i.btnStyle.height) > 180 ? 180 : Number(i.btnStyle.height), i.btnStyle.hotAbout = 0, i.btnStyle.hotTop = 0, i.btnStyle.hotBottom = 0), i.btnStyle.left = Number(i.btnStyle.left) * o, i.btnStyle.radio = Number(i.btnStyle.radio) * o, i.btnStyle.top = Number(i.btnStyle.top) * o, i.btnStyle.width = Number(i.btnStyle.width) * o, i.closeStyle.distance = Number(i.closeStyle.distance) * o, i.closeStyle.height = Number(i.closeStyle.height) * o, i.closeStyle.top = Number(i.closeStyle.top) * o, i.closeStyle.width = Number(i.closeStyle.width) * o, i.closeStyle.translateX = Number(i.closeStyle.translateX) * o, i.negStyle.font = Number(i.negStyle.font) * o, i.negStyle.height = Number(i.negStyle.height) * o, i.negStyle.left = Number(i.negStyle.left) * o, i.negStyle.top = Number(i.negStyle.top) * o, i.negStyle.width = Number(i.negStyle.width) * o, i.popStyle.width = Number(i.popStyle.width) * o, i.popStyle.height = Number(i.popStyle.height) * o, i.materialStyle.height = Number(i.materialStyle.height) * o, i.materialStyle.width = Number(i.materialStyle.width) * o, i.materialStyle.top = Number(i.materialStyle.top) * o;
                                let n = Number(i.materialStyle.fixedLeft) * o, a = Number(i.materialStyle.fixedTop) * o,
                                    s = Number(i.materialStyle.fixedRight) * o,
                                    r = Number(i.materialStyle.fixedBottom) * o,
                                    p = i.materialStyle.fixedLeft && i.materialStyle.fixedTop,
                                    l = i.materialStyle.fixedRight && i.materialStyle.fixedBottom, c = p || l;
                                if (c ? p ? (i.materialStyle.left = n, i.materialStyle.top = a) : (i.materialStyle.left = 750 - s - i.materialStyle.width, i.materialStyle.top = e.winHeight - r - i.materialStyle.height) : (i.materialStyle.left = (i.popStyle.width - i.materialStyle.width) / 2, i.materialStyle.top = i.materialStyle.top), i.materialStyle.position = c ? "fixed" : "absolute", i.iconStyle && (i.iconStyle.width = Number(i.iconStyle.width) * o, i.iconStyle.radius = Number(i.iconStyle.radius) * o, i.iconStyle.left = Number(i.iconStyle.left) * o, i.iconStyle.top = Number(i.iconStyle.top) * o * e.winHeight / 1950, i.iconStyle.marginRight = Number(i.iconStyle.marginRight) * o, i.iconStyle.titleFontsize = Number(i.iconStyle.titleFontsize) * o, i.iconStyle.titleWidth = Number(i.iconStyle.titleWidth) * o, i.iconStyle.marginBottom = Number(i.iconStyle.marginBottom) * o, i.iconStyle.descFontsize = Number(i.iconStyle.descFontsize) * o, i.iconStyle.descWidth = Number(i.iconStyle.descWidth) * o), i.customStyle) {
                                    const {
                                        is_open_xiaomi_button_text: t,
                                        xiaomi_button_text_font_size: e,
                                        xiaomi_button_text_top: o,
                                        xiaomi_button_text_right: n,
                                        is_show_complaint: a,
                                        is_show_complaint_last_pop: s
                                    } = i.customStyle;
                                    i.customStyle = u(u({}, i.customStyle), {}, {
                                        is_open_xiaomi_button_text: ~~t,
                                        xiaomi_button_text_font_size: ~~e,
                                        xiaomi_button_text_top: ~~o,
                                        xiaomi_button_text_right: ~~n,
                                        is_show_complaint: ~~a,
                                        is_show_complaint_last_pop: ~~s
                                    });
                                    const {is_open_toast: r, toast_text: p} = i.customStyle;
                                    i.customStyle = u(u({}, i.customStyle), {}, {is_open_toast: ~~r, toast_text: p})
                                } else i.customStyle = {};
                                if (i.crowdStyle.between = Number(i.crowdStyle.between) * o, i.crowdStyle.distance = Number(i.crowdStyle.distance) * o, i.crowdStyle.font = Number(i.crowdStyle.font) * o, i.crowdStyle.height = Number(i.crowdStyle.height) * o, 2 === Number(e.nativeAdvObj.isUsedAdButton)) {
                                    let t = "", e = "", o = "";
                                    i.btnStyle.image && -1 == i.btnStyle.image.indexOf(".gif") ? (e = i.btnStyle.image, t = "", o = i.btnStyle.color) : (e = "", t = i.btnStyle.bgColor || "#FB3A2D", o = "#ffffff"), i.btnStyle.hwBtnBgColor = t, i.btnStyle.hwBtnBgImage = e, i.btnStyle.hwBtnColor = o
                                } else i.btnStyle.hwBtnBgColor = "", i.btnStyle.hwBtnBgImage = "", i.btnStyle.hwBtnColor = i.btnStyle.color;
                                if (this.changeableOld = 0, this.changeable = 0, i.customTextStyle = {
                                    canShow: !1,
                                    text: [{text: "22222", style: {color: "#fff"}}],
                                    style: {}
                                }, i.customBoxStyle = {}, i.customTextStyle.style = {
                                    height: Number(i.commonStyle.customHeight) * o + "px",
                                    width: Number(i.commonStyle.customWidth) * o + "px",
                                    top: Number(i.commonStyle.customTextOffsetTop) * o + "px",
                                    flexDirection: "row",
                                    justifyContent: "center",
                                    alignItems: "center",
                                    position: "absolute"
                                }, 0 == Number(i.commonStyle.customTextOffsetLeft) ? i.customTextStyle.style.alignSelf = "center" : i.customTextStyle.style.left = Number(i.commonStyle.customTextOffsetLeft) * o + "px", console.log("VIEW", "原始自定义数据  ", i.commonStyle.customText), i.commonStyle.customText) {
                                    let t = i.commonStyle.customText.split("-"), e = t[1];
                                    var d = [], h = {C: "color", F: "fontSize", B: "fontWeight"},
                                        f = t[0].split("$").filter((t => t));
                                    console.log("allr", f);
                                    for (let t of f) {
                                        console.log(t);
                                        let e = {text: "", style: {}, class: ""}, i = t.split("_");
                                        e.text = i[0];
                                        let o = i[1].split(",");
                                        for (let t of o) e.style[h[t.split(":")[0]]] = t.split(":")[1];
                                        d.push(e)
                                    }
                                    console.log(d), i.customTextStyle.text = d.map((t => (t.style.fontSize = Number(t.style.fontSize) * o + "px", t.style.alignSelf = "auto", "@" == t.text && (t.class = e), t))), this.transAn = e, "count" == this.transAn && (this.changeable = POP_TOOLS.getDynamicText(this.actionCode) || "7"), this.changeableOld = POP_TOOLS.getDynamicText(this.actionCode) || "500", LOG("== this.transAn", this.transAn)
                                }
                                i.customTextStyle.canShow = i.commonStyle.customDisplay, Number(i.commonStyle.customTextOffsetTop) < 0 ? (i.customTextStyle.style.top = "0px", i.customBoxStyle.style = {
                                    height: Number(-i.commonStyle.customTextOffsetTop) * o + "px",
                                    width: "100%"
                                }) : (i.customTextStyle.top = Number(i.commonStyle.customTextOffsetTop) * o + "px", i.customBoxStyle.style = {
                                    height: "0px",
                                    width: "100%"
                                }), this.isCloseBtnTouchOpen() ? i.isCloseBtnToAd = !0 : i.isCloseBtnToAd = !1, this.isNegBtnTouchOpen() ? i.isNegBtnToAd = !0 : i.isNegBtnToAd = !1;
                                try {
                                    if (e.checkActionCodeIsScreen) {
                                        let t = {
                                            screenConfig: {
                                                screenCountDownTime: 0,
                                                isScreen2ClickAd: 0,
                                                screenTouchProbability: 0,
                                                renderSwitch: !1,
                                                text: "跳过",
                                                position: 3,
                                                style: 1
                                            }
                                        };
                                        i = Object.assign({}, i, t)
                                    }
                                } catch (t) {
                                }
                                return this.isLottie(i.commonStyle.transitionBeforeJumpImg) ? this.getImgInfo(i.commonStyle.transitionBeforeJumpImg, "beforeJumpImg") : this.beforeJumpImg = i.commonStyle.transitionBeforeJumpImg, i
                            },
                            initViewShowMiddle() {
                                let t = this;
                                LOG("CUSTOM", "initViewShowMiddle==>1", t.curMiddleConfig.commonStyle.lockTime), t.curMiddleConfig.commonStyle.lockTime > 0 ? (LOG("CUSTOM", "initViewShowMiddle==>11"), t.delayConfig.middleLock.timer = setTimeout((() => {
                                    LOG("CUSTOM", "initViewShowMiddle==>2"), t.delayConfig.middleLock.type = !0, clearTimeout(t.delayConfig.middleLock.timer), t.delayConfig.middleLock.timer = null
                                }), t.curMiddleConfig.commonStyle.lockTime)) : t.delayConfig.middleLock.type = !0
                            },
                            initViewShow() {
                                let t = this;
                                t.curpopConfig.closeStyle.delay > 0 ? t.delayConfig.close.timer = setTimeout((() => {
                                    t.delayConfig.close.type = !0, clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null
                                }), t.curpopConfig.closeStyle.delay) : t.delayConfig.close.type = !0, t.curpopConfig.crowdStyle.delay > 0 ? t.delayConfig.crowd.timer = setTimeout((() => {
                                    t.delayConfig.crowd.type = !0, clearTimeout(t.delayConfig.crowd.timer), t.delayConfig.crowd.timer = null
                                }), t.curpopConfig.crowdStyle.delay) : t.delayConfig.crowd.type = !0, t.curpopConfig.negStyle.delay > 0 ? t.delayConfig.neg.timer = setTimeout((() => {
                                    t.delayConfig.neg.type = !0, clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null
                                }), t.curpopConfig.negStyle.delay) : t.delayConfig.neg.type = !0, t.curpopConfig.commonStyle.backLockTime > 0 ? t.delayConfig.backPress.timer = setTimeout((() => {
                                    t.delayConfig.backPress.type = !0, clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null
                                }), t.curpopConfig.commonStyle.backLockTime) : t.delayConfig.backPress.type = !0
                            },
                            initViewHide() {
                                let t = this;
                                this.stopAudio(), "middle" == t.popType ? (LOG("CUSTOM", "initViewHide==>0001", this.index), t.delayConfig.middleLock.timer && (clearTimeout(t.delayConfig.middleLock.timer), t.delayConfig.middleLock.timer = null), t.delayConfig.middleLock.type = !1) : (LOG("CUSTOM", "initViewHide==>0002", this.index), t.delayConfig.close.timer && (clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null), t.delayConfig.crowd.timer && (clearTimeout(t.delayConfig.crowd.timer), t.delayConfig.crowd.timer = null), t.delayConfig.neg.timer && (clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null), t.delayConfig.backPress.timer && (clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null), t.delayConfig.close.type = !1, t.delayConfig.crowd.type = !1, t.delayConfig.neg.type = !1, t.delayConfig.backPress.type = !1)
                            },
                            backPressTimesChangeHandler(t, e) {
                                let i = this;
                                if (i.isShowComplaintPop && (LOG("物理返回时弹窗上的投诉弹框未关闭!"), i.isShowComplaintPop = !1, COMMON_REPORT_UTILS.pop_click_report("", "", 1, "", "物理返回", "", "投诉弹窗")), !i.priorityPopConfigHandle(0)) if (i.isAllowBackPress) if (i.delayConfig.backPress.type) CLICK_UTILS.dom_click_vali_shake(`backPressTimesChangeHandler_${i.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(i.nativeAdvObj, i.pageName), i.reportClick("物理返回"), LOG("息屏日志", "物理返回恢复亮度"), i.recoverBrightnessHandle(), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == i.popType ? i.curMiddleConfig : i.curpopConfig,
                                        advConfig: i.nativeAdvObj
                                    },
                                    index: i.index,
                                    eventName: "closePopData",
                                    action: "backPress",
                                    actionCode: i.actionCode,
                                    customAction: i.customAction
                                }), i.initViewHide()); else {
                                    if (LOG("CUSTOM", "物理返回拦截中"), i.backPressRefuseReport) return;
                                    i.backPressRefuseReport = !0;
                                    let t = {
                                        ad_position: i.curpopConfig.popName,
                                        page_type: i.curpopConfig.popGroupName,
                                        element_name: "关闭弹窗拦截"
                                    };
                                    COMMON_REPORT_UTILS.back_click_report(t.ad_position, t.page_type, t.element_name)
                                } else LOG("防止上报未知物理返回拦截")
                            },
                            backIconClick() {
                                let t = this;
                                LOG("CUSTOM", "backIconClick"), CLICK_UTILS.dom_click_vali_shake(`backIconClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.nativeAdvObj, t.pageName), t.reportClick("返回按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == t.popType ? t.curMiddleConfig : t.curpopConfig,
                                        advConfig: t.nativeAdvObj
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "backIconClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())
                            },
                            endTime(t) {
                            },
                            closeClick(t) {
                                let e = this;
                                if ("SCREEN_TOUCH" === e.actionCode && e.isOpenSecondScreenAd() && !e.$root().isSecondScreenPopComplete) {
                                    const {
                                        secondScreen: t,
                                        adScreen: i,
                                        fristScreen: o,
                                        homeFristHeader: n,
                                        adChapterHead: a
                                    } = AD_SDK_UTILS.getSpecialCondJudgment();
                                    o && t && AD_SDK_UTILS.getRequestHandle(3), o && AD_SDK_UTILS.getRequestHandle(2), e.$app.$def.screenAdEnd({detail: {actionCode: "SCREEN_TOUCH"}})
                                }
                                if (t && t.detail && t.detail.logName) e.reportClick(t.detail.logName); else {
                                    if (!e.delayConfig.close.type) return void LOG("CUSTOM", "关闭按钮点击拦截中^_^");
                                    if (LOG("CUSTOM", "closeClick"), !CLICK_UTILS.dom_click_vali_shake(`closeClick_${e.__id__}`, 500)) return;
                                    e.reportClick("关闭")
                                }
                                COMMON_REPORT_UTILS.ad_sdk_back(e.nativeAdvObj, e.pageName), e.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == e.popType ? e.curMiddleConfig : e.curpopConfig,
                                        advConfig: e.nativeAdvObj
                                    },
                                    index: e.index,
                                    eventName: "closePopData",
                                    action: "closeClick",
                                    actionCode: e.actionCode,
                                    customAction: e.customAction,
                                    isNeedDeleteComp: t && t.detail && "xiaomi系统关闭" === t.detail.logName
                                }), e.initViewHide()
                            },
                            negClick() {
                                let t = this;
                                t.delayConfig.neg.type ? (LOG("CUSTOM", "negClick"), CLICK_UTILS.dom_click_vali_shake(`negClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.nativeAdvObj, t.pageName), t.reportClick("负向按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == t.popType ? t.curMiddleConfig : t.curpopConfig,
                                        advConfig: t.nativeAdvObj
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "negClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide())) : LOG("CUSTOM", "负向按钮点击拦截中^_^")
                            },
                            deleteBtnClick() {
                                let t = this;
                                LOG("CUSTOM", "deleteBtnClick"), CLICK_UTILS.dom_click_vali_shake(`deleteBtnClick_${t.__id__}`, 500) && (COMMON_REPORT_UTILS.ad_sdk_back(t.nativeAdvObj, t.pageName), t.reportClick("关闭广告"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == t.popType ? t.curMiddleConfig : t.curpopConfig,
                                        advConfig: t.nativeAdvObj
                                    },
                                    index: t.index,
                                    eventName: "closePopData",
                                    action: "deleteBtnClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }))
                            },
                            playAudio() {
                                if (this.curpopConfig.commonStyle.isOpenAudio && this.curpopConfig.commonStyle.mp3SoundEffect) try {
                                    if ("LISTEN_COMMON" === this.pageCode) return;
                                    n.default.src = this.curpopConfig.commonStyle.mp3SoundEffect, n.default.play(), n.default.onended = function () {
                                        LOG("播放完毕"), n.default.stop()
                                    }
                                } catch (t) {
                                    LOG("VIEW", "音频播放失败", t)
                                }
                            },
                            stopAudio() {
                                "LISTEN_COMMON" !== this.pageCode && n.default.stop()
                            },
                            popBeforeShowGif(t) {
                                LOG("==展示gif图", t);
                                const e = t => {
                                    this.isLottie(t) ? this.getImgInfo(t, "popShowGifImg") : this.popShowGifImg = t
                                };
                                t && (t.commonStyle.transitionBeforeTime ? (e(t.commonStyle.transitionBeforeImg), setTimeout((() => {
                                    this.popShowGif = !0
                                }), 50), setTimeout((() => {
                                    this.popShowGif = !1, this.playAudio(), e(t.commonStyle.transitionAfterImg)
                                }), Number(t.commonStyle.transitionBeforeTime))) : (this.popShowGif = !1, this.playAudio(), e(t.commonStyle.transitionAfterImg)))
                            },
                            popAfterShowGif(t, e, i = !1) {
                                LOG("maxt=== eventName,action", t, e);
                                let o = this, n = e;
                                if (i) try {
                                    COMMON_REPORT_UTILS.ad_overtime_report(o.nativeAdvObj.scenario)
                                } catch (t) {
                                    LOG(t)
                                }
                                if ("middle" == o.popType) return o.popShowGif = !1, void o.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == o.popType ? o.curMiddleConfig : o.curpopConfig,
                                        advConfig: o.nativeAdvObj
                                    },
                                    index: o.index,
                                    eventName: t,
                                    action: n,
                                    actionCode: o.actionCode,
                                    customAction: o.customAction
                                });
                                o.curpopConfig && "boost" == o.curpopConfig.popType && ("noClickImg" == e ? n = "adClickImg" : "noClickBtn" == e && (n = "adClickBtn")), o.curpopConfig.commonStyle.transitionAfterTime ? (o.popShowGif = !0, setTimeout((() => {
                                    o.popShowGif = !1, o.$emit("eventWatch", {
                                        popData: {
                                            popConfig: "middle" == o.popType ? o.curMiddleConfig : o.curpopConfig,
                                            advConfig: o.nativeAdvObj
                                        },
                                        index: o.index,
                                        eventName: t,
                                        action: n,
                                        actionCode: o.actionCode,
                                        customAction: o.customAction
                                    })
                                }), Number(o.curpopConfig.commonStyle.transitionAfterTime))) : (o.popShowGif = !1, o.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == o.popType ? o.curMiddleConfig : o.curpopConfig,
                                        advConfig: o.nativeAdvObj
                                    },
                                    index: o.index,
                                    eventName: t,
                                    action: n,
                                    actionCode: o.actionCode,
                                    customAction: o.customAction
                                }))
                            },
                            reportClick(t) {
                                let e = this;
                                if ("上一页" == t || "下一页" == t) return;
                                let i = e.nativeAdvObj;
                                if (LOG("CUSTOM", "reportClick", i, e.curpopConfig), e.nativeIsShowPop) {
                                    let i = {
                                        ad_network: e.nativeAdvObj.ad_network,
                                        page_type: e.nativeIsShowPop ? "middle" == e.popType ? e.curMiddleConfig.popGroupName : e.curpopConfig.popGroupName : "补量池广告组",
                                        ad_position: e.nativeIsShowPop ? "middle" == e.popType ? e.curMiddleConfig.popName : e.curpopConfig.popName : "补量池广告",
                                        ad_style: "补量池文案",
                                        page_name: "有",
                                        ext_field_9: e.action2Name(e.actionCode),
                                        scene: "",
                                        ext_field_2: "",
                                        ext_field_3: "否",
                                        element: t,
                                        ad_id: e.nativeAdvObj.id || "",
                                        referer: "middle" !== e.popType && e.curpopConfig.configBaseFormData && e.curpopConfig.configBaseFormData.function_name || "",
                                        ad_type: e.nativeAdvObj.ad_type
                                    };
                                    e.nativeIsShowPop && ("middle" == e.popType && e.curMiddleConfig.commonStyle.isCover ? i.ad_style = "自定义文案" : "middle" != e.popType || e.curMiddleConfig.commonStyle.isCover ? "middle" !== e.popType && e.curpopConfig.btnStyle.text ? i.ad_style = "自定义文案" : "middle" === e.popType || e.curpopConfig.btnStyle.text || (i.ad_style = "厂商文案") : i.ad_style = "厂商文案"), e.setAdStyle(i), e.nativeIsShowPop && "middle" !== e.popType && e.curpopConfig.configBaseFormData && (i.scene = e.curpopConfig.configBaseFormData.custom_content), i.ext_field_2 = `${e.nativeAdvObj.layer + 1}`, e.nativeIsShowPop && "middle" !== e.popType && 1 == e.curpopConfig.btnStyle.isBindingAd && (i.ext_field_3 = "是"), e.nativeIsShowPop && "middle" !== e.popType && 1 == e.curpopConfig.commonStyle.notViewBackClosePopup && (i.ext_field_3 = "是"), e.nativeIsShowPop && "middle" == e.popType && (i.ext_field_3 = "是"), POP_TOOLS.resetActionPopType(), LOG("CUSTOM", "reportClick", i), COMMON_REPORT_UTILS.custom_popup_click_report(i.page_type, i.ad_position, i.ad_network, i.element, i.ad_style, i.page_name, i.ext_field_9, i.ext_field_2, i.ext_field_3, i.ad_id, i.scene, i.referer, i.ad_type, AD_SDK.getAppStatus(e.nativeAdvObj))
                                } else LOG("CUSTOM", "reportClick==>element", t), COMMON_REPORT_UTILS.page_click_report(t)
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && r.default[`${t}`] && r.default[`${t}`].name ? r.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            },
                            getAdData(t) {
                                let e = this;
                                return new Promise(((i, o) => {
                                    e.getManuAdvCommon("通用自定义弹窗", "AD_POP_COMMON", t, 1, e.adRequestTimes).then((t => {
                                        "success" == t.type ? i(t.data) : i("")
                                    }))
                                }))
                            },
                            adLoad(t) {
                                let e = this;
                                if (t && t.adData) {
                                    const i = JSON.parse(t.adData);
                                    e.adData = i, e.nativeAdvObj.advDetail = i, e.nativeAdvObj.title = i.title, e.nativeAdvObj.result = "有广告", e.nativeAdvObj.isAdLoadError = !1, e.nativeAdvObj.ad_style = `${i.interactionType ? i.interactionType : "0"}`, AD_SDK.uploadAdInfo("request", e.nativeAdvObj), e.$emit("eventWatch", {
                                        popData: {
                                            popConfig: "middle" == e.popType ? e.curMiddleConfig : e.curpopConfig,
                                            advConfig: e.nativeAdvObj
                                        },
                                        index: e.index,
                                        eventName: "adLoadSuccess",
                                        action: "adLoadSuccess",
                                        actionCode: e.actionCode,
                                        customAction: e.customAction
                                    }), LOG("CUSTOM", "adLoad 信息流广告展示成功：", i), e.priorityAdHandle(1)
                                }
                            },
                            adShow(t) {
                                LOG("CUSTOM", "adShow"), this.adPicShowFunc()
                            },
                            adError(t, e) {
                                let i = this;
                                i.isNoAd || (i.nativeAdvObj.result = t ? "无广告加载出错" : `无广告${e.errCode}`, LOG("CUSTOM", "oppoAdError==>this.nativeAdvObj", i.nativeAdvObj), AD_SDK.uploadAdInfo("request", i.nativeAdvObj), i.getNextOppoAdData())
                            },
                            getNextOppoAdData() {
                                let t = this;
                                t.nativeAdvObj.adMethod = "3.0", setTimeout((() => {
                                    let e = AD_SDK_UTILS.getNextOppoAdData("通用自定义弹窗", "AD_POP_COMMON", 1, 1, "补量池广告", "补量池广告组", t.adRequestTimes, t.nativeAdvObj);
                                    e ? t.nativeAdvObj = e : t.$emit("eventWatch", {
                                        popData: {
                                            popConfig: "middle" == t.popType ? t.curMiddleConfig : t.curpopConfig,
                                            advConfig: null
                                        },
                                        index: t.index,
                                        eventName: "adLoadFailed",
                                        action: "adLoadFailed",
                                        actionCode: t.actionCode,
                                        customAction: t.customAction
                                    })
                                }), 50)
                            },
                            adPicShowFunc() {
                                LOG("CUSTOM", "adPicShowFunc==>that.nativeAdvObj", this.nativeAdvObj), AD_SDK.uploadAdInfo("show", this.nativeAdvObj)
                            },
                            adButtonClickForBtn(t) {
                                let e = this;
                                if (CLICK_UTILS.dom_click_vali_shake(`adButtonClickForBtn_${e.__id__}`, 500)) {
                                    "SCREEN_TOUCH" === e.actionCode && e.isOpenSecondScreenAd() && !e.$root().isSecondScreenPopComplete && (LOG("双开屏", "显示科大双开屏弹窗"), AD_SDK_UTILS.getRequestHandle(), e.$app.$def.secondScreenAdHandle()), e.adClickForBtnLottie(), e.reportClick("正向按钮", e.nativeAdvObj), LOG("CUSTOM", "adClickForBtn==>that.nativeAdvObj华为按钮点击", e.nativeAdvObj), e.$app.$def.isNeedShowDialogForAdClick("btn").then((() => {
                                        e.getAdTitleArr(), AD_SDK_UTILS.clickManuAdvForBtn(e.nativeAdvObj, e.pageName, !1), AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickBtn"])
                                    }));
                                    try {
                                        t.stopPropagation()
                                    } catch (t) {
                                    }
                                    if (null != TACTICS_SDK.getGlobalData("configInfo").config.is_jump_quick_app && 1 == Number(TACTICS_SDK.getGlobalData("configInfo").config.is_jump_quick_app.val)) {
                                        var i = TACTICS_SDK.getGlobalData("configInfo").config.jump_quick_app_url.val,
                                            o = Number(TACTICS_SDK.getGlobalData("configInfo").config.jump_quick_app_time.val);
                                        setTimeout((() => {
                                            s.default.push({uri: i})
                                        }), o)
                                    }
                                }
                            },
                            async adClickForBtn(t = 0) {
                                this.updateZhxUupState();
                                let e = this;
                                if ("xiaomi" === e.nativeAdvObj.brand && e.curpopConfig.customStyle.is_open_toast && $utils.showToast(e.curpopConfig.customStyle.toast_text), 1 == t || 2 == t || 3 == t) return;
                                if (!CLICK_UTILS.dom_click_vali_shake(`adClickForBtn_${e.__id__}`, 500)) return;
                                this.popBeforeJumpShowGif(), "SCREEN_TOUCH" === e.actionCode && e.isOpenSecondScreenAd() && !e.$root().isSecondScreenPopComplete && (LOG("双开屏", "显示科大双开屏弹窗"), AD_SDK_UTILS.getRequestHandle(), e.$app.$def.secondScreenAdHandle());
                                let i = await e.adClickForBtnLottie();
                                const o = e.closeAd2Mark ? e.closeAd2Mark : "正向按钮";
                                e.closeAd2Mark = "", LOG("息屏日志", "点击广告恢复亮度"), e.recoverBrightnessHandle(), "vivo" == e.nativeAdvObj.brand || AD_UTILS.isXM2(e.nativeAdvObj.brand), AD_UTILS.isXM1(this.nativeAdvObj.brand) ? this.$element("coord").getBoundingClientRect({
                                    success: t => {
                                        e.xiaomiAdPayload.adX = t.left, e.xiaomiAdPayload.adY = t.top, e.xiaomiAdPayload.width = t.width, e.xiaomiAdPayload.height = t.height, e.reportClick(o, e.nativeAdvObj), LOG("CUSTOM", "adClickForBtn==>that.nativeAdvObj", e.nativeAdvObj), e.$app.$def.isNeedShowDialogForAdClick("btn").then((() => {
                                            e.getAdTitleArr(), e.showXm1AdJump(i), AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickBtn"])
                                        }))
                                    }
                                }) : (e.reportClick(o, e.nativeAdvObj), LOG("CUSTOM", "adClickForBtn==>that.nativeAdvObj", e.nativeAdvObj), e.$app.$def.isNeedShowDialogForAdClick("btn").then((() => {
                                    e.getAdTitleArr(), e.showAdJump(i, "Btn"), -1 !== t && AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickBtn"])
                                })))
                            },
                            noAdClickForBtn(t = 0) {
                                LOG("mxt 不跳转广告按钮");
                                let e = this;
                                CLICK_UTILS.dom_click_vali_shake(`noAdClickForBtn_${e.__id__}`, 500) && (this.noAdPreloadVideoReady && AD_SDK.getPreloadVedioAdv(e.pageCode || 3), e.reportClick("正向按钮", e.nativeAdvObj), LOG("CUSTOM", "adClickForBtn==>that.nativeAdvObj", e.nativeAdvObj), e.popAfterShowGif("closePopData", "noClickBtn"))
                            },
                            adClickForBtnNormal() {
                                this.adClickForBtn()
                            },
                            async adClickForImg(t) {
                                this.updateZhxUupState();
                                let e = this;
                                if (!CLICK_UTILS.dom_click_vali_shake(`adClickForImg_${e.__id__}`, 500)) return;
                                "xiaomi" === e.nativeAdvObj.brand && e.curpopConfig.customStyle.is_open_toast && $utils.showToast(e.curpopConfig.customStyle.toast_text), this.popBeforeJumpShowGif();
                                let i = await e.adClickForBtnLottie();
                                "SCREEN_TOUCH" === e.actionCode && e.isOpenSecondScreenAd() && !e.$root().isSecondScreenPopComplete && (LOG("双开屏", "显示科大双开屏弹窗"), AD_SDK_UTILS.getRequestHandle(), e.$app.$def.secondScreenAdHandle());
                                const o = t.elementName || (e.closeAd2Mark ? e.closeAd2Mark : "素材中");
                                e.closeAd2Mark = "", LOG("息屏日志", "vivo点击广告恢复亮度"), e.recoverBrightnessHandle(), AD_UTILS.isVivo2(this) || AD_UTILS.isXM2(e.nativeAdvObj.brand), AD_UTILS.isVivo2(this) && "middle" != this.popType && this.checkActionCodeIsScreen, AD_UTILS.isXM1(this.nativeAdvObj.brand) ? this.$element("coord").getBoundingClientRect({
                                    success: t => {
                                        e.xiaomiAdPayload.adX = t.left, e.xiaomiAdPayload.adY = t.top, e.xiaomiAdPayload.width = t.width, e.xiaomiAdPayload.height = t.height, e.reportClick(o, e.nativeAdvObj), LOG("CUSTOM", "adClickForImg==>that.nativeAdvObj", e.nativeAdvObj);
                                        try {
                                            e.$app.$def.isNeedShowDialogForAdClick("img").then((() => {
                                                e.getAdTitleArr(), e.showXm1AdJump(i), AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickImg"])
                                            }))
                                        } catch (t) {
                                        }
                                    }
                                }) : (e.reportClick(o, e.nativeAdvObj), LOG("CUSTOM", "adClickForImg==>that.nativeAdvObj", e.nativeAdvObj), e.$app.$def.isNeedShowDialogForAdClick("img").then((() => {
                                    e.getAdTitleArr(), e.showAdJump(i, "Img"), AD_UTILS.adClickHandler(this, "popAfterShowGif", ["closePopData", "noClickImg"])
                                })))
                            },
                            getManuAdvCommon(t, e = "", i = 0, o = 0, n = 1) {
                                const a = this;
                                return LOG("获取广告1", ...arguments), new Promise(((s, r) => {
                                    AD_SDK_UTILS.getAd({
                                        scenario: t,
                                        sceneCode: e,
                                        adType: i,
                                        adTimes: o,
                                        popName: "补量池广告",
                                        popGroupName: "补量池广告组",
                                        requestNum: n,
                                        actionCode: a.actionCode,
                                        success: function (t) {
                                            t && a.actionCode && (t.actionCode = a.actionCode), s({
                                                type: "success",
                                                data: t
                                            })
                                        },
                                        fail: function (t) {
                                            s({type: "failed", data: t})
                                        }
                                    })
                                }))
                            },
                            topWatchVideo4Free(t) {
                                let e = this;
                                try {
                                    t.stopPropagation()
                                } catch (t) {
                                }
                                CLICK_UTILS.dom_click_vali_shake(`topWatchVideo4Free_${e.__id__}`, 1e3) && (e.reportClick("素材免广告"), e.popAfterShowGif("watchVideo4Free", "watchVideo4Free"))
                            },
                            bottomWatchVideo4Free(t) {
                                try {
                                    t.stopPropagation()
                                } catch (t) {
                                }
                                let e = this;
                                CLICK_UTILS.dom_click_vali_shake(`bottomWatchVideo4Free_${e.__id__}`, 1e3) && (e.reportClick("底部免广告"), e.popAfterShowGif("watchVideo4Free", "watchVideo4Free"))
                            },
                            bottomScenceClick(t) {
                                try {
                                    t.stopPropagation()
                                } catch (t) {
                                }
                                let e = this;
                                e.isShowBottomScence = !1, CLICK_UTILS.dom_click_vali_shake(`bottomScenceClick_${e.__id__}`, 500) && (e.reportClick("领红包拿现金"), e.popAfterShowGif("bottomScenceClick", "bottomScenceClick"))
                            },
                            adTouchend(t) {
                                AD_UTILS.isXM1(this.nativeAdvObj.brand) && (this.xiaomiAdPayload.upX = t._changedTouches[0].offsetX, this.xiaomiAdPayload.upY = t._changedTouches[0].offsetY)
                            },
                            adtouchstart(t) {
                                AD_UTILS.isXM1(this.nativeAdvObj.brand) && (this.xiaomiAdPayload.downX = t._changedTouches[0].offsetX, this.xiaomiAdPayload.downY = t._changedTouches[0].offsetY)
                            },
                            getIsShowBoostAdHandle() {
                                let t = 1;
                                switch (this.$page.name) {
                                    case"pagesA/Main":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.main_list_ad.val);
                                        break;
                                    case"pagesA/Welfare":
                                    case"pagesA/WelfareNew":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.welfare_list_ad.val);
                                        break;
                                    case"pagesC/Info":
                                    case"pagesB/GoodsDetail":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.info_list_ad.val);
                                        break;
                                    case"pagesB/Keepingbook":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.keeping_book_list_ad.val);
                                        break;
                                    case"pagesB/addPlan":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.plan_list_ad.val);
                                        break;
                                    case"pagesA/Guess":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.guess_index_ad.val);
                                        break;
                                    case"pagesB/Study":
                                        t = Number(TACTICS_SDK.getGlobalData("configInfo").config.study_list_ad.val);
                                        break;
                                    case"pagesB/Lottery":
                                        t = 2;
                                        break;
                                    case"pagesC/Read":
                                        t = 1
                                }
                                return 2 == t
                            },
                            forceShowPop() {
                                this.nativeAdvObj = {
                                    id: "",
                                    layer: 0,
                                    adMethod: AD_UTILS.isXM1(this.$app.$def.brand) || "huawei" === this.$app.$def.brand ? "0.0" : "2.0",
                                    brand: this.$app.$def.brand,
                                    advDetail: {},
                                    title: "",
                                    type: "manu_ad",
                                    clickBtnTxt: "立即查看",
                                    source: "",
                                    materialUrl: "",
                                    icon: "",
                                    ad_network: 1,
                                    ad_type: "原生",
                                    is_ad_click: "no",
                                    adType: 1,
                                    adTimes: 1,
                                    sceneCode: "AD_POP_COMMON",
                                    popName: "补量池广告",
                                    popGroupName: "补量池广告组",
                                    requestNum: 1,
                                    ad_style: "",
                                    scenario: "通用自定义弹窗",
                                    isUsedAdButton: 0,
                                    adRequestNum: 1
                                }, this.isNoAd = !0, "huawei" == this.nativeAdvObj.brand && this.isFullScreen && (this.menuBarTop = 16), this.initViewHide(), this.getCodeData(this.popCode)
                            },
                            updateAdTitleArrHandle(t) {
                                if (this.nativeAdvObj) {
                                    let t = this.nativeAdvObj.title;
                                    this.$emit("eventWatch", {eventName: "updateAdTitleArr", title: t})
                                }
                                t.stop()
                            },
                            changeCloseAdPopHandle(t) {
                                t.stop(), this.isShowCloseAdPop = !1, this.$off("changeCloseAdPop")
                            },
                            isCloseBtnTouchOpen() {
                                let t = TACTICS_SDK.getGlobalData("configInfo").config;
                                return t.open_pop_close_touch && Number(t.open_pop_close_touch.val)
                            },
                            isNegBtnTouchOpen() {
                                let t = TACTICS_SDK.getGlobalData("configInfo").config;
                                return t.open_pop_exit_touch && Number(t.open_pop_exit_touch.val)
                            },
                            getTime(t) {
                                let e = TACTICS_SDK.getGlobalData("configInfo").config;
                                return e[t] && 1e3 * Number(e[t].val) || 0
                            },
                            computed: {
                                checkActionCodeIsScreen() {
                                    return "SCREEN_TOUCH" == this.actionCode || "SECOND_SCREEN_TOUCH" == this.actionCode
                                }, isShakeLayer() {
                                    if (!this.nativeAdvObj) return !1;
                                    if (Number.isNaN(this.nativeAdvObj.layer)) return !0;
                                    const {shake_layer: t} = this.curpopConfig.commonStyle;
                                    if (!t) return !0;
                                    const e = this.nativeAdvObj.layer + 1,
                                        i = t.split(",").filter((t => !Number.isNaN(Number(t))));
                                    return !i.length || i.map((t => Number(t))).includes(e)
                                }
                            },
                            getAdTitleArr() {
                                this.$emit("eventWatch", {eventName: "sliceAdTitleArr"}), LOG("广告媒体埋点 click", this.$parent().adTitleArr, this.nativeAdvObj.title, this.$parent().adTitleArr.filter((t => t === this.nativeAdvObj.title)).length), this.nativeAdvObj.scene = this.$parent().adTitleArr.filter((t => t === this.nativeAdvObj.title)).length
                            },
                            showSecondScreenPopHandle() {
                                let t = this;
                                return "SECOND_SCREEN_TOUCH" == t.actionCode ? void (0 !== t.positionRight && (t.positionRight = 0, t.changeBrightnessHandle())) : () => {
                                }
                            },
                            isOpenSecondScreenAd() {
                                return this.$app.$def.isOpenSecondScreenAd && this.$app.$def.isOpenSecondScreenAd()
                            },
                            async adClickForBtnLottie() {
                                let t = this,
                                    e = t.curpopConfig.configBaseFormData && t.curpopConfig.configBaseFormData.custom_content_code,
                                    i = Number(t.curpopConfig.btnStyle.isFirstRouter), o = t.showTypeName(e, i);
                                switch (o) {
                                    case"firstRouter":
                                        t.isFirstRouterFn();
                                        break;
                                    case"autoCoin":
                                        t.playAnimation();
                                        let i = await t.coinAddRequest(e);
                                        200 == i.code && (t.$root().getUserInfo && t.$root().getUserInfo(), t.$root().refreshGlodHandle && t.$root().refreshGlodHandle(i.data.coupon || 0));
                                        break;
                                    case"all":
                                        t.playAnimation();
                                        let o = await t.coinAddRequest(e);
                                        200 == o.code && (t.$root().getUserInfo && t.$root().getUserInfo(), t.$root().refreshGlodHandle && t.$root().refreshGlodHandle(o.data.coupon || 0))
                                }
                                return o
                            },
                            showAdJump(t, e) {
                                let i = this;
                                const o = AD_SDK_UTILS[`clickManuAdvFor${e}`];
                                if (LOG("NOWBRAND", i.nativeAdvObj.brand), "huawei" == i.nativeAdvObj.brand || AD_UTILS.isVivo1(this)) switch (t) {
                                    case"autoCoin":
                                        setTimeout((() => {
                                            AD_SDK_UTILS.clickManuAdvForImg(Object.assign({}, i.nativeAdvObj, {zhxUupCount: i.$app.$def.zhxUupCount}), i.pageName, !1)
                                        }), 800);
                                        break;
                                    case"firstRouter":
                                        setTimeout((() => {
                                            AD_SDK_UTILS.clickManuAdvForImg(Object.assign({}, i.nativeAdvObj, {zhxUupCount: i.$app.$def.zhxUupCount}), i.pageName, !1)
                                        }), 500);
                                        break;
                                    case"all":
                                        setTimeout((() => {
                                            i.isFirstRouterFn()
                                        }), 600), setTimeout((() => {
                                            AD_SDK_UTILS.clickManuAdvForImg(Object.assign({}, i.nativeAdvObj, {zhxUupCount: i.$app.$def.zhxUupCount}), i.pageName, !1)
                                        }), 900);
                                        break;
                                    default:
                                        AD_SDK_UTILS.clickManuAdvForImg(Object.assign({}, i.nativeAdvObj, {zhxUupCount: i.$app.$def.zhxUupCount}), i.pageName, !1)
                                } else "all" === t ? (i.isFirstRouterFn(), o(Object.assign({}, i.nativeAdvObj, {zhxUupCount: i.$app.$def.zhxUupCount}), i.pageName, !1)) : o(Object.assign({}, i.nativeAdvObj, {zhxUupCount: i.$app.$def.zhxUupCount}), i.pageName, !1)
                            },
                            showXm1AdJump(t) {
                                let e = this;
                                switch (LOG("NOWBRAND", e.nativeAdvObj.brand), t) {
                                    case"autoCoin":
                                        setTimeout((() => {
                                            AD_SDK_UTILS.clickManuAdvForImg(Object.assign(e.nativeAdvObj, u(u({}, e.xiaomiAdPayload), {}, {zhxUupCount: e.$app.$def.zhxUupCount})), e.pageName, !1)
                                        }), 800);
                                        break;
                                    case"firstRouter":
                                        setTimeout((() => {
                                            AD_SDK_UTILS.clickManuAdvForImg(Object.assign(e.nativeAdvObj, u(u({}, e.xiaomiAdPayload), {}, {zhxUupCount: e.$app.$def.zhxUupCount})), e.pageName, !1)
                                        }), 500);
                                        break;
                                    case"all":
                                        setTimeout((() => {
                                            e.isFirstRouterFn()
                                        }), 600), setTimeout((() => {
                                            AD_SDK_UTILS.clickManuAdvForImg(Object.assign(e.nativeAdvObj, u(u({}, e.xiaomiAdPayload), {}, {zhxUupCount: e.$app.$def.zhxUupCount})), e.pageName, !1)
                                        }), 900);
                                        break;
                                    default:
                                        AD_SDK_UTILS.clickManuAdvForImg(Object.assign(e.nativeAdvObj, u(u({}, e.xiaomiAdPayload), {}, {zhxUupCount: e.$app.$def.zhxUupCount})), e.pageName, !1)
                                }
                            },
                            async coinAddRequest(t) {
                                let e = t;
                                LOG("COINREQUEST", t, this.curpopConfig.configBaseFormData);
                                let i = e.match(/^coin_(\d+)$/)[1],
                                    n = {task_code: "commonTasks", brand: this.nativeAdvObj.brand, coupon: i};
                                return ["com.bulv.app", "com.ymb.app", "com.lxbj.app"].includes(o("@app-module/system.app").getInfo().packageName) ? {code: "shield"} : await $apis.example.welfareReceiveNewApi(n)
                            },
                            async popShowCoinFlash() {
                                let t = this,
                                    e = t.curpopConfig.configBaseFormData && t.curpopConfig.configBaseFormData.custom_content_code;
                                if (e.includes("coin_")) {
                                    let i = await t.coinAddRequest(e);
                                    200 == i.code && (t.$root().getUserInfo && t.$root().getUserInfo(), t.$root().refreshGlodHandle && t.$root().refreshGlodHandle(i.data.coupon || 0), t.playAnimation()), "shield" == i.code && t.playAnimation()
                                }
                            },
                            isFirstRouterFn() {
                                let t, e, i = this, o = TACTICS_SDK.getGlobalData("routesInfo").routers,
                                    n = i.$app.$def.pageCodeInfo.pageCode;
                                o.length ? o.forEach(((i, a) => {
                                    i.page_code === n && (a + 1 >= o.length ? (t = o[0].router, e = o[0].page_name) : (t = o[a + 1].router, e = o[a + 1].page_name))
                                })) : (t = i.$app.$def.pageCodeInfo.pageOrigin, e = i.$app.$def.pageCodeInfo.pathUrl), LOG("ROUTERARR", t, n), $utils.routetheUrl(t, {pathUrl: e}, !1)
                            },
                            showTypeName(t, e) {
                                LOG("PARAMSNAME", t, e);
                                let i = "noSetting";
                                return e && (i = "firstRouter"), t && t.includes("coin_") && (i = "autoCoin"), t && t.includes("coin_") && e && (i = "all"), t || e || (i = "noSetting"), i
                            },
                            playAnimation() {
                                this.$app.$def.deviceInfo.platformVersionCode < 1100 ? LOG("lottie动画不支持") : "middle" !== this.popType && (this.lottieCoinShow = !0, setTimeout((() => {
                                    this.$element("lottieCoin").play()
                                }), 300), LOG("lottie动画播放"))
                            },
                            errorFunction(t) {
                                LOG("lottie动画加载出错了", t)
                            },
                            animationCoinFinished() {
                                this.lottieCoinShow = !1
                            },
                            stopCoinAudio() {
                                n.default.stop()
                            },
                            startCoinAudio() {
                                LOG("音频Start");
                                try {
                                    n.default.src = "/assets/audio/coin-audio.mp3", n.default.play()
                                } catch (t) {
                                    LOG("VIEW", "音频播放失败", t)
                                }
                            },
                            popBeforeJumpShowGif() {
                                this.curpopConfig.commonStyle.transitionBeforeJumpTime && this.curpopConfig.commonStyle.transitionBeforeJumpImg ? (setTimeout((() => {
                                    this.beforeJumpGif = !0
                                }), 50), setTimeout((() => {
                                    this.beforeJumpGif = !1
                                }), Number(this.curpopConfig.commonStyle.transitionBeforeJumpTime))) : this.beforeJumpGif = !1
                            },
                            xiaomiAdClose() {
                                this.closeClick({detail: {logName: "xiaomi系统关闭"}})
                            },
                            setAdStyle(t) {
                                this.isNoAd || (t.ad_style = `${t.ad_style}/${this.nativeAdvObj.ad_style}`)
                            },
                            isLottie: t => !!t && "json" === t.slice(-4),
                            getImgInfo(t, e) {
                                p.default.get(t).then((i => {
                                    const o = {url: t, width: i.w, height: i.h};
                                    this[e] = o
                                }))
                            },
                            getAdContentStyle() {
                                if (!this.curpopConfig.customStyle) return;
                                let t = "";
                                const e = ~~this.curpopConfig.customStyle.ad_content_justify || 0;
                                t += `justify-content:${["center", "flex-start", "flex-end"][e]};`;
                                const i = ~~this.curpopConfig.customStyle.ad_content_padding || 0;
                                1 === e ? t += `padding-top:${i}px;` : 2 === e && (t += `padding-bottom:${i}px;`), this.adContentStyle = t
                            },
                            dotClickHandle() {
                                this.reportClick("点阵像素")
                            },
                            updateZhxUupState() {
                                const t = TACTICS_SDK.getGlobalData("configInfo"),
                                    e = t.config[TOOLS_UTILS.renameConfig("hr^nodm^v`jd^to")],
                                    i = e ? Number(e.val) : 0,
                                    o = t.config[TOOLS_UTILS.renameConfig("hr^bknrd^v`jd^to")],
                                    n = o ? Number(o.val) : 0;
                                if (1 === i && 0 === n) return !1;
                                "vivo" !== this.$app.$def.brand && "oppo" !== this.$app.$def.brand && "xiaomi" !== this.$app.$def.brand || (this.$app.$def.isZhxUup = !1)
                            },
                            getComplaintConfig(t) {
                                try {
                                    let e = TACTICS_SDK.getGlobalData("configInfo").config;
                                    this.complaintTop = Number(e.complaint_top.val) || 1e3, this.complaintLeft = Number(e.complaint_left.val) || 0, this.complaintIcon = e.complaint_icon.val || "../../assets/images/complaint_button.png", this.complaintShow = t
                                } catch (t) {
                                    LOG("getPageAdButtonAnimation=====>", t)
                                }
                            },
                            showComplaintClick() {
                                COMMON_REPORT_UTILS.page_click_report(`${this.pageName}投诉`), this.isShowComplaintPop = !0
                            },
                            complaintPopCancelClickHandler() {
                                this.isShowComplaintPop = !1
                            },
                            complaintPopSureClickHandler(t) {
                                this.isShowComplaintPop = !1, this.isShowControlSwitch ? this.isShowLastComplaintPop = !0 : $utils.showToast("非常感谢您的反馈，我们将第一时间进行处理", 0)
                            },
                            lastPopCancelHandler() {
                                this.isShowLastComplaintPop = !1
                            },
                            priorityAdHandle(t) {
                                LOG("优先请求广告", "广告处理方法", !!this.nativeAdvObj.isPriorityAd, t);
                                const e = !this.nativeAdvObj.isPriorityAd && 0 === t,
                                    i = !!this.nativeAdvObj.isPriorityAd && 1 === t;
                                (e || i) && POP_TOOLS.priorityAdHandle(t)
                            },
                            priorityPopConfigHandle(t, e) {
                                LOG("优先请求广告", "弹窗处理方法", t);
                                const i = this;
                                if (0 === t) return !!i.$root().isPriorityPopClose && (COMMON_REPORT_UTILS.ad_sdk_back(i.nativeAdvObj, i.pageName), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == i.popType ? i.curMiddleConfig : i.curpopConfig,
                                        advConfig: i.nativeAdvObj
                                    },
                                    index: i.index,
                                    eventName: "closePopData",
                                    action: "backPress",
                                    actionCode: i.actionCode,
                                    customAction: i.customAction
                                }), !0);
                                {
                                    const t = i.$root().priorityPopConfig;
                                    return t ? (i.$root().priorityPopConfig = null, t) : e
                                }
                            },
                            getBrightnessHandle() {
                                const t = this;
                                return t.interfaceInUse = !0, new Promise((e => {
                                    l.default.getValue({
                                        success(t) {
                                            LOG("息屏日志", "获取设备亮度成功", t.value), e(t.value)
                                        }, fail() {
                                            LOG("息屏日志", "获取设备亮度失败", 170), e(170)
                                        }, complete() {
                                            LOG("息屏日志", "解除占用状态"), t.interfaceInUse = !1
                                        }
                                    })
                                }))
                            },
                            setBrightnessHandle(t) {
                                const e = this;
                                return e.interfaceInUse = !0, new Promise((i => {
                                    l.default.setValue({
                                        value: t, success() {
                                            LOG("息屏日志", "设置设备亮度成功", t), i(1)
                                        }, fail() {
                                            LOG("息屏日志", "设置设备亮度失败", t), i(0)
                                        }, complete() {
                                            LOG("息屏日志", "解除占用状态"), e.interfaceInUse = !1
                                        }
                                    })
                                }))
                            },
                            recoverBrightnessHandle() {
                                if (this.curpopConfig.commonStyle.brightness_switch) if (this.nativeIsShowPop && "middle" !== this.popType && this.curBrightnessVal) {
                                    if (this.interfaceInUse) return LOG("息屏日志", "恢复设备亮度推迟"), void this.recoverBrightnessHandle();
                                    this.setBrightnessHandle(this.curBrightnessVal), this.curBrightnessVal = 0
                                } else LOG("息屏日志", "弹窗已关闭，不执行恢复亮度", this.nativeIsShowPop, "middle" !== this.popType, this.curBrightnessVal); else LOG("息屏日志", "息屏配置开关关闭，不执行恢复亮度")
                            },
                            async changeBrightnessHandle() {
                                const t = this.curpopConfig.commonStyle, e = t.brightness_switch,
                                    i = t.brightness_delay, o = t.brightness_time, n = t.brightness_value;
                                if (LOG("息屏日志", "息屏配置", e, i, o, n), !e) return void LOG("息屏日志", "息屏配置开关关闭，不执行降低亮度");
                                const a = await this.getBrightnessHandle();
                                this.curBrightnessVal = a, setTimeout((() => {
                                    if (this.nativeIsShowPop && "middle" !== this.popType && this.curBrightnessVal) {
                                        if (this.interfaceInUse) return LOG("息屏日志", "降低设备亮度推迟"), void this.changeBrightnessHandle();
                                        this.setBrightnessHandle(n), setTimeout(this.recoverBrightnessHandle.bind(this), o)
                                    } else LOG("息屏日志", "弹窗已关闭，不执行降低亮度", this.nativeIsShowPop, "middle" !== this.popType, this.curBrightnessVal)
                                }), i)
                            },
                            screenClickHandle(t) {
                                LOG("息屏日志", "点击屏幕任意位置恢复亮度"), this.recoverBrightnessHandle()
                            },
                            screenTouchendHandle(t) {
                                LOG("息屏日志", "滑动屏幕任意位置恢复亮度"), this.recoverBrightnessHandle()
                            }
                        }
                    }
                }, 567: module => {
                    module.exports = function __scriptModule__(module, exports, $app_require$) {
                        "use strict";
                        Object.defineProperty(exports, "__esModule", {value: !0}), exports.default = void 0;
                        var _system = _interopRequireDefault($app_require$("@app-module/system.router"));

                        function _interopRequireDefault(t) {
                            return t && t.__esModule ? t : {default: t}
                        }

                        var _default = exports.default = {
                            data: {
                                scale: 1,
                                latticeData: [],
                                textNumber: 1,
                                btnTop: 0,
                                btnLeft: 0,
                                btnColor: "",
                                isSupportAdButton: !0,
                                offsetX: 0,
                                isButton: !0,
                                xmBtnClass: "",
                                adShowTimer: null
                            },
                            props: {
                                delayConfig: {type: Object, default: {}},
                                curpopConfig: {type: Object, default: {}},
                                curMiddleConfig: {type: Object, default: {}},
                                defaultStyle: {type: Object, default: {}},
                                customAction: {type: Object, default: {}},
                                nativeAdvObj: {type: Object, default: {}},
                                isNoAd: {type: Boolean, default: !1},
                                nativeIsShowPop: {type: Boolean, default: !1},
                                popShowGif: {type: Boolean, default: !1},
                                popShowGifImg: {type: String, default: ""},
                                popType: {type: String, default: ""},
                                actionCode: {type: String, default: ""},
                                winHeight: {type: Number, default: 0},
                                preloadVedioReady: {type: Boolean, default: !1},
                                positionRight: {type: Number, default: 750},
                                beforeJumpGif: {type: Boolean, default: !1},
                                beforeJumpImg: {type: Object, default: {}},
                                adContentStyle: {type: String, default: ""},
                                index: {type: Number, default: 0}
                            },
                            computed: {
                                offsetBtnLeft() {
                                    if ("middle" === this.curpopConfig.popType) return Number(this.curpopConfig.btnStyle.offsetBtnLeft.toFixed(0));
                                    return 1 * parseFloat(this.scale) || 0
                                }, offsetBtnTop() {
                                    if ("middle" === this.curpopConfig.popType) return Number(this.curpopConfig.btnStyle.offsetBtnTop.toFixed(0));
                                    return 1 * parseFloat(this.scale) || 0
                                }
                            },
                            onInit() {
                                this.nativeAdvObj.adTime = Date.now();
                                let t = TACTICS_SDK.getGlobalData("configInfo").config.is_open_ad_info;
                                t = t ? Number(t.val) : 1, t && this.nativeAdvObj.advDetail && this.nativeAdvObj.advDetail.appInfo && (this.appInfo = {
                                    appName: this.nativeAdvObj.advDetail.appInfo.appName,
                                    appSize: this.nativeAdvObj.advDetail.appInfo.appSize,
                                    developer: this.nativeAdvObj.advDetail.appInfo.developer,
                                    appVersion: this.nativeAdvObj.advDetail.appInfo.appVersion,
                                    appPrivacyUrl: this.nativeAdvObj.advDetail.appInfo.privacyUrl,
                                    appPermissionUrl: this.nativeAdvObj.advDetail.appInfo.permissionUrl,
                                    introduce: this.nativeAdvObj.advDetail.appInfo.introductionUrl
                                });
                                let e = TACTICS_SDK.getGlobalData("configInfo").config.xiaomi_probability_button;
                                e = e ? Number(e.val) : 100, this.isButton = !!$utils.getProbabilityNum(1, e), LOG("是否为button类型:", this.isButton);
                                const i = TACTICS_SDK.getGlobalData("configInfo").config.xiaomi_btn_clsname,
                                    o = i && i.val || "";
                                this.xmBtnClass = o, this.nativeIsShowPop ? (this.xmBtnType(), this.curpopConfig.commonStyle.transitionBeforeTime || this.curpopConfig.commonStyle.transitionAfterTime || this.dotHandle(!0)) : this.$watch("nativeIsShowPop", "nativeIsShowPopChangeHandle"), this.$watch("popShowGif", "popShowGifHandle")
                            },
                            nativeIsShowPopChangeHandle(t, e) {
                                this.xmBtnType(), t && !this.curpopConfig.commonStyle.transitionBeforeTime && this.dotHandle(!0)
                            },
                            popShowGifHandle(t, e) {
                                t ? this.latticeData = [] : this.dotHandle(!0)
                            },
                            dotHandle(newVal) {
                                this.isNoAd || this.nativeAdvObj.isAdShow || this.adShowTimer ? LOG("直接曝光了") : this.adShowTimer = setTimeout((() => {
                                    LOG("是否曝光了", this.nativeAdvObj.isAdShow), this.nativeAdvObj.isAdShow || (this.latticeData = [], this.btnLeft = 0, setTimeout((() => {
                                        try {
                                            LOG("show曝光异常", this.index), this.adShowTimer = null, this.closeClick && this.closeClick()
                                        } catch (t) {
                                            LOG("adShowTimer", t)
                                        }
                                    }), 0))
                                }), 2e3);
                                const font = this.curpopConfig.btnStyle.font, color = this.curpopConfig.btnStyle.color;
                                if (DEVICE_UTILS.getHost().versionCode < 11060002) return this.isSupportAdButton = !1, void (this.nativeAdvObj.isUsedXiaomiButton = 3);
                                3 !== this.nativeAdvObj.isUsedXiaomiButton && 4 !== this.nativeAdvObj.isUsedXiaomiButton || (newVal && this.curpopConfig.customStyle && this.curpopConfig.customStyle.xm_dot_content && this.curpopConfig.customStyle.doc_words ? (setTimeout((() => {
                                    this.$element("adButton") && this.$element("adButton").getBoundingClientRect && this.$element("adButton").getBoundingClientRect({
                                        success: t => {
                                            const e = this.curpopConfig.btnStyle.height > 180 ? 180 : this.curpopConfig.btnStyle.height,
                                                i = this.curpopConfig.btnStyle.width < 110 ? 110 : this.curpopConfig.btnStyle.width;
                                            this.btnTop = t.top + e / 2 - 16 * this.scale, this.btnLeft = t.left + i / 2 - 16 * this.textNumber * this.scale
                                        }, fail: (t, e) => {
                                            this.curpopConfig.btnStyle.font = font, this.curpopConfig.btnStyle.color = color, this.offsetX = 0
                                        }
                                    })
                                }), 250), this.scale = this.curpopConfig.customStyle.dot_font_scaling || 1, this.latticeData = eval(this.curpopConfig.customStyle.xm_dot_content), this.textNumber = this.curpopConfig.customStyle.doc_words, this.btnColor = this.curpopConfig.customStyle.dot_color, this.curpopConfig.btnStyle.font = this.curpopConfig.customStyle.native_button_font_size || 20, this.curpopConfig.btnStyle.color = this.curpopConfig.customStyle.native_button_font_color, this.curpopConfig.customStyle.native_button_font_offsetX >= 0 && (this.offsetX = 2 * this.curpopConfig.customStyle.native_button_font_offsetX)) : this.latticeData = [])
                            },
                            deleteBtnClick(t) {
                                this.$parent().deleteBtnClick(t)
                            },
                            closeClick(t) {
                                this.$parent() && this.$parent().closeClick(t)
                            },
                            adClickForImg(t) {
                                this.$parent().adClickForImg(t)
                            },
                            noAdClickForBtn(t) {
                                this.$parent().noAdClickForBtn(t)
                            },
                            negClick(t) {
                                this.$parent().negClick(t)
                            },
                            adClickHandle(t) {
                                this.adClickForImg(t)
                            },
                            adShow() {
                                this.nativeAdvObj.isAdShow = !0, this.$parent().adPicShowFunc(), this.clearTimers()
                            },
                            xiaomiAdClose() {
                                this.$parent().xiaomiAdClose()
                            },
                            dotClickHandle() {
                                this.$parent().dotClickHandle()
                            },
                            xmBtnType() {
                                this.curpopConfig.customStyle && (this.oldButton ? this.nativeAdvObj.isUsedXiaomiButton = this.oldButton : this.oldButton = this.nativeAdvObj.isUsedXiaomiButton, this.curpopConfig.customStyle.is_used_xiaomi_button && (this.nativeAdvObj.isUsedXiaomiButton = Number(this.curpopConfig.customStyle.is_used_xiaomi_button)), LOG("nativeAdvObj", this.nativeAdvObj, this.isButton))
                            },
                            clearTimers() {
                                this.adShowTimer && (clearTimeout(this.adShowTimer), this.adShowTimer = null)
                            }
                        }
                    }
                }, 9009: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        var o;

                        function n(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function a(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? n(Object(i), !0).forEach((function (e) {
                                    s(t, e, i[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : n(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        function s(t, e, i) {
                            var o;
                            return (e = "symbol" == typeof (o = function (t, e) {
                                if ("object" != typeof t || !t) return t;
                                var i = t[Symbol.toPrimitive];
                                if (void 0 !== i) {
                                    var o = i.call(t, "string");
                                    if ("object" != typeof o) return o;
                                    throw new TypeError("@@toPrimitive must return a primitive value.")
                                }
                                return String(t)
                            }(e)) ? o : String(o)) in t ? Object.defineProperty(t, e, {
                                value: i,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : t[e] = i, t
                        }

                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, (o = i("@app-module/system.router")) && o.__esModule, e.default = {
                            data: {
                                isButton: !1,
                                adLoadTimer: null,
                                adLoadSuccess: !1,
                                isLoadFull: !1,
                                clickAdCount: 0,
                                templateAdvType: 0
                            },
                            props: {
                                delayConfig: {type: Object, default: {}},
                                curpopConfig: {type: Object, default: {}},
                                curMiddleConfig: {type: Object, default: {}},
                                defaultStyle: {type: Object, default: {}},
                                customAction: {type: Object, default: {}},
                                nativeAdvObj: {type: Object, default: {}},
                                isNoAd: {type: Boolean, default: !1},
                                nativeIsShowPop: {type: Boolean, default: !1},
                                popShowGif: {type: Boolean, default: !1},
                                popShowGifImg: {type: String, default: ""},
                                popType: {type: String, default: ""},
                                actionCode: {type: String, default: ""},
                                winHeight: {type: Number, default: 0},
                                preloadVedioReady: {type: Boolean, default: !1},
                                positionRight: {type: Number, default: 750},
                                beforeJumpGif: {type: Boolean, default: !1},
                                beforeJumpImg: {type: Object, default: {}},
                                adContentStyle: {type: String, default: ""},
                                index: {type: Number, default: 0}
                            },
                            computed: {
                                templateTop() {
                                    if (0 === this.templateAdvType) {
                                        const {top: t, height: e, hotTop: i} = this.curpopConfig.btnStyle,
                                            o = this.isButton ? .42 : .18;
                                        return t - i + .5 * e - this.curpopConfig.popStyle.width * o
                                    }
                                    if (1 === this.templateAdvType) {
                                        const {top: t, height: e, hotTop: i} = this.curpopConfig.btnStyle,
                                            o = this.isButton ? .65 : .35;
                                        return t - i + .5 * e - this.curpopConfig.popStyle.width * o
                                    }
                                    if (2 === this.templateAdvType) {
                                        const {top: t, height: e, hotTop: i} = this.curpopConfig.btnStyle,
                                            o = this.isButton ? .42 : .18;
                                        return t - i + .5 * e - this.curpopConfig.popStyle.width * o
                                    }
                                    if (3 === this.templateAdvType) {
                                        const {top: t, height: e, hotTop: i} = this.curpopConfig.btnStyle,
                                            o = (this.isButton, .16);
                                        return t - i + .5 * e - this.curpopConfig.popStyle.width * o
                                    }
                                }, tamplateOrigin() {
                                    return 0 === this.templateAdvType ? "0px 0px" : 1 === this.templateAdvType ? `${.84 * this.curpopConfig.popStyle.width}px ${.7 * this.curpopConfig.popStyle.width * .92}px;` : 2 === this.templateAdvType || 3 === this.templateAdvType ? "0px 0px" : void 0
                                }, tamplateScaleX() {
                                    return 0 === this.templateAdvType ? 1 : 1 === this.templateAdvType ? 10 : 2 === this.templateAdvType ? 1 : 3 === this.templateAdvType ? 10 : void 0
                                }
                            },
                            onInit() {
                                const t = 7 === this.nativeAdvObj.adType && AD_UTILS.isXM2(this.nativeAdvObj.brand);
                                this.isXmTemplateAd = t;
                                const e = TACTICS_SDK.getGlobalData("configInfo").config.xiaomi_ad_custom_clsname,
                                    i = e && e.val || "";
                                this.adCustomClass = i;
                                const o = TACTICS_SDK.getGlobalData("configInfo").config.xiaomi_template_probability_button,
                                    n = o ? Number(o.val) : 100;
                                this.isButton = !!$utils.getProbabilityNum(1, n);
                                const a = TACTICS_SDK.getGlobalData("configInfo").config.xiaomi_template_adv_type,
                                    s = a ? Number(a.val) : 0;
                                this.templateAdvType = s, this.templateAdvType = this.getAdvTypeByAdDictConfig(), this.isXmTemplateAd && this.nativeAdvObj && "冷却" !== this.nativeAdvObj.id && (this.preloadTemplateAd(), this.$watch("nativeIsShowPop", "nativeIsShowPopChangeHandle")), this.nativeAdvObj && "冷却" == this.nativeAdvObj.id && this.adErrorXiaomi({errCode: "冷却重新请求"});
                                const r = TACTICS_SDK.getGlobalData("configInfo").config;
                                "is_custom_ad_full" in r && (this.isLoadFull = 1 == r.is_custom_ad_full.val)
                            },
                            nativeIsShowPopChangeHandle(t, e) {
                                let i = this.$parent();
                                if (i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == i.popType ? i.curMiddleConfig : i.curpopConfig,
                                        advConfig: i.nativeAdvObj
                                    },
                                    index: i.index,
                                    eventName: "popShow",
                                    action: "compareAdId",
                                    actionCode: i.actionCode,
                                    customAction: a(a({}, i.customAction), {}, {adType: 7})
                                }), t) {
                                    if (!this.curpopConfig.customStyle) return;
                                    this.clickAdCount = this.curpopConfig.customStyle.click_count || 0, this.clickAdCount ? (EVENT_BUS.clear("appStatus"), EVENT_BUS.on("appStatus", (t => {
                                        "onShow" === t && !this.nativeAdvObj.isAdShow && this.clickAdCount > -1 && this.updateAd()
                                    }))) : EVENT_BUS.clear("appStatus")
                                }
                            },
                            deleteBtnClick(t) {
                                this.$parent().deleteBtnClick(t)
                            },
                            closeClick(t) {
                                this.$parent().closeClick(t)
                            },
                            noAdClickForBtn(t) {
                                this.$parent().noAdClickForBtn(t)
                            },
                            negClick(t) {
                                this.$parent().negClick(t)
                            },
                            xiaomiAdClose() {
                                this.$parent().xiaomiAdClose()
                            },
                            adClickXiaomi(t) {
                                LOG("小米模版广告", "adClickXiaomi", t), LOG("优先请求广告", "模版广告点击", this.nativeAdvObj.isPriorityAd), this.nativeAdvObj.isPriorityAd && POP_TOOLS.setPriorityPopClose(), this.$parent().adClickForBtn(this.clickAdCount > 0 ? -1 : t), this.clickAdCount > 0 && (this.clickAdCount--, this.updateAd())
                            },
                            adShowXiaomi() {
                                LOG("小米模版广告", "adShowXiaomi"), this.adloadXiaomi(), this.$parent().priorityAdHandle(1), this.$parent().adPicShowFunc(), this.nativeAdvObj.isAdShow = !0
                            },
                            async adErrorXiaomi(t, e, i) {
                                let o = this.$parent();
                                if (o) {
                                    if (o.isNoAd) return;
                                    t && (o.nativeAdvObj.result = `无广告${t.errCode}`, LOG("小米模版广告", "adErrorXiaomi", t.errCode, o.nativeAdvObj.id)), AD_SDK.uploadAdInfo("request", o.nativeAdvObj);
                                    const e = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").config || {};
                                    if ("boost" === o.actionCode && !e.ad_click_rate_switch) return AD_SDK.coolHandle(o.nativeAdvObj), void o.$emit("eventWatch", {
                                        popData: {
                                            popConfig: "middle" == o.popType ? o.curMiddleConfig : o.curpopConfig,
                                            advConfig: null
                                        },
                                        index: o.index,
                                        eventName: "adLoadFailed",
                                        action: "adLoadFailed",
                                        actionCode: o.actionCode,
                                        customAction: a(a({}, o.customAction), {}, {adType: 7, id: o.nativeAdvObj.id})
                                    });
                                    await this.getNextXiaomiAdData(i) && this.nativeAdvObj && "冷却" !== this.nativeAdvObj.id && this.preloadTemplateAd(i), this.nativeAdvObj && "冷却" === this.nativeAdvObj.id && this.adErrorXiaomi({errCode: "冷却重新请求"})
                                }
                            },
                            adloadXiaomi() {
                                this.adLoadSuccess = !0;
                                let t = this.$parent();
                                t.nativeAdvObj.result = "有广告", t.nativeAdvObj.isAdLoadError = !1, LOG("小米模版广告", "adloadXiaomi", t.nativeAdvObj), AD_SDK.uploadAdInfo("request", t.nativeAdvObj), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: "middle" == t.popType ? t.curMiddleConfig : t.curpopConfig,
                                        advConfig: t.nativeAdvObj
                                    },
                                    index: t.index,
                                    eventName: "adLoadSuccess",
                                    action: "adLoadSuccess",
                                    actionCode: t.actionCode,
                                    customAction: a(a({}, t.customAction), {}, {adType: 7})
                                }), t.priorityAdHandle(0)
                            },
                            getNextXiaomiAdData(t, e) {
                                let i = this.$parent();
                                return new Promise((o => {
                                    i.nativeAdvObj.adMethod = "2.0", setTimeout((() => {
                                        i.nativeAdvObj.isFirstLoad = e;
                                        let n = AD_SDK_UTILS.getNextXiaomiAdData("通用自定义弹窗", "AD_POP_COMMON", 7, 1, "补量池广告", "补量池广告组", i.adRequestTimes, i.actionCode, i.nativeAdvObj);
                                        i.nativeAdvObj.isFirstLoad = !1, LOG("小米模版广告", "getNextXiaomiAdData", n), n ? (i.nativeAdvObj = n, this.templateAdvType = this.getAdvTypeByAdDictConfig(), o(!0)) : (t ? i.closeClick() : i.$emit("eventWatch", {
                                            popData: {
                                                popConfig: "middle" == i.popType ? i.curMiddleConfig : i.curpopConfig,
                                                advConfig: null
                                            },
                                            index: i.index,
                                            eventName: "adLoadFailed",
                                            action: "adLoadFailed",
                                            actionCode: i.actionCode,
                                            customAction: a(a({}, i.customAction), {}, {
                                                adType: 7,
                                                id: i.nativeAdvObj.id
                                            })
                                        }), o(!1))
                                    }), 50)
                                }))
                            },
                            preloadTemplateAd(t) {
                                LOG("小米模版广告", "preloadTemplateAd");
                                const e = this;
                                if (7 === this.nativeAdvObj.adType) {
                                    if (this.nativeIsShowPop && !t) {
                                        let t = this.$parent();
                                        return LOG("展示异常当前组件已展示不在重新获取", t, this.nativeAdvObj), void t.$emit("eventWatch", {
                                            popData: {
                                                popConfig: "middle" == t.popType ? t.curMiddleConfig : t.curpopConfig,
                                                advConfig: t.nativeAdvObj
                                            },
                                            index: t.index,
                                            eventName: "popShow",
                                            action: "compareAdId",
                                            actionCode: t.actionCode,
                                            customAction: a(a({}, t.customAction), {}, {adType: 7})
                                        })
                                    }
                                    i("@app-module/service.ad").preloadAd({
                                        adUnitId: this.nativeAdvObj.id,
                                        type: "custom",
                                        fail(i, o) {
                                            e.adErrorXiaomi(i, o, t)
                                        }
                                    }), this.adLoadTimer = setTimeout((() => {
                                        const e = $utils.getRouterInfo();
                                        this.adLoadSuccess || this.$page && e.name !== this.$page.name || this.adErrorXiaomi({errCode: "未触发回调"}, null, t)
                                    }), 2e3)
                                }
                            },
                            async updateAd() {
                                this.nativeAdvObj = {}, await this.getNextXiaomiAdData(!0, !0) && this.nativeAdvObj && "冷却" !== this.nativeAdvObj.id ? this.preloadTemplateAd(!0) : LOG("广告消耗后未请求到新的广告")
                            },
                            getAdvTypeByAdDictConfig() {
                                const t = this.$parent(),
                                    e = TACTICS_SDK.getGlobalData("new_ad_pos") && TACTICS_SDK.getGlobalData("new_ad_pos").ad_dict_config;
                                let i = this.templateAdvType;
                                LOG("模版广告样式", "应用层配置", i);
                                try {
                                    if (!e) return LOG("模版广告样式", "没有广告位自定义配置"), i;
                                    const o = JSON.parse(e).filter((t => t.key.includes("template_adid_type"))).sort(((t, e) => e.key.slice(-1) - t.key.slice(-1)));
                                    if (LOG("模版广告样式", "模版广告样式配置", o), 0 === o.length) return LOG("模版广告样式", "没有模版广告样式配置"), i;
                                    const n = t.nativeAdvObj.id;
                                    LOG("模版广告样式", "广告位id", n), o.forEach((t => {
                                        t.val.includes(n) && (i = Number(t.key.slice(-1)))
                                    })), LOG("模版广告样式", "模版广告样式", i)
                                } catch (t) {
                                    LOG("模版广告样式", "代码报错", t)
                                }
                                return i
                            }
                        }
                    }
                }, 6820: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            props: {
                                delayConfig: {type: Object, default: {}},
                                curpopConfig: {type: Object, default: {}},
                                curMiddleConfig: {type: Object, default: {}},
                                defaultStyle: {type: Object, default: {}},
                                customAction: {type: Object, default: {}},
                                nativeAdvObj: {type: Object, default: {}},
                                isNoAd: {type: Boolean, default: !1},
                                nativeIsShowPop: {type: Boolean, default: !1},
                                popShowGif: {type: Boolean, default: !1},
                                popShowGifImg: {type: String, default: ""},
                                popType: {type: String, default: ""},
                                actionCode: {type: String, default: ""},
                                winHeight: {type: Number, default: 0},
                                positionRight: {type: Number, default: 750},
                                beforeJumpGif: {type: Boolean, default: !1},
                                beforeJumpImg: {type: Object, default: {}},
                                adContentStyle: {type: String, default: ""},
                                index: {type: Number, default: 0}
                            }, data: {reportName: "", isUIShow: !1}, onInit() {
                                LOG("YLH_AD", "onInit", JSON.stringify(this.nativeAdvObj), this.curpopConfig), this.isUIShow = this.nativeAdvObj.isUIShow, this.$watch("nativeIsShowPop", "nativeIsShowPopChangeHandle")
                            }, nativeIsShowPopChangeHandle(t, e) {
                                t && (this.isUIShow = !0, LOG("YLH_AD", "nativeIsShowPopChangeHandle", JSON.stringify(this.nativeAdvObj)))
                            }, onAdClick(t) {
                                LOG("YLH_AD", "优量汇广告===>onAdClick", t, this.reportName), t.elementName = this.reportName || "素材中", this.$parent().adClickForImg(t)
                            }, clickBtn() {
                                this.reportName = "正向按钮"
                            }, onAdExpose(t) {
                                LOG("YLH_AD", "曝光"), this.$parent().adPicShowFunc()
                            }, closeClick(t) {
                                this.$parent() && this.$parent().closeClick(t)
                            }, negClick() {
                                this.$parent().negClick()
                            }, deleteBtnClick(t) {
                                this.$parent().deleteBtnClick(t)
                            }, noAdClickForBtn(t) {
                                this.$parent().noAdClickForBtn(t)
                            }
                        }
                    }
                }, 9744: t => {
                    t.exports = function (t, e, i) {
                        "use strict";

                        function o(t, e) {
                            var i = Object.keys(t);
                            if (Object.getOwnPropertySymbols) {
                                var o = Object.getOwnPropertySymbols(t);
                                e && (o = o.filter((function (e) {
                                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                                }))), i.push.apply(i, o)
                            }
                            return i
                        }

                        function n(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var i = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? o(Object(i), !0).forEach((function (e) {
                                    var o, n, a, s;
                                    o = t, n = e, a = i[e], (n = "symbol" == typeof (s = function (t, e) {
                                        if ("object" != typeof t || !t) return t;
                                        var i = t[Symbol.toPrimitive];
                                        if (void 0 !== i) {
                                            var o = i.call(t, "string");
                                            if ("object" != typeof o) return o;
                                            throw new TypeError("@@toPrimitive must return a primitive value.")
                                        }
                                        return String(t)
                                    }(n)) ? s : String(s)) in o ? Object.defineProperty(o, n, {
                                        value: a,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : o[n] = a
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : o(Object(i)).forEach((function (e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                                }))
                            }
                            return t
                        }

                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            props: {
                                pageName: {type: String, default: ""},
                                popCode: {type: String, default: ""},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                backPressTimes: {type: Number, default: 0},
                                customAction: {type: Object, default: {}}
                            },
                            data: {bqtConfig: {isShow: !1, advConfig: null, customAction: {}, popConfig: null}},
                            onInit() {
                                this.patchAdCompShow(this.popCode)
                            },
                            async patchAdCompShow(t) {
                                if (!t) return void console.error("bqt插屏广告获取code失败");
                                let e = this;
                                e.bqtConfig.isShow = !1;
                                let i = t.split("_")[0].toLowerCase(),
                                    o = await TACTICS_SDK_UTILS.getPopupConfigByPopupCode(t);
                                if (o) {
                                    if (LOG("BQT_AD", "1获取的弹窗配置", o), "baiduscreeninsertion" === i) {
                                        let i = await e.getManuAdvCommon("通用自定义弹窗", "AD_POP_COMMON", 4, 1, o.popGroupName, o.popName);
                                        if (LOG("BQT_AD", "百度广告获取的数据", i), "success" == i.type) {
                                            let t = i.data;
                                            o.commonStyle.backLockTime < 5e3 && (o.commonStyle.backLockTime = 5e3), e.bqtConfig.popConfig = Object.assign({}, o, JSON.parse(JSON.stringify(e.customAction))), e.bqtConfig.advConfig = JSON.parse(JSON.stringify(t)), e.bqtConfig.customAction = Object.assign({}, e.customAction), e.bqtConfig.isShow = !0
                                        } else e.$emit("eventWatch", {
                                            popData: {popConfig: null, advConfig: null},
                                            code: t,
                                            eventName: "closePopData",
                                            action: "adRequestFailed",
                                            actionCode: e.actionCode,
                                            popStyleName: "bqtinsert"
                                        })
                                    }
                                } else e.$emit("eventWatch", {
                                    popData: {popConfig: null, advConfig: null},
                                    code: t,
                                    eventName: "closePopData",
                                    action: "popCodeError",
                                    actionCode: e.actionCode,
                                    popStyleName: i
                                })
                            },
                            bqtEvnetWatchHandle(t) {
                                LOG("BQT_AD", "111evt==>", t), "closePopData" === t.detail.eventName && (LOG("BQT_AD", "222222==>"), this.$emit("eventWatch", n(n({}, t.detail), {}, {popStyleName: "baidu"})))
                            },
                            getManuAdvCommon(t, e, i, o, n, a, s) {
                                return LOG("获取广告1", ...arguments), new Promise(((r, p) => {
                                    AD_SDK_UTILS.getAd({
                                        scenario: t,
                                        sceneCode: e,
                                        adType: i,
                                        adTimes: o,
                                        popName: s,
                                        popGroupName: a,
                                        requestNum: n,
                                        success: function (t) {
                                            r({type: "success", data: t})
                                        },
                                        fail: function (t) {
                                            r({type: "failed", data: t})
                                        }
                                    })
                                }))
                            }
                        }
                    }
                }, 4173: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            props: {
                                skeletonImg: {
                                    type: String,
                                    default: ""
                                }
                            }, data: {}, onInit() {
                            }, popClick() {
                                COMMON_REPORT_UTILS.page_click_report("骨架图")
                            }
                        }
                    }
                }, 8196: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = s(o("@app-module/system.audio")), a = s(i(9084));

                        function s(t) {
                            return t && t.__esModule ? t : {default: t}
                        }

                        e.default = {
                            props: {
                                pageName: {type: String, default: ""},
                                popConfig: {type: Object, default: null},
                                actionCode: {type: String, default: "PAGE_ENTRY"},
                                backPressTimes: {type: Number, default: 0},
                                customAction: {type: Object, default: {}}
                            },
                            data: {
                                popShowGif: !1,
                                popShowGifImg: "",
                                menuBarTop: 0,
                                menuBarRight: 0,
                                brand: "xiaomi",
                                reloadCount: 0,
                                refresh: "0",
                                backPressRefuseReport: !1,
                                delayConfig: {
                                    close: {type: !1, timer: null},
                                    crowd: {type: !1, timer: null},
                                    neg: {type: !1, timer: null},
                                    backPress: {type: !1, timer: null}
                                },
                                countDownIsNextBtnTimer: null,
                                shakeData: {},
                                changeable: 0,
                                changeableOld: 0,
                                transAn: "",
                                canShakeHand: !0,
                                curpopConfig: {
                                    customTextStyle: {
                                        canShow: !1,
                                        text: [{text: "22222", style: {color: "#fff"}}],
                                        style: {}
                                    }, customBoxStyle: {style: {height: ""}}, flexOverall: "center"
                                }
                            },
                            onInit() {
                                this.$watch("changeableOld", "changeableFn");
                                let t = this;
                                LOG("BQT_AD", t.popConfig), t.popBeforeShowGif(t.popConfig), t.getMenuData(), t.initViewShow(), TACTICS_SDK.sePopupShowTimes(t.popConfig.code);
                                let e = "否";
                                1 == t.popConfig.btnStyle.isBindingAd && (e = "是"), 1 == t.popConfig.commonStyle.notViewBackClosePopup && (e = "是");
                                let i = {
                                    ad_network: 1,
                                    page_type: t.popConfig.popGroupName,
                                    ad_position: t.popConfig.popName,
                                    ad_style: "自定义文案",
                                    page_name: "有",
                                    ext_field_9: t.action2Name(t.actionCode),
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][t.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: e,
                                    ad_type: "视频",
                                    referer: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.function_name || "",
                                    scene: t.popConfig.configBaseFormData && t.popConfig.configBaseFormData.custom_content || ""
                                };
                                COMMON_REPORT_UTILS.custom_popup_show_report(i.ad_network, i.page_type, i.ad_position, i.ad_style, i.page_name, i.ext_field_9, i.ext_field_2, i.ext_field_3, "", i.scene, i.referer, i.ad_type), t.$watch("backPressTimes", "backPressTimesChangeHandler")
                            },
                            changeableFn() {
                                if (["roll", "rise"].includes(this.transAn) && !isNaN(this.changeableOld)) {
                                    LOG("=== // roll rise----", this.transAn);
                                    let t = setTimeout((() => {
                                        let e = this.changeableOld > 100 ? 200 : 40, i = Math.floor(Math.random() * e);
                                        this.changeable + i > this.changeableOld ? (this.changeable = this.changeableOld, clearTimeout(t)) : (this.changeable += i, this.changeableFn())
                                    }), 120)
                                } else if ("count" != this.transAn || isNaN(this.changeableOld)) this.changeable = this.changeableOld; else {
                                    LOG("=== // 倒计时", this.changeable);
                                    let t = setTimeout((() => {
                                        this.changeable--, this.changeable > 0 ? this.changeableFn() : clearTimeout(t)
                                    }), 1e3)
                                }
                            },
                            calcPopData(t) {
                                let e = t, i = parseFloat(e.commonStyle.scale);
                                if (this.changeableOld = 0, this.changeable = 0, e.flexOverall = ["", "center", "flex-end", "flex-start"][e.commonStyle.popLocation], e.customTextStyle = {
                                    canShow: !1,
                                    text: [{text: "22222", style: {color: "#fff"}}],
                                    style: {}
                                }, e.customBoxStyle = {style: {}}, e.customTextStyle.style = {
                                    height: Number(e.commonStyle.customHeight) * i + "px",
                                    width: Number(e.commonStyle.customWidth) * i + "px",
                                    top: Number(e.commonStyle.customTextOffsetTop) * i + "px",
                                    flexDirection: "row",
                                    justifyContent: "center",
                                    alignItems: "center",
                                    position: "absolute"
                                }, 0 == Number(e.commonStyle.customTextOffsetLeft) ? e.customTextStyle.style.alignSelf = "center" : e.customTextStyle.style.left = Number(e.commonStyle.customTextOffsetLeft) * i + "px", console.log("VIEW", "原始自定义数据  ", e.commonStyle.customText), e.commonStyle.customText) {
                                    let t = e.commonStyle.customText.split("-"), n = t[1];
                                    var o = [], a = {C: "color", F: "fontSize", B: "fontWeight"},
                                        s = t[0].split("$").filter((t => t));
                                    console.log("allr", s);
                                    for (let t of s) {
                                        console.log(t);
                                        let e = {text: "", style: {}, class: ""}, i = t.split("_");
                                        e.text = i[0];
                                        let n = i[1].split(",");
                                        for (let t of n) e.style[a[t.split(":")[0]]] = t.split(":")[1];
                                        o.push(e)
                                    }
                                    console.log("textList", JSON.stringify(o)), e.customTextStyle.text = o.map((t => (t.style.fontSize = Number(t.style.fontSize) * i + "px", t.style.alignSelf = "auto", "@" == t.text && (t.class = n), t))), this.transAn = n, "count" == this.transAn && (this.changeable = POP_TOOLS.getDynamicText(this.actionCode) || "7"), this.changeableOld = POP_TOOLS.getDynamicText(this.actionCode) || "500", LOG("== this.transAn", this.transAn)
                                }
                                if (e.customTextStyle.canShow = e.commonStyle.customDisplay, Number(e.commonStyle.customTextOffsetTop) < 0 ? (e.customTextStyle.style.top = "0px", e.customBoxStyle.style = {
                                    height: Number(-e.commonStyle.customTextOffsetTop) * i + "px",
                                    width: "100%"
                                }) : (e.customTextStyle.top = Number(e.commonStyle.customTextOffsetTop) * i + "px", e.customBoxStyle.style = {
                                    height: "0px",
                                    width: "100%"
                                }), e.commonStyle.isOpenAudio && e.commonStyle.mp3SoundEffect) try {
                                    n.default.src = e.commonStyle.mp3SoundEffect, n.default.play()
                                } catch (t) {
                                    LOG("VIEW", "音频播放失败", t)
                                }
                                e.commonStyle.shakeIsNextBtn, e.commonStyle.countDownIsNextBtn && (this.countDownIsNextBtnTimer = setTimeout((() => {
                                    this.adButtonClickHandle()
                                }), 1e3 * Number(e.commonStyle.countDownTime))), this.curpopConfig = e, console.log("==this.curpopConfig", this.curpopConfig)
                            },
                            stopAudio() {
                                n.default.stop()
                            },
                            adButtonClickHandle() {
                                let t = this;
                                "add_desktop" != t.popConfig.configBaseFormData.function_type && (LOG("BQT_AD", "视频广告===>adButtonClickHandle"), t.reportClick("正向按钮"), t.popAfterShowGif("closePopData", "videoAdClick"))
                            },
                            getMenuData() {
                                let t = this;
                                try {
                                    let e = t.$page.getMenuBarRect();
                                    e && e.menuBarWidth > 0 && device.getInfo({
                                        success: function (i) {
                                            try {
                                                let o = 750 / i.screenWidth;
                                                t.menuBarRight = t.keepTwoDecimal(750 - e.menuBarRight * o), t.menuBarHeight = e.menuBarHeight, t.menuBarWidth = t.keepTwoDecimal(e.menuBarWidth * o), t.menuBarTop = t.keepTwoDecimal(e.menuBarTop * o)
                                            } catch (t) {
                                            }
                                        }
                                    })
                                } catch (t) {
                                }
                            },
                            keepTwoDecimal(t) {
                                var e = parseFloat(t);
                                return !isNaN(e) && Math.round(100 * t) / 100
                            },
                            backPressTimesChangeHandler(t, e) {
                                let i = this;
                                if (i.delayConfig.backPress.type) i.reportClick("物理返回"), i.$emit("eventWatch", {
                                    popData: {
                                        popConfig: i.popConfig,
                                        advConfig: null
                                    },
                                    eventName: "closePopData",
                                    action: "backPress",
                                    actionCode: i.actionCode,
                                    customAction: i.customAction
                                }), i.initViewHide(); else {
                                    if (LOG("CUSTOM", "物理返回拦截中"), i.backPressRefuseReport) return;
                                    i.backPressRefuseReport = !0;
                                    let t = {
                                        ad_position: i.popConfig.popName,
                                        page_type: i.popConfig.popGroupName,
                                        element_name: "关闭弹窗拦截"
                                    };
                                    COMMON_REPORT_UTILS.back_click_report(t.ad_position, t.page_type, t.element_name)
                                }
                            },
                            backIconClick() {
                                let t = this;
                                LOG("BQT_AD", "backIconClick"), t.reportClick("返回按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: null
                                    },
                                    eventName: "closePopData",
                                    action: "backIconClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide()
                            },
                            closeClick() {
                                let t = this;
                                t.delayConfig.close.type ? (LOG("BQT_AD", "closeClick"), t.reportClick("关闭"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: null
                                    },
                                    eventName: "closePopData",
                                    action: "closeClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide()) : LOG("BQT_AD", "关闭按钮点击拦截中^_^")
                            },
                            negClick() {
                                let t = this;
                                t.delayConfig.neg.type ? (LOG("BQT_AD", "negClick"), t.reportClick("负向按钮"), t.$emit("eventWatch", {
                                    popData: {
                                        popConfig: t.popConfig,
                                        advConfig: null
                                    },
                                    eventName: "closePopData",
                                    action: "negClick",
                                    actionCode: t.actionCode,
                                    customAction: t.customAction
                                }), t.initViewHide()) : LOG("BQT_AD", "负向按钮点击拦截中^_^")
                            },
                            popBeforeShowGif(t) {
                                this.popShowGifImg = t.commonStyle.transitionBeforeImg, t.commonStyle.transitionBeforeTime ? (this.popShowGif = !0, this.calcPopData(this.popConfig), setTimeout((() => {
                                    this.popShowGif = !1
                                }), Number(t.commonStyle.transitionBeforeTime))) : (this.calcPopData(this.popConfig), this.popShowGif = !1)
                            },
                            popAfterShowGif(t, e, i = {}) {
                                let o = this;
                                this.popShowGifImg = o.popConfig.commonStyle.transitionAfterImg;
                                try {
                                    o.stopAudio(), clearTimeout(o.countDownIsNextBtnTimer)
                                } catch (t) {
                                }
                                o.popConfig.commonStyle.transitionAfterTime ? (o.popShowGif = !0, setTimeout((() => {
                                    o.$emit("eventWatch", {
                                        popData: {popConfig: o.popConfig, advConfig: null},
                                        eventName: t,
                                        action: e,
                                        actionCode: o.actionCode,
                                        customAction: o.customAction
                                    }), o.popShowGif = !1
                                }), Number(o.popConfig.commonStyle.transitionAfterTime))) : (o.$emit("eventWatch", {
                                    popData: {
                                        popConfig: o.popConfig,
                                        advConfig: null
                                    },
                                    eventName: t,
                                    action: e,
                                    actionCode: o.actionCode,
                                    customAction: o.customAction,
                                    compData: i
                                }), o.popShowGif = !1)
                            },
                            initViewShow() {
                                let t = this;
                                t.popConfig.closeStyle.delay > 0 ? t.delayConfig.close.timer = setTimeout((() => {
                                    t.delayConfig.close.type = !0, clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null
                                }), t.popConfig.closeStyle.delay) : t.delayConfig.close.type = !0, t.popConfig.crowdStyle.delay > 0 ? t.delayConfig.crowd.timer = setTimeout((() => {
                                    t.delayConfig.crowd.type = !0, clearTimeout(t.delayConfig.crowd.timer), t.delayConfig.crowd.timer = null
                                }), t.popConfig.crowdStyle.delay) : t.delayConfig.crowd.type = !0, t.popConfig.negStyle.delay > 0 ? t.delayConfig.neg.timer = setTimeout((() => {
                                    t.delayConfig.neg.type = !0, clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null
                                }), t.popConfig.negStyle.delay) : t.delayConfig.neg.type = !0, t.popConfig.commonStyle.backLockTime > 0 ? t.delayConfig.backPress.timer = setTimeout((() => {
                                    t.delayConfig.backPress.type = !0, clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null
                                }), t.popConfig.commonStyle.backLockTime) : t.delayConfig.backPress.type = !0
                            },
                            initViewHide() {
                                let t = this;
                                t.stopAudio(), t.delayConfig.close.timer && (clearTimeout(t.delayConfig.close.timer), t.delayConfig.close.timer = null), t.delayConfig.crowd.timer && (clearTimeout(t.delayConfig.crowd.timer), t.delayConfig.crowd.timer = null), t.delayConfig.neg.timer && (clearTimeout(t.delayConfig.neg.timer), t.delayConfig.neg.timer = null), t.delayConfig.backPress.timer && (clearTimeout(t.delayConfig.backPress.timer), t.delayConfig.backPress.timer = null), t.delayConfig.close.type = !1, t.delayConfig.crowd.type = !1, t.delayConfig.neg.type = !1, t.delayConfig.backPress.type = !1;
                                try {
                                    clearTimeout(this.countDownIsNextBtnTimer)
                                } catch (t) {
                                }
                            },
                            onDestroy() {
                                this.initViewHide()
                            },
                            reportClick(t) {
                                let e = this;
                                LOG("CUSTOM", "reportClick");
                                let i = "否";
                                1 == e.popConfig.btnStyle.isBindingAd && (i = "是"), 1 == e.popConfig.commonStyle.notViewBackClosePopup && (i = "是");
                                let o = {
                                    ad_network: 1,
                                    page_type: e.popConfig.popGroupName,
                                    ad_position: e.popConfig.popName,
                                    ad_style: "厂商文案",
                                    page_name: "有",
                                    ext_field_9: e.action2Name(e.actionCode),
                                    element: t,
                                    scene: e.popConfig.configBaseFormData ? e.popConfig.configBaseFormData.custom_content : "",
                                    ext_field_2: ["0", "跳转新页面", "按策略路由返回", "退出应用", "关闭弹窗", "跳转H5活动页"][e.popConfig.btnStyle.jumpKey] || "未知",
                                    ext_field_3: i,
                                    ad_type: "视频",
                                    referer: "",
                                    referer: e.popConfig.configBaseFormData && e.popConfig.configBaseFormData.function_name || ""
                                };
                                POP_TOOLS.resetActionPopType(), LOG("CUSTOM", "reportClick", o), COMMON_REPORT_UTILS.custom_popup_click_report(o.page_type, o.ad_position, o.ad_network, o.element, o.ad_style, o.page_name, o.ext_field_9, o.ext_field_2, o.ext_field_3, "", o.scene, o.referer, o.ad_type)
                            },
                            action2Name(t) {
                                let e = "";
                                return e = t && a.default[`${t}`] && a.default[`${t}`].name ? a.default[`${t}`].name : "未知", e + POP_TOOLS.reportActionPopType()
                            },
                            addButtonClickHandler(t) {
                                this.reportClick("正向按钮"), this.popAfterShowGif("closePopData", "videoAdClick", {addDesktopStatus: t.detail.addDesktopStatus})
                            }
                        }
                    }
                }, 5539: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {deviceInfo: {statusBarHeight: 40}},
                            onReady() {
                                DEVICE_UTILS.getInfo().then((t => {
                                    let e = this.$app.$def.getPagesCodeInfo();
                                    this.deviceInfo.statusBarHeight = Math.ceil(750 * t.statusBarHeight / t.screenWidth), "READ_READINFO" == e.pageCode && "huawei" == this.$app.$def.brand && (this.deviceInfo.statusBarHeight = 0)
                                }))
                            },
                            backClick() {
                                this.$emit("backClick")
                            },
                            props: {
                                title: {type: String, default: ""},
                                backgroudColor: {type: String, default: "transparent"},
                                textCenter: {type: Boolean, default: !1},
                                textColor: {type: String, default: "#ffffff"},
                                textWeight: {type: Number, default: 700},
                                fontSize: {type: Number, default: 32},
                                backIconShow: {type: Boolean, default: !0},
                                backImgUrl: {type: String, default: ""}
                            }
                        }
                    }
                }, 8126: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            data: {assessNum: 0, marqueeList: []},
                            props: {
                                size: {type: String, default: "large"},
                                nums: {type: Number, default: 8586},
                                textColor: {type: String, default: "#ffffff"}
                            },
                            onInit() {
                                this.initMarqueeList(), this.initAssessNum()
                            },
                            randomSort: (t, e) => Math.random() > .5 ? -1 : 1,
                            initMarqueeList() {
                                let t = [{
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892340059_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192315.png",
                                    userName: "内斯塔",
                                    userCoin: "2050"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892333904_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192303.png",
                                    userName: "土夫子",
                                    userCoin: "561"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892326788_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192247.png",
                                    userName: "the dan",
                                    userCoin: "1923"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892320099_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192238.png",
                                    userName: "TARMA",
                                    userCoin: "1332"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892313986_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192222.png",
                                    userName: "沐沐",
                                    userCoin: "963"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892307085_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192212.png",
                                    userName: "Jackson",
                                    userCoin: "155"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892300299_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192157.png",
                                    userName: "INK",
                                    userCoin: "1023"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892292841_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192146.png",
                                    userName: "海川",
                                    userCoin: "691"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892284267_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192140.png",
                                    userName: "董小姐",
                                    userCoin: "712"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892275976_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192130.png",
                                    userName: "David",
                                    userCoin: "467"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892267882_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192124.png",
                                    userName: "狙击手",
                                    userCoin: "284"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892259845_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192119.png",
                                    userName: "一天一天",
                                    userCoin: "1586"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892249576_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192112.png",
                                    userName: "安安",
                                    userCoin: "1355"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892240536_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192104.png",
                                    userName: "宝哥",
                                    userCoin: "827"
                                }, {
                                    headImg: "https://devims.readnos.com/image%2F2023-02-20%2F1676892222792_%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230220192041.png",
                                    userName: "巴比",
                                    userCoin: "952"
                                }];
                                this.marqueeList = "large" === this.size ? t.sort(this.randomSort).slice(0, 5) : t.sort(this.randomSort).slice(0, 3)
                            },
                            initAssessNum() {
                                this.assessNum = Math.floor(9e3 * Math.random()) + 1e3
                            }
                        }
                    }
                }, 9551: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        var o;
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, (o = i("@app-module/system.router")) && o.__esModule, e.default = {
                            data: {
                                pageName: "书城",
                                deviceInfo: {statusBarHeight: 40}
                            },
                            onReady() {
                            },
                            backClick() {
                                this.$dispatch("clickBack", {params: "来自子组件的消息"})
                            },
                            props: {
                                title: {type: String, default: ""},
                                backgroudColor: {type: String, default: "transparent"},
                                textCenter: {type: Boolean, default: !0},
                                textColor: {type: String, default: "#333333"},
                                textWeight: {type: Number, default: 700},
                                fontSize: {type: Number, default: 36},
                                backIconShow: {type: Boolean, default: !0},
                                backImgUrl: {type: String, default: ""}
                            }
                        }
                    }
                }, 167: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                        var n = i(5987);
                        e.default = {
                            data: {deviceInfo: {statusBarHeight: 40}}, onReady() {
                                (0, n.getInfo)().then((t => {
                                    this.deviceInfo.statusBarHeight = t.statusBarHeight
                                }))
                            }, props: {title: {type: String, default: ""}, type: {type: String, default: ""}}
                        }
                    }
                }, 6271: (t, e, i) => {
                    t.exports = function (t, e, o) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, (n = o("@app-module/system.router")) && n.__esModule;
                        var n, a = i(5987);
                        e.default = {
                            name: "writeOff", props: {typeShow: {type: String, default: ""}}, onInit() {
                            }, handle: (0, a.debounce)((function () {
                                this.$dispatch("agree")
                            }), 100), notHandle: (0, a.debounce)((function () {
                                this.$dispatch("disagree")
                            }), 100)
                        }
                    }
                }, 1582: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        var o;
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, (o = i("@app-module/system.router")) && o.__esModule, e.default = Custom_page({
                            props: {
                                tabIndex: {
                                    type: [String, Number],
                                    default: 1
                                }, refershUser: {type: Boolean, default: !1}
                            }, data: {topData: [], centerData: [], bottomData: []}, onReady() {
                            }, async onInit() {
                                this.$watch("tabIndex", "getList")
                            }, getList(t) {
                                1 == t && $apis.example.answerIndex().then((t => {
                                    200 == t.code ? (this.topData = t.data.slice(0, 4), this.centerData = t.data.slice(4, 7), this.bottomData = t.data.slice(7, 10)) : $utils.showToast(t.msg, 0)
                                }))
                            }, goAssessPage(t) {
                                $utils.routetheUrl("/pagesA/AssessPageNew", {
                                    bookId: t.id,
                                    paramsTitle: t.title,
                                    pathUrl: "答题"
                                }, !1), COMMON_REPORT_UTILS.page_click_report(t.title)
                            }
                        })
                    }
                }, 6751: t => {
                    t.exports = function (t, e, i) {
                        "use strict";
                        Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                            props: {
                                tabIndex: {type: [String, Number], default: 2},
                                refershUser: {type: Boolean, default: !1}
                            },
                            data: {
                                writeOffShow: !1,
                                profileIcon: "../../assets/my/head-default.png",
                                isShowFuli: !1,
                                typeShow: "1",
                                items: [{
                                    name: "联系客服",
                                    icon: "../../assets/my/customer.png",
                                    id: 0,
                                    isShow: !0,
                                    width: "83px",
                                    height: "85px"
                                }, {
                                    name: "用户协议",
                                    icon: "../../assets/my/agreement.png",
                                    id: 1,
                                    isShow: !0,
                                    width: "83px",
                                    height: "85px"
                                }, {
                                    name: "隐私政策",
                                    icon: "../../assets/my/provite.png",
                                    id: 2,
                                    isShow: !0,
                                    width: "83px",
                                    height: "85px"
                                }, {
                                    name: "退出登录",
                                    icon: "../../assets/my/cancellation.png",
                                    id: 3,
                                    isShow: !0,
                                    width: "83px",
                                    height: "85px"
                                }, {
                                    name: "注销账号",
                                    icon: "../../assets/my/logout.png",
                                    id: 4,
                                    isShow: !0,
                                    width: "83px",
                                    height: "85px"
                                }],
                                userInfo: {},
                                isLogin: !1
                            },
                            async onInit() {
                                this.$watch("tabIndex", "tabIndexHandle"), this.$watch("refershUser", "refershUserHandle")
                            },
                            disagreeHandle() {
                                this.writeOffShow = !1
                            },
                            agreeHandle() {
                                this.loginOff()
                            },
                            onReady() {
                                this.items.map(((t, e, i) => {
                                    this.$app.$def.isLogin || 3 !== t.id || (t.isShow = !1), this.$app.$def.isLogin || 4 !== t.id || (t.isShow = !1)
                                }))
                            },
                            refershUserHandle(t) {
                                if (!t) return !1;
                                const e = {
                                    androidId: this.$app.$def.android,
                                    brand: this.$app.$def.brand,
                                    oaid: this.$app.$def.oaid,
                                    versionCode: this.$app.$def.versionCode,
                                    versionName: this.$app.$def.versionName
                                };
                                $apis.example.login(e).then((t => {
                                    t && 200 === t.code && (this.userInfo = t.data, this.isLogin = t.data.loginStatus, $utils.setStorage("token", t.data.online_token), this.$app.$def.isLogin = 1 === t.data.loginStatus, t.data.loginStatus && (this.items[3].isShow = !0), t.data.loginStatus && (this.items[4].isShow = !0))
                                }))
                            },
                            tabIndexHandle(t) {
                                if (this.isShowFuli = $utils.isShowFuli(), 2 == t) {
                                    const t = {
                                        androidId: this.$app.$def.android,
                                        brand: this.$app.$def.brand,
                                        oaid: this.$app.$def.oaid,
                                        versionCode: this.$app.$def.versionCode,
                                        versionName: this.$app.$def.versionName
                                    };
                                    $apis.example.login(t).then((t => {
                                        console.log(t.data, "res"), t && 200 === t.code && (this.userInfo = t.data, this.isLogin = t.data.loginStatus, this.$app.$def.isLogin = 1 === t.data.loginStatus, $utils.setStorage("token", t.data.online_token), t.data.loginStatus && (this.items[3].isShow = !0), t.data.loginStatus && (this.items[4].isShow = !0))
                                    }))
                                }
                            },
                            goPrivacy(t) {
                                1 === t ? $utils.routetheUrl("/pagesB/Privacy", {type: 1}) : $utils.routetheUrl("/pagesB/Privacy", {type: 2})
                            },
                            goRevice() {
                                COMMON_REPORT_UTILS.page_click_report("我的页"), $utils.routetheUrl("/pagesA/WelfareNew", {pathUrl: "我的页"}, !1)
                            },
                            goPage(t) {
                                if (3 == t.id) return !!t.isShow && (this.typeShow = 2, this.writeOffShow = !0, !1);
                                if (4 == t.id) return !!t.isShow && (this.typeShow = 1, this.writeOffShow = !0, !1);
                                if (1 == t.id) return this.goPrivacy(1);
                                if (2 == t.id) return this.goPrivacy(2);
                                let e = "";
                                "0" === String(t.id) && (e = "/pagesB/Customer-Service"), $utils.routetheUrl(e)
                            },
                            loginOff() {
                                const t = {androidId: this.$app.$def.android};
                                $apis.user.loginOut(t).then((t => {
                                    t && 200 == t.code && (2 == this.typeShow ? $utils.showToast("退出登陆成功") : $utils.showToast("注销成功"), this.items[3].isShow = !1, this.items[4].isShow = !1, $utils.deleteStorage("token"), $utils.deleteStorage("isLogin"), this.tabIndexHandle(), this.$app.$def.isLogin = !1, this.writeOffShow = !1)
                                }))
                            },
                            goLogin() {
                                if (this.isLogin) return !1;
                                $utils.routetheUrl("/pagesB/Login")
                            }
                        }
                    }
                }, 3241: t => {
                    t.exports = {".ad-image": {width: "100%"}}
                }, 2121: t => {
                    t.exports = {
                        "@KEYFRAMES": {
                            overlayEnter: [{opacity: 0, time: 0}, {opacity: 1, time: 100}],
                            overlayLeave: [{opacity: 1, time: 0}, {opacity: 0, time: 100}],
                            panelenter: [{height: "0px", transform: '{"translateY":"100%"}', time: 0}, {
                                height: "100%",
                                transform: '{"translateY":"0px"}',
                                time: 100
                            }],
                            panelleave: [{height: "100%", transform: '{"translateY":"0px"}', time: 0}, {
                                height: "0px",
                                transform: '{"translateY":"100%"}',
                                time: 100
                            }]
                        },
                        ".overlay-enter": {animationName: "overlayEnter"},
                        ".overlay-leave": {animationName: "overlayLeave"},
                        ".panel-enter": {
                            animationName: "panelenter",
                            animationDuration: "200ms",
                            animationTimingFunction: "ease-in"
                        },
                        ".panel-leave": {height: "0px"}
                    }
                }, 3960: t => {
                    t.exports = {
                        ".feed-ad": {
                            position: "relative",
                            backgroundColor: "rgba(0,0,0,0)",
                            color: "#FF0000",
                            width: "100%",
                            display: "flex",
                            flexDirection: "column",
                            alignItems: "center",
                            justifyContent: "center"
                        }, ".feed-ad-expose": {alignSelf: "center"}
                    }
                }, 9237: t => {
                    t.exports = {
                        "@KEYFRAMES": {Opacity: [{opacity: 0, time: 0}, {opacity: 1, time: 100}]},
                        ".ad-close-timer": {
                            color: "#ffffff",
                            backgroundColor: "#555555",
                            display: "flex",
                            height: "48px",
                            width: "48px",
                            borderRadius: "24px",
                            textAlign: "center"
                        },
                        ".ad-closed-btn-wrap": {
                            opacity: 0,
                            animationName: "Opacity",
                            animationDelay: "50ms",
                            animationDuration: "100ms",
                            animationTimingFunction: "ease-in-out",
                            animationFillMode: "forwards"
                        },
                        ".feed-ad-expose": {alignSelf: "center"},
                        ".int-main": {flexDirection: "column", width: "80%"},
                        ".int-close": {
                            width: "50px",
                            height: "50px",
                            alignSelf: "flex-end",
                            marginBottom: "15px",
                            marginRight: "5px"
                        },
                        ".mask": {
                            position: "fixed",
                            flex: 1,
                            top: "0px",
                            bottom: "0px",
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignContent: "center",
                            alignItems: "center",
                            backgroundColor: "rgba(5,5,5,0.6)"
                        },
                        ".int-content": {borderRadius: "30px"}
                    }
                }, 4419: t => {
                    t.exports = {
                        "@KEYFRAMES": {Opacity: [{opacity: 0, time: 0}, {opacity: 1, time: 100}]},
                        ".ad-closed-btn-wrap": {
                            opacity: 0,
                            animationName: "Opacity",
                            animationDelay: "50ms",
                            animationDuration: "100ms",
                            animationTimingFunction: "ease-in-out",
                            animationFillMode: "forwards"
                        },
                        ".openImgWrap": {
                            opacity: 0,
                            animationName: "Opacity",
                            animationDelay: "50ms",
                            animationDuration: "100ms",
                            animationTimingFunction: "ease-in-out",
                            animationFillMode: "forwards"
                        }
                    }
                }, 4995: t => {
                    t.exports = {}
                }, 1379: t => {
                    t.exports = {
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".bqt-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            textAlign: "center",
                            flexDirection: "column"
                        }
                    }
                }, 4090: t => {
                    t.exports = {}
                }, 8604: t => {
                    t.exports = {}
                }, 353: t => {
                    t.exports = {
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".bqt-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            textAlign: "center",
                            flexDirection: "column"
                        },
                        "@KEYFRAMES": {
                            btnScale: [{
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.9,"scaleY":0.9}', time: 100}],
                            Rise: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 30
                            }, {
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 60
                            }, {transform: '{"scaleX":1.1,"scaleY":1.1}', time: 100}]
                        },
                        ".btnScaleAni": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".before-gif": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            alignSelf: "center"
                        },
                        ".before-gif image": {
                            width: "100%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-gif"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".breathe": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".rise": {
                            animationName: "Rise",
                            animationDuration: "800ms",
                            animationIterationCount: 1,
                            animationDelay: "600ms",
                            animationTimingFunction: "ease-out"
                        }
                    }
                }, 9677: t => {
                    t.exports = {
                        ".ad-count-down": {position: "fixed", height: "58px"},
                        ".ad-count-down .time": {
                            paddingLeft: "20px",
                            paddingRight: "20px",
                            height: "58px",
                            backgroundColor: "rgba(0,0,0,0.5)",
                            borderRadius: "92px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-count-down"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "time"}]
                            }
                        },
                        ".ad-count-down .time text": {
                            color: "#FFFFFF",
                            fontSize: "24px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-count-down"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "time"}, {t: "d"}, {
                                    t: "t",
                                    n: "text"
                                }]
                            }
                        },
                        ".ad-count-down .time .divide": {
                            marginTop: "0px",
                            marginRight: "14px",
                            marginBottom: "0px",
                            marginLeft: "14px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-count-down"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "time"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "divide"
                                }]
                            }
                        }
                    }
                }, 8136: t => {
                    t.exports = {
                        ".add-desktop-button": {
                            backgroundImage: "/assets/pop/pop-img-4.png",
                            backgroundPosition: "center center",
                            backgroundColor: "#ff0000"
                        }
                    }
                }, 1873: t => {
                    t.exports = {
                        ".btn": {
                            height: "86px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#333333",
                            borderRightColor: "#333333",
                            borderBottomColor: "#333333",
                            borderLeftColor: "#333333",
                            paddingTop: "20px",
                            paddingRight: "20px",
                            paddingBottom: "20px",
                            paddingLeft: "20px"
                        },
                        ".adStyle": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            borderRadius: "20px"
                        },
                        ".ad-view-in": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column"
                        },
                        ".ad-view-out": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-native": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            position: "relative"
                        },
                        ".ad-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%",
                            height: "100%"
                        },
                        ".ad-mask": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "8px"
                        },
                        ".ad-mask text": {
                            fontSize: "20px",
                            paddingTop: "2px",
                            paddingRight: "2px",
                            paddingBottom: "2px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            bottom: "4px",
                            right: "16px",
                            borderRadius: "6px",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".ad-mask-normal text": {
                            fontSize: "20px",
                            paddingTop: "0px",
                            paddingRight: "2px",
                            paddingBottom: "0px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "3px",
                            marginRight: "3px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title": {
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "0px",
                            paddingRight: "14px",
                            paddingBottom: "0px",
                            paddingLeft: "14px",
                            backgroundColor: "#ffffff",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            flexDirection: "row",
                            position: "relative"
                        },
                        ".ad-title .ad-title-close": {
                            justifyContent: "flex-end",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-close"}]
                            }
                        },
                        ".ad-title .ad-title-close image": {
                            width: "12px",
                            height: "12px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-close"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title .ad-title-icon": {
                            backgroundColor: "#ffffff",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "2px",
                            paddingRight: "4px",
                            paddingBottom: "2px",
                            paddingLeft: "4px",
                            height: "28px",
                            marginLeft: "10px",
                            borderRadius: "6px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-icon"}]
                            }
                        },
                        ".ad-title .ad-title-icon text": {
                            fontSize: "18px",
                            color: "#B1B1B1",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-title .ad-title-icon image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "6px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        "@KEYFRAMES": {
                            btnScale: [{
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.9,"scaleY":0.9}', time: 100}],
                            Rise: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 30
                            }, {
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 60
                            }, {transform: '{"scaleX":1.1,"scaleY":1.1}', time: 100}]
                        },
                        ".btnScaleAni": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".before-gif": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            alignSelf: "center"
                        },
                        ".before-gif image": {
                            width: "100%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-gif"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".breathe": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".rise": {
                            animationName: "Rise",
                            animationDuration: "800ms",
                            animationIterationCount: 1,
                            animationDelay: "600ms",
                            animationTimingFunction: "ease-out"
                        }
                    }
                }, 1489: t => {
                    t.exports = {
                        ".app-info .ellipsis": {
                            maxWidth: "90px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ellipsis"}]
                            }
                        },
                        ".app-info text": {
                            fontSize: "22px",
                            height: "25px",
                            lineHeight: "25px",
                            overflow: "hidden",
                            color: "#FFFFFF",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        }
                    }
                }, 8105: t => {
                    t.exports = {
                        ".close-ad-pop": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            backgroundColor: "rgba(0,0,0,0.5)",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".close-ad-pop .warp": {
                            backgroundColor: "#ffffff",
                            width: "560px",
                            height: "410px",
                            borderRadius: "15px",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}]
                            }
                        },
                        ".close-ad-pop .warp .back-icon": {
                            height: "34px",
                            width: "34px",
                            position: "absolute",
                            right: "18px",
                            top: "18px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "back-icon"
                                }]
                            }
                        },
                        ".close-ad-pop .warp .content": {
                            flexDirection: "column",
                            paddingLeft: "45px",
                            alignItems: "center",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "content"
                                }]
                            }
                        },
                        ".close-ad-pop .warp .content .item": {
                            width: "100%",
                            lineHeight: "60px",
                            fontFamily: "PingFang SC, PingFang SC-Bold",
                            fontWeight: "700",
                            textAlign: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "content"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "item"}]
                            }
                        },
                        ".close-ad-pop .warp .content .vip": {
                            fontSize: "32px",
                            color: "#ffae21",
                            width: "470px",
                            height: "100px",
                            background: '{"values":[{"type":"linearGradient","directions":["148deg"],"values":["#fff4db 0%","#fefbf5 100%"]}]}',
                            borderRadius: "10px",
                            textAlign: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "content"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "vip"}]
                            }
                        },
                        ".close-ad-pop .warp .content .close": {
                            marginTop: "18px",
                            fontSize: "32px",
                            color: "#ff8c78",
                            width: "470px",
                            height: "100px",
                            background: '{"values":[{"type":"linearGradient","directions":["148deg"],"values":["#f4f4f4 0%","#f9f9f9 100%"]}]}',
                            borderRadius: "10px",
                            textAlign: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "content"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "close"}]
                            }
                        },
                        ".close-ad-pop .warp .content .complaint": {
                            marginTop: "38px",
                            fontSize: "26px",
                            color: "#b3b3b3",
                            width: "470px",
                            textAlign: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "close-ad-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "warp"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "content"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "complaint"}]
                            }
                        }
                    }
                }, 7112: t => {
                    t.exports = {
                        ".last-pop-modal": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            backgroundColor: "rgba(0,0,0,0.4)",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".last-pop-modal .last-pop": {
                            width: "620px",
                            backgroundColor: "#ffffff",
                            flexDirection: "column",
                            paddingTop: "43px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "last-pop"}]
                            }
                        },
                        ".last-pop-modal .last-pop .close-img": {
                            position: "absolute",
                            right: "15px",
                            top: "15px",
                            width: "40px",
                            height: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "close-img"}]
                            }
                        },
                        ".last-pop-modal .last-pop .emptyImg": {
                            width: "448px",
                            height: "321px",
                            marginTop: "0px",
                            marginRight: "auto",
                            marginBottom: "0px",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "emptyImg"}]
                            }
                        },
                        ".last-pop-modal .last-pop .boldTip": {
                            marginTop: "0px",
                            marginRight: "auto",
                            marginBottom: "28px",
                            marginLeft: "auto",
                            fontSize: "32px",
                            color: "#424242",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "boldTip"}]
                            }
                        },
                        ".last-pop-modal .last-pop .tip": {
                            marginTop: "0px",
                            marginRight: "auto",
                            marginBottom: "0px",
                            marginLeft: "auto",
                            fontSize: "28px",
                            color: "#868686",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "tip"}]
                            }
                        },
                        ".last-pop-modal .last-pop .handlerBox": {
                            width: "100%",
                            height: "100px",
                            marginTop: "175px",
                            borderTopWidth: "1px",
                            borderTopStyle: "solid",
                            borderTopColor: "#DFDFDF",
                            justifyContent: "center",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "handlerBox"}]
                            }
                        },
                        ".last-pop-modal .last-pop .handlerBox div": {
                            width: "50%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "handlerBox"
                                }, {t: "d"}, {t: "t", n: "div"}]
                            }
                        },
                        ".last-pop-modal .last-pop .handlerBox .continue": {
                            borderRightWidth: "1px",
                            borderRightStyle: "solid",
                            borderRightColor: "#DFDFDF",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "last-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "handlerBox"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "continue"}]
                            }
                        }
                    }
                }, 3116: t => {
                    t.exports = {
                        ".prompt-pop-modal": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            backgroundColor: "rgba(0,0,0,0.4)",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".prompt-pop-modal .prompt-pop": {
                            width: "650px",
                            backgroundColor: "#ffffff",
                            borderRadius: "30px",
                            flexDirection: "column",
                            paddingTop: "34px",
                            paddingBottom: "38px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "prompt-pop"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-header": {
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "prompt-pop-header"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-header .text-header": {
                            fontSize: "34px",
                            fontFamily: "Source Han Sans CN, Source Han Sans CN-Bold",
                            fontWeight: "700",
                            textAlign: "center",
                            color: "#000000",
                            lineHeight: "32px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-header"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "text-header"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .close-img": {
                            position: "absolute",
                            right: "27px",
                            top: "25px",
                            width: "26px",
                            height: "26px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "close-img"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main": {
                            flexDirection: "column",
                            paddingLeft: "20px",
                            marginTop: "42px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "prompt-pop-main"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .call-box": {
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "call-box"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .call-box .call-title": {
                            fontSize: "34px",
                            fontWeight: "700",
                            color: "#000000",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "call-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "call-title"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .call-box .num-box": {
                            marginTop: "24px",
                            marginRight: "0px",
                            marginBottom: "24px",
                            marginLeft: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "call-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "num-box"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .call-box .num-box .call-num": {
                            fontSize: "36px",
                            fontWeight: "700",
                            color: "#000000",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "call-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "num-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "call-num"
                                }]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .call-box .num-box .call-text": {
                            fontSize: "36px",
                            fontWeight: "700",
                            color: "#1e90ff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "call-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "num-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "call-text"
                                }]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-item-header": {
                            fontSize: "34px",
                            fontFamily: "Source Han Sans CN, Source Han Sans CN-Bold",
                            fontWeight: "700",
                            color: "#000000",
                            lineHeight: "32px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "prompt-item-header"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-box": {
                            flexWrap: "wrap",
                            flexDirection: "row",
                            justifyContent: "flex-start",
                            marginTop: "48px",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "prompt-box"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-box .select-item-box": {
                            marginRight: "60px",
                            marginBottom: "42px",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "select-item-box"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-box .select-item-box > image": {
                            width: "32px",
                            height: "32px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "select-item-box"
                                }, {t: "child"}, {t: "t", n: "image"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-box .select-item-box > text": {
                            fontSize: "28px",
                            fontFamily: "PingFang SC, PingFang SC-Medium",
                            fontWeight: "500",
                            textAlign: "center",
                            color: "#000000",
                            marginLeft: "12px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "select-item-box"
                                }, {t: "child"}, {t: "t", n: "text"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-box .m-r-0": {
                            marginRight: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "m-r-0"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item": {
                            justifyContent: "center",
                            alignContent: "center",
                            flexDirection: "column",
                            width: "100%",
                            marginTop: "20px",
                            paddingRight: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "prompt-form-item"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .form-item-title": {
                            height: "36px",
                            fontSize: "34px",
                            fontWeight: "900",
                            color: "#333333",
                            marginTop: "10px",
                            marginRight: "0px",
                            marginBottom: "10px",
                            marginLeft: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "form-item-title"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .form-item-content": {
                            flexWrap: "wrap",
                            alignItems: "center",
                            justifyContent: "space-between",
                            width: "100%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "form-item-content"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .select-item": {
                            height: "40px",
                            width: "30%",
                            textAlign: "center",
                            marginBottom: "10px",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "select-item"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .select-item-active": {
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#1e90ff",
                            borderRightColor: "#1e90ff",
                            borderBottomColor: "#1e90ff",
                            borderLeftColor: "#1e90ff",
                            color: "#1e90ff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "select-item-active"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .compaintContent": {
                            color: "#000000",
                            fontSize: "28px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "400",
                            textAlign: "left",
                            marginTop: "30px",
                            width: "100%",
                            height: "276px",
                            paddingTop: "21px",
                            paddingRight: "33px",
                            paddingBottom: "21px",
                            paddingLeft: "33px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "compaintContent"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .inputBorder": {
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#e3e3e3",
                            borderRightColor: "#e3e3e3",
                            borderBottomColor: "#e3e3e3",
                            borderLeftColor: "#e3e3e3",
                            borderRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "inputBorder"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .prompt-pop-main .prompt-form-item .compaintContentLength": {
                            width: "100%",
                            justifyContent: "flex-end",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-main"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-form-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "compaintContentLength"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .btn-box": {
                            flexDirection: "row",
                            justifyContent: "space-between",
                            paddingRight: "20px",
                            marginTop: "32px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "btn-box"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .btn-box .sure-btn": {
                            borderRadius: "10px",
                            justifyContent: "center",
                            height: "80px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "btn-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "sure-btn"
                                }]
                            },
                            backgroundColor: "#4263eb",
                            width: "48%"
                        },
                        ".prompt-pop-modal .prompt-pop .btn-box .cancael-btn": {
                            backgroundColor: "#f6f6f6",
                            width: "48%",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "btn-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "cancael-btn"
                                }]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .btn-box .cancael-btn > text": {
                            color: "#333333",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "btn-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "cancael-btn"
                                }, {t: "child"}, {t: "t", n: "text"}]
                            }
                        },
                        ".prompt-pop-modal .prompt-pop .btn-box .sure-btn > text": {
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "btn-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "sure-btn"
                                }, {t: "child"}, {t: "t", n: "text"}]
                            }
                        }
                    }
                }, 4328: t => {
                    t.exports = {}
                }, 230: t => {
                    t.exports = {
                        ".marquee-box": {
                            width: "90%",
                            height: "52px",
                            top: "84px",
                            position: "fixed",
                            backgroundColor: "#ffffff",
                            left: "40px",
                            borderRadius: "40px"
                        },
                        ".marquee-box .run-box": {
                            width: "20%",
                            display: "flex",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "run-box"}]
                            }
                        },
                        ".marquee-box .run-box image": {
                            width: "16px",
                            height: "27px",
                            objectFit: "fill",
                            marginTop: "0px",
                            marginRight: "10px",
                            marginBottom: "0px",
                            marginLeft: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "run-box"}, {t: "d"}, {
                                    t: "t",
                                    n: "image"
                                }]
                            }
                        },
                        ".marquee-box .run-box text": {
                            color: "#333333",
                            fontSize: "24px",
                            opacity: .7,
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "run-box"}, {t: "d"}, {
                                    t: "t",
                                    n: "text"
                                }]
                            }
                        },
                        ".marquee-box .run-box-right": {
                            width: "75%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "run-box-right"}]
                            }
                        },
                        ".marquee-box .run-box-right .run-content": {
                            width: "100%",
                            display: "flex",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "run-box-right"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "run-content"}]
                            }
                        },
                        ".marquee-box .run-box-right .run-content image": {
                            width: "36px",
                            height: "36px",
                            objectFit: "fill",
                            marginTop: "0px",
                            marginRight: "10px",
                            marginBottom: "0px",
                            marginLeft: "30px",
                            borderRadius: "50%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "run-box-right"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "run-content"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".marquee-box .run-box-right .run-content text": {
                            display: "flex",
                            alignItems: "center",
                            color: "#931a1a",
                            fontSize: "24px",
                            opacity: .7,
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "marquee-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "run-box-right"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "run-content"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        }
                    }
                }, 5893: t => {
                    t.exports = {}
                }, 2128: t => {
                    t.exports = {}
                }, 2801: t => {
                    t.exports = {
                        ".btn": {
                            height: "86px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#333333",
                            borderRightColor: "#333333",
                            borderBottomColor: "#333333",
                            borderLeftColor: "#333333",
                            paddingTop: "20px",
                            paddingRight: "20px",
                            paddingBottom: "20px",
                            paddingLeft: "20px"
                        },
                        ".adStyle": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            borderRadius: "20px"
                        },
                        ".ad-view-out-middle": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-view-in": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column"
                        },
                        ".ad-view-out": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-native": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            position: "relative"
                        },
                        ".oppo-ad-native": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%"
                        },
                        ".skip-btn-mask": {position: "fixed", height: "58px", width: "163px"},
                        ".ad-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%",
                            height: "100%"
                        },
                        ".ad-mask": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "8px"
                        },
                        ".ad-mask text": {
                            fontSize: "20px",
                            paddingTop: "2px",
                            paddingRight: "2px",
                            paddingBottom: "2px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            bottom: "4px",
                            right: "16px",
                            borderRadius: "6px",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".ad-mask-normal text": {
                            fontSize: "20px",
                            paddingTop: "0px",
                            paddingRight: "2px",
                            paddingBottom: "0px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "3px",
                            marginRight: "3px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title": {
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "0px",
                            paddingRight: "14px",
                            paddingBottom: "0px",
                            paddingLeft: "14px",
                            backgroundColor: "#ffffff",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            flexDirection: "row",
                            position: "relative"
                        },
                        ".ad-title .ad-title-close": {
                            justifyContent: "flex-end",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-close"}]
                            }
                        },
                        ".ad-title .ad-title-close image": {
                            width: "30px",
                            height: "30px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-close"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title .ad-title-icon": {
                            backgroundColor: "#ffffff",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "2px",
                            paddingRight: "4px",
                            paddingBottom: "2px",
                            paddingLeft: "4px",
                            height: "28px",
                            marginLeft: "10px",
                            borderRadius: "6px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-icon"}]
                            }
                        },
                        ".ad-title .ad-title-icon text": {
                            fontSize: "18px",
                            color: "#B1B1B1",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-title .ad-title-icon image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "6px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        "@KEYFRAMES": {
                            btnScale: [{
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.9,"scaleY":0.9}', time: 100}],
                            Rise: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 30
                            }, {
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 60
                            }, {transform: '{"scaleX":1.1,"scaleY":1.1}', time: 100}]
                        },
                        ".btnScaleAni": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".middle-clear-ad-tag": {
                            width: "136px",
                            height: "44px",
                            borderRadius: "22px",
                            backgroundColor: "rgba(0,0,0,0.3)",
                            fontSize: "28px",
                            color: "#FFFFFF",
                            textAlign: "center",
                            lineHeight: "42px",
                            position: "absolute",
                            top: "10px",
                            right: "10px",
                            paddingRight: "20px"
                        },
                        ".graph": {
                            position: "absolute",
                            top: "18px",
                            right: "14px",
                            height: "30px",
                            width: "30px",
                            color: "#FFFFFF"
                        },
                        ".middle-ad-tag": {
                            width: "40px",
                            height: "24px",
                            backgroundColor: "rgba(0,0,0,0.08)",
                            borderRadius: "4px",
                            fontSize: "16px",
                            color: "rgba(255,255,255,0.65)",
                            textAlign: "center",
                            lineHeight: "24px",
                            position: "absolute",
                            top: "16px",
                            left: "16px"
                        },
                        ".middle-ad-icon": {
                            width: "44px",
                            height: "44px",
                            borderRadius: "6px",
                            position: "absolute",
                            bottom: "20px",
                            right: "20px",
                            objectFit: "fill"
                        },
                        ".before-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            alignSelf: "center"
                        },
                        ".before-gif .gif-img": {
                            width: "100%",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".before-jump-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".before-jump-gif .gif-img": {
                            width: "100%",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-jump-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".breathe": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".rise": {
                            animationName: "Rise",
                            animationDuration: "800ms",
                            animationIterationCount: 1,
                            animationDelay: "600ms",
                            animationTimingFunction: "ease-out"
                        },
                        ".pop-background": {background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(255,255,255,0) 0%","#ffffff 50%"]}]}'},
                        ".shake-warp": {
                            position: "fixed",
                            display: "flex",
                            width: "100%",
                            left: "0px",
                            bottom: "200px"
                        },
                        ".redpacket": {position: "fixed", display: "flex", width: "100%", left: "0px", bottom: "190px"},
                        ".shake-warp image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "shake-warp"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".redpacket image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "redpacket"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".lottie-coin": {
                            position: "fixed",
                            flexDirection: "column",
                            alignItems: "center",
                            width: "100%",
                            height: "100%"
                        },
                        ".full-touch": {position: "absolute", height: "100%", width: "100%", left: "0px", top: "0px"},
                        ".app-info-warp": {
                            position: "absolute",
                            left: "0px",
                            bottom: "0px",
                            paddingLeft: "12px",
                            height: "30px",
                            width: "100%",
                            background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(0,0,0,0) 0%","rgba(0,0,0,0.33) 50%"]}]}'
                        },
                        ".app-info-warp .ellipsis": {
                            maxWidth: "80px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ellipsis"}]
                            }
                        },
                        ".app-info-warp text": {
                            fontSize: "22px",
                            height: "25px",
                            lineHeight: "25px",
                            overflow: "hidden",
                            color: "#FFFFFF",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-area": {position: "fixed", top: "200px", right: "0px"},
                        ".ad-area-box": {
                            position: "fixed",
                            left: "0px",
                            top: "0px",
                            width: "400px",
                            height: "200px",
                            backgroundColor: "#FF0000",
                            opacity: .7
                        },
                        ".area-img": {borderRadius: "50%"},
                        ".full-touch-btn1": {
                            position: "absolute",
                            height: "500px",
                            width: "750px",
                            left: "0px",
                            top: "0px",
                            transform: '{"scaleY":50,"scaleX":2,"translateY":"800px"}',
                            transformOrigin: "380px 315px",
                            backgroundColor: "rgba(0,0,0,0)"
                        },
                        ".btn-style": {opacity: 0, backgroundColor: "rgba(0,0,0,0)"},
                        ".border1": {
                            position: "absolute",
                            width: "1px",
                            height: "100%",
                            top: "0px",
                            left: "380px",
                            backgroundColor: "#FF0000"
                        },
                        ".border2": {
                            position: "absolute",
                            width: "100%",
                            height: "1px",
                            top: "315px",
                            left: "0px",
                            backgroundColor: "#FFFF00"
                        }
                    }
                }, 886: t => {
                    t.exports = {
                        ".btn": {
                            height: "86px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#333333",
                            borderRightColor: "#333333",
                            borderBottomColor: "#333333",
                            borderLeftColor: "#333333",
                            paddingTop: "20px",
                            paddingRight: "20px",
                            paddingBottom: "20px",
                            paddingLeft: "20px"
                        },
                        ".adStyle": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            borderRadius: "20px"
                        },
                        ".ad-view-out-middle": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-view-in": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column"
                        },
                        ".ad-view-out": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-native": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            position: "relative"
                        },
                        ".oppo-ad-native": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%"
                        },
                        ".skip-btn-mask": {position: "fixed", height: "58px", width: "163px"},
                        ".ad-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%",
                            height: "100%"
                        },
                        ".ad-mask": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "8px"
                        },
                        ".ad-mask text": {
                            fontSize: "20px",
                            paddingTop: "2px",
                            paddingRight: "2px",
                            paddingBottom: "2px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            bottom: "4px",
                            right: "16px",
                            borderRadius: "6px",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".ad-mask-normal text": {
                            fontSize: "20px",
                            paddingTop: "0px",
                            paddingRight: "2px",
                            paddingBottom: "0px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "3px",
                            marginRight: "3px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title": {
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "0px",
                            paddingRight: "14px",
                            paddingBottom: "0px",
                            paddingLeft: "14px",
                            backgroundColor: "#ffffff",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            flexDirection: "row",
                            position: "relative"
                        },
                        ".ad-title .ad-title-close": {
                            justifyContent: "flex-end",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-close"}]
                            }
                        },
                        ".ad-title .ad-title-close image": {
                            width: "30px",
                            height: "30px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-close"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title .ad-title-icon": {
                            backgroundColor: "#ffffff",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "2px",
                            paddingRight: "4px",
                            paddingBottom: "2px",
                            paddingLeft: "4px",
                            height: "28px",
                            marginLeft: "10px",
                            borderRadius: "6px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-icon"}]
                            }
                        },
                        ".ad-title .ad-title-icon text": {
                            fontSize: "18px",
                            color: "#B1B1B1",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-title .ad-title-icon image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "6px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        "@KEYFRAMES": {
                            btnScale: [{
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.9,"scaleY":0.9}', time: 100}],
                            Rise: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 30
                            }, {
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 60
                            }, {transform: '{"scaleX":1.1,"scaleY":1.1}', time: 100}]
                        },
                        ".btnScaleAni": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".middle-clear-ad-tag": {
                            width: "136px",
                            height: "44px",
                            borderRadius: "22px",
                            backgroundColor: "rgba(0,0,0,0.3)",
                            fontSize: "28px",
                            color: "#FFFFFF",
                            textAlign: "center",
                            lineHeight: "42px",
                            position: "absolute",
                            top: "10px",
                            right: "10px",
                            paddingRight: "20px"
                        },
                        ".graph": {
                            position: "absolute",
                            top: "18px",
                            right: "14px",
                            height: "30px",
                            width: "30px",
                            color: "#FFFFFF"
                        },
                        ".middle-ad-tag": {
                            width: "40px",
                            height: "24px",
                            backgroundColor: "rgba(0,0,0,0.08)",
                            borderRadius: "4px",
                            fontSize: "16px",
                            color: "rgba(255,255,255,0.65)",
                            textAlign: "center",
                            lineHeight: "24px",
                            position: "absolute",
                            top: "16px",
                            left: "16px"
                        },
                        ".middle-ad-icon": {
                            width: "44px",
                            height: "44px",
                            borderRadius: "6px",
                            position: "absolute",
                            bottom: "20px",
                            right: "20px",
                            objectFit: "fill"
                        },
                        ".before-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            alignSelf: "center"
                        },
                        ".before-gif .gif-img": {
                            width: "100%",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".before-jump-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".before-jump-gif .gif-img": {
                            width: "100%",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-jump-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".breathe": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".rise": {
                            animationName: "Rise",
                            animationDuration: "800ms",
                            animationIterationCount: 1,
                            animationDelay: "600ms",
                            animationTimingFunction: "ease-out"
                        },
                        ".pop-background": {background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(255,255,255,0) 0%","#ffffff 50%"]}]}'},
                        ".shake-warp": {
                            position: "fixed",
                            display: "flex",
                            width: "100%",
                            left: "0px",
                            bottom: "200px"
                        },
                        ".redpacket": {position: "fixed", display: "flex", width: "100%", left: "0px", bottom: "190px"},
                        ".shake-warp image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "shake-warp"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".redpacket image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "redpacket"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".lottie-coin": {
                            position: "fixed",
                            flexDirection: "column",
                            alignItems: "center",
                            width: "100%",
                            height: "100%"
                        },
                        ".full-touch": {position: "absolute", height: "100%", width: "100%", left: "0px", top: "0px"},
                        ".app-info-warp": {
                            position: "absolute",
                            left: "0px",
                            bottom: "0px",
                            paddingLeft: "12px",
                            height: "30px",
                            width: "100%",
                            background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(0,0,0,0) 0%","rgba(0,0,0,0.33) 50%"]}]}'
                        },
                        ".app-info-warp .ellipsis": {
                            maxWidth: "80px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ellipsis"}]
                            }
                        },
                        ".app-info-warp text": {
                            fontSize: "22px",
                            height: "25px",
                            lineHeight: "25px",
                            overflow: "hidden",
                            color: "#FFFFFF",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-area": {position: "fixed", top: "200px", right: "0px"},
                        ".ad-area-box": {
                            position: "fixed",
                            left: "0px",
                            top: "0px",
                            width: "400px",
                            height: "200px",
                            backgroundColor: "#FF0000",
                            opacity: .7
                        },
                        ".area-img": {borderRadius: "50%"},
                        ".full-touch-btn1": {
                            position: "absolute",
                            height: "500px",
                            width: "750px",
                            left: "0px",
                            top: "0px",
                            transform: '{"scaleY":50,"scaleX":2,"translateY":"800px"}',
                            transformOrigin: "380px 315px",
                            backgroundColor: "rgba(0,0,0,0)"
                        },
                        ".btn-style": {opacity: 0, backgroundColor: "rgba(0,0,0,0)"},
                        ".border1": {
                            position: "absolute",
                            width: "1px",
                            height: "100%",
                            top: "0px",
                            left: "380px",
                            backgroundColor: "#FF0000"
                        },
                        ".border2": {
                            position: "absolute",
                            width: "100%",
                            height: "1px",
                            top: "315px",
                            left: "0px",
                            backgroundColor: "#FFFF00"
                        }
                    }
                }, 3066: t => {
                    t.exports = {
                        ".btn": {
                            height: "86px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#333333",
                            borderRightColor: "#333333",
                            borderBottomColor: "#333333",
                            borderLeftColor: "#333333",
                            paddingTop: "20px",
                            paddingRight: "20px",
                            paddingBottom: "20px",
                            paddingLeft: "20px"
                        },
                        ".adStyle": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            borderRadius: "20px"
                        },
                        ".ad-view-out-middle": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-view-in": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column"
                        },
                        ".ad-view-out": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-native": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            position: "relative"
                        },
                        ".oppo-ad-native": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%"
                        },
                        ".skip-btn-mask": {position: "fixed", height: "58px", width: "163px"},
                        ".ad-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%",
                            height: "100%"
                        },
                        ".ad-mask": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "8px"
                        },
                        ".ad-mask text": {
                            fontSize: "20px",
                            paddingTop: "2px",
                            paddingRight: "2px",
                            paddingBottom: "2px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            bottom: "4px",
                            right: "16px",
                            borderRadius: "6px",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".ad-mask-normal text": {
                            fontSize: "20px",
                            paddingTop: "0px",
                            paddingRight: "2px",
                            paddingBottom: "0px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "3px",
                            marginRight: "3px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title": {
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "0px",
                            paddingRight: "14px",
                            paddingBottom: "0px",
                            paddingLeft: "14px",
                            backgroundColor: "#ffffff",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            flexDirection: "row",
                            position: "relative"
                        },
                        ".ad-title .ad-title-close": {
                            justifyContent: "flex-end",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-close"}]
                            }
                        },
                        ".ad-title .ad-title-close image": {
                            width: "30px",
                            height: "30px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-close"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title .ad-title-icon": {
                            backgroundColor: "#ffffff",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "2px",
                            paddingRight: "4px",
                            paddingBottom: "2px",
                            paddingLeft: "4px",
                            height: "28px",
                            marginLeft: "10px",
                            borderRadius: "6px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-icon"}]
                            }
                        },
                        ".ad-title .ad-title-icon text": {
                            fontSize: "18px",
                            color: "#B1B1B1",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-title .ad-title-icon image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "6px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        "@KEYFRAMES": {
                            btnScale: [{
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.9,"scaleY":0.9}', time: 100}],
                            Rise: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 30
                            }, {
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 60
                            }, {transform: '{"scaleX":1.1,"scaleY":1.1}', time: 100}]
                        },
                        ".btnScaleAni": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".middle-clear-ad-tag": {
                            width: "136px",
                            height: "44px",
                            borderRadius: "22px",
                            backgroundColor: "rgba(0,0,0,0.3)",
                            fontSize: "28px",
                            color: "#FFFFFF",
                            textAlign: "center",
                            lineHeight: "42px",
                            position: "absolute",
                            top: "10px",
                            right: "10px",
                            paddingRight: "20px"
                        },
                        ".graph": {
                            position: "absolute",
                            top: "18px",
                            right: "14px",
                            height: "30px",
                            width: "30px",
                            color: "#FFFFFF"
                        },
                        ".middle-ad-tag": {
                            width: "40px",
                            height: "24px",
                            backgroundColor: "rgba(0,0,0,0.08)",
                            borderRadius: "4px",
                            fontSize: "16px",
                            color: "rgba(255,255,255,0.65)",
                            textAlign: "center",
                            lineHeight: "24px",
                            position: "absolute",
                            top: "16px",
                            left: "16px"
                        },
                        ".middle-ad-icon": {
                            width: "44px",
                            height: "44px",
                            borderRadius: "6px",
                            position: "absolute",
                            bottom: "20px",
                            right: "20px",
                            objectFit: "fill"
                        },
                        ".before-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            alignSelf: "center"
                        },
                        ".before-gif .gif-img": {
                            width: "100%",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".before-jump-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".before-jump-gif .gif-img": {
                            width: "100%",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-jump-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".breathe": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".rise": {
                            animationName: "Rise",
                            animationDuration: "800ms",
                            animationIterationCount: 1,
                            animationDelay: "600ms",
                            animationTimingFunction: "ease-out"
                        },
                        ".pop-background": {background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(255,255,255,0) 0%","#ffffff 50%"]}]}'},
                        ".shake-warp": {
                            position: "fixed",
                            display: "flex",
                            width: "100%",
                            left: "0px",
                            bottom: "200px"
                        },
                        ".redpacket": {position: "fixed", display: "flex", width: "100%", left: "0px", bottom: "190px"},
                        ".shake-warp image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "shake-warp"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".redpacket image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "redpacket"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".lottie-coin": {
                            position: "fixed",
                            flexDirection: "column",
                            alignItems: "center",
                            width: "100%",
                            height: "100%"
                        },
                        ".full-touch": {position: "absolute", height: "100%", width: "100%", left: "0px", top: "0px"},
                        ".app-info-warp": {
                            position: "absolute",
                            left: "0px",
                            bottom: "0px",
                            paddingLeft: "12px",
                            height: "30px",
                            width: "100%",
                            background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(0,0,0,0) 0%","rgba(0,0,0,0.33) 50%"]}]}'
                        },
                        ".app-info-warp .ellipsis": {
                            maxWidth: "80px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ellipsis"}]
                            }
                        },
                        ".app-info-warp text": {
                            fontSize: "22px",
                            height: "25px",
                            lineHeight: "25px",
                            overflow: "hidden",
                            color: "#FFFFFF",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-area": {position: "fixed", top: "200px", right: "0px"},
                        ".ad-area-box": {
                            position: "fixed",
                            left: "0px",
                            top: "0px",
                            width: "400px",
                            height: "200px",
                            backgroundColor: "#FF0000",
                            opacity: .7
                        },
                        ".area-img": {borderRadius: "50%"},
                        ".full-touch-btn1": {
                            position: "absolute",
                            height: "500px",
                            width: "750px",
                            left: "0px",
                            top: "0px",
                            transform: '{"scaleY":50,"scaleX":2,"translateY":"800px"}',
                            transformOrigin: "380px 315px",
                            backgroundColor: "rgba(0,0,0,0)"
                        },
                        ".btn-style": {opacity: 0, backgroundColor: "rgba(0,0,0,0)"},
                        ".border1": {
                            position: "absolute",
                            width: "1px",
                            height: "100%",
                            top: "0px",
                            left: "380px",
                            backgroundColor: "#FF0000"
                        },
                        ".border2": {
                            position: "absolute",
                            width: "100%",
                            height: "1px",
                            top: "315px",
                            left: "0px",
                            backgroundColor: "#FFFF00"
                        }
                    }
                }, 1577: t => {
                    t.exports = {
                        ".btn": {
                            height: "86px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#333333",
                            borderRightColor: "#333333",
                            borderBottomColor: "#333333",
                            borderLeftColor: "#333333",
                            paddingTop: "20px",
                            paddingRight: "20px",
                            paddingBottom: "20px",
                            paddingLeft: "20px"
                        },
                        ".adStyle": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            borderRadius: "20px"
                        },
                        ".ad-view-out-middle": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-view-in": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column"
                        },
                        ".ad-view-out": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            top: "0px",
                            height: "100%",
                            width: "100%",
                            right: "0px"
                        },
                        ".ad-native": {
                            width: "100%",
                            height: "100%",
                            justifyContent: "center",
                            alignItems: "center",
                            position: "relative"
                        },
                        ".oppo-ad-native": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%"
                        },
                        ".skip-btn-mask": {position: "fixed", height: "58px", width: "163px"},
                        ".ad-content": {
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            width: "100%",
                            height: "100%"
                        },
                        ".ad-mask": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "8px"
                        },
                        ".ad-mask text": {
                            fontSize: "20px",
                            paddingTop: "2px",
                            paddingRight: "2px",
                            paddingBottom: "2px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal": {
                            backgroundColor: "#808080",
                            opacity: .5,
                            position: "absolute",
                            bottom: "4px",
                            right: "16px",
                            borderRadius: "6px",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".ad-mask-normal text": {
                            fontSize: "20px",
                            paddingTop: "0px",
                            paddingRight: "2px",
                            paddingBottom: "0px",
                            paddingLeft: "2px",
                            color: "#ffffff",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-mask-normal image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "3px",
                            marginRight: "3px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-mask-normal"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title": {
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "0px",
                            paddingRight: "14px",
                            paddingBottom: "0px",
                            paddingLeft: "14px",
                            backgroundColor: "#ffffff",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            flexDirection: "row",
                            position: "relative"
                        },
                        ".ad-title .ad-title-close": {
                            justifyContent: "flex-end",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-close"}]
                            }
                        },
                        ".ad-title .ad-title-close image": {
                            width: "30px",
                            height: "30px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-close"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".ad-title .ad-title-icon": {
                            backgroundColor: "#ffffff",
                            textAlign: "center",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingTop: "2px",
                            paddingRight: "4px",
                            paddingBottom: "2px",
                            paddingLeft: "4px",
                            height: "28px",
                            marginLeft: "10px",
                            borderRadius: "6px",
                            borderTopWidth: "1px",
                            borderRightWidth: "1px",
                            borderBottomWidth: "1px",
                            borderLeftWidth: "1px",
                            borderStyle: "solid",
                            borderTopColor: "#E6E6E6",
                            borderRightColor: "#E6E6E6",
                            borderBottomColor: "#E6E6E6",
                            borderLeftColor: "#E6E6E6",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ad-title-icon"}]
                            }
                        },
                        ".ad-title .ad-title-icon text": {
                            fontSize: "18px",
                            color: "#B1B1B1",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-title .ad-title-icon image": {
                            width: "12px",
                            height: "12px",
                            marginLeft: "6px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "ad-title-icon"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        "@KEYFRAMES": {
                            btnScale: [{
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.9,"scaleY":0.9}', time: 100}],
                            Rise: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1}',
                                time: 30
                            }, {
                                transform: '{"scaleX":0.9,"scaleY":0.9}',
                                time: 60
                            }, {transform: '{"scaleX":1.1,"scaleY":1.1}', time: 100}]
                        },
                        ".btnScaleAni": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".mask": {
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".back-close-icon": {
                            width: "58px",
                            height: "58px",
                            position: "fixed",
                            left: "24px",
                            top: "158px",
                            objectFit: "fill"
                        },
                        ".middle-clear-ad-tag": {
                            width: "136px",
                            height: "44px",
                            borderRadius: "22px",
                            backgroundColor: "rgba(0,0,0,0.3)",
                            fontSize: "28px",
                            color: "#FFFFFF",
                            textAlign: "center",
                            lineHeight: "42px",
                            position: "absolute",
                            top: "10px",
                            right: "10px",
                            paddingRight: "20px"
                        },
                        ".graph": {
                            position: "absolute",
                            top: "18px",
                            right: "14px",
                            height: "30px",
                            width: "30px",
                            color: "#FFFFFF"
                        },
                        ".middle-ad-tag": {
                            width: "40px",
                            height: "24px",
                            backgroundColor: "rgba(0,0,0,0.08)",
                            borderRadius: "4px",
                            fontSize: "16px",
                            color: "rgba(255,255,255,0.65)",
                            textAlign: "center",
                            lineHeight: "24px",
                            position: "absolute",
                            top: "16px",
                            left: "16px"
                        },
                        ".middle-ad-icon": {
                            width: "44px",
                            height: "44px",
                            borderRadius: "6px",
                            position: "absolute",
                            bottom: "20px",
                            right: "20px",
                            objectFit: "fill"
                        },
                        ".before-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            alignSelf: "center"
                        },
                        ".before-gif .gif-img": {
                            width: "100%",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".before-jump-gif": {
                            position: "absolute",
                            width: "100%",
                            height: "100%",
                            flexDirection: "column"
                        },
                        ".before-jump-gif .gif-img": {
                            width: "100%",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "before-jump-gif"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "gif-img"}]
                            }
                        },
                        ".breathe": {
                            animationName: "btnScale",
                            animationDuration: "800ms",
                            animationIterationCount: -1
                        },
                        ".rise": {
                            animationName: "Rise",
                            animationDuration: "800ms",
                            animationIterationCount: 1,
                            animationDelay: "600ms",
                            animationTimingFunction: "ease-out"
                        },
                        ".pop-background": {background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(255,255,255,0) 0%","#ffffff 50%"]}]}'},
                        ".shake-warp": {
                            position: "fixed",
                            display: "flex",
                            width: "100%",
                            left: "0px",
                            bottom: "200px"
                        },
                        ".redpacket": {position: "fixed", display: "flex", width: "100%", left: "0px", bottom: "190px"},
                        ".shake-warp image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "shake-warp"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".redpacket image": {
                            marginTop: "auto",
                            marginRight: "auto",
                            marginBottom: "auto",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "redpacket"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".lottie-coin": {
                            position: "fixed",
                            flexDirection: "column",
                            alignItems: "center",
                            width: "100%",
                            height: "100%"
                        },
                        ".full-touch": {position: "absolute", height: "100%", width: "100%", left: "0px", top: "0px"},
                        ".app-info-warp": {
                            position: "absolute",
                            left: "0px",
                            bottom: "0px",
                            paddingLeft: "12px",
                            height: "30px",
                            width: "100%",
                            background: '{"values":[{"type":"linearGradient","directions":["180deg"],"values":["rgba(0,0,0,0) 0%","rgba(0,0,0,0.33) 50%"]}]}'
                        },
                        ".app-info-warp .ellipsis": {
                            maxWidth: "80px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "ellipsis"}]
                            }
                        },
                        ".app-info-warp text": {
                            fontSize: "22px",
                            height: "25px",
                            lineHeight: "25px",
                            overflow: "hidden",
                            color: "#FFFFFF",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "app-info-warp"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".ad-area": {position: "fixed", top: "200px", right: "0px"},
                        ".ad-area-box": {
                            position: "fixed",
                            left: "0px",
                            top: "0px",
                            width: "400px",
                            height: "200px",
                            backgroundColor: "#FF0000",
                            opacity: .7
                        },
                        ".area-img": {borderRadius: "50%"},
                        ".full-touch-btn1": {
                            position: "absolute",
                            height: "500px",
                            width: "750px",
                            left: "0px",
                            top: "0px",
                            transform: '{"scaleY":50,"scaleX":2,"translateY":"800px"}',
                            transformOrigin: "380px 315px",
                            backgroundColor: "rgba(0,0,0,0)"
                        },
                        ".btn-style": {opacity: 0, backgroundColor: "rgba(0,0,0,0)"},
                        ".border1": {
                            position: "absolute",
                            width: "1px",
                            height: "100%",
                            top: "0px",
                            left: "380px",
                            backgroundColor: "#FF0000"
                        },
                        ".border2": {
                            position: "absolute",
                            width: "100%",
                            height: "1px",
                            top: "315px",
                            left: "0px",
                            backgroundColor: "#FFFF00"
                        }
                    }
                }, 4500: t => {
                    t.exports = {
                        ".skeleton-pop": {
                            backgroundColor: "rgba(128,128,128,0.5)",
                            justifyContent: "center",
                            alignItems: "center",
                            flexDirection: "column",
                            position: "fixed",
                            width: "100%",
                            right: "0px",
                            bottom: "0px",
                            height: "100%"
                        }
                    }
                }, 3273: t => {
                    t.exports = {
                        ".common-back-header-wrapper .common-back-header": {
                            width: "750px",
                            flexDirection: "row",
                            paddingTop: "0px",
                            paddingRight: "20px",
                            paddingBottom: "0px",
                            paddingLeft: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "common-back-header"}]
                            }
                        },
                        ".common-back-header-wrapper .common-back-header .common-back-icon": {
                            width: "36px",
                            height: "88px",
                            paddingTop: "29px",
                            paddingRight: "20px",
                            paddingBottom: "29px",
                            paddingLeft: "0px",
                            objectFit: "fill",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "common-back-icon"}]
                            }
                        },
                        ".common-back-header-wrapper .common-back-header .common-title": {
                            fontSize: "34px",
                            fontWeight: "bold",
                            textAlign: "center",
                            flex: 1,
                            paddingRight: "68px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "common-title"}]
                            }
                        },
                        ".common-back-icon-qd": {
                            flexDirection: "column",
                            height: "88px",
                            paddingTop: "20px",
                            paddingRight: "0px",
                            paddingBottom: "20px",
                            paddingLeft: "25px",
                            alignContent: "center",
                            textAlign: "center",
                            justifyContent: "center"
                        },
                        ".common-back-icon-qd image": {
                            width: "42px",
                            height: "28px",
                            marginRight: "28px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-icon-qd"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        }
                    }
                }, 5998: t => {
                    t.exports = {
                        ".member-box": {
                            width: "100%",
                            height: "60px",
                            position: "absolute",
                            bottom: "28px",
                            alignItems: "center",
                            justifyContent: "flex-end"
                        },
                        ".member-box .head-box": {
                            width: "200px",
                            height: "40px",
                            position: "relative",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "member-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "head-box"}]
                            }
                        },
                        ".member-box .head-box image": {
                            width: "38px",
                            height: "38px",
                            borderRadius: "19px",
                            position: "absolute",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "member-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "head-box"
                                }, {t: "d"}, {t: "t", n: "image"}]
                            }
                        },
                        ".member-box text": {
                            width: "150px",
                            fontSize: "24px",
                            color: "#ffffff",
                            textAlign: "right",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "member-box"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        }
                    }
                }, 6883: t => {
                    t.exports = {
                        ".common-back-header-wrapper .common-back-header": {
                            width: "100%",
                            flexDirection: "row",
                            paddingTop: "0px",
                            paddingRight: "30px",
                            paddingBottom: "0px",
                            paddingLeft: "30px",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "common-back-header"}]
                            }
                        },
                        ".common-back-header-wrapper .common-back-header .common-back-icon": {
                            width: "62px",
                            height: "84px",
                            objectFit: "fill",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "common-back-icon"}]
                            }
                        },
                        ".common-back-header-wrapper .common-back-header .common-title": {
                            fontSize: "34px",
                            fontWeight: "bold",
                            textAlign: "center",
                            flex: 1,
                            paddingRight: "68px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "common-back-header"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "common-title"}]
                            }
                        },
                        ".common-back": {width: "42px", height: "42px"},
                        ".title": {
                            marginLeft: "23px",
                            color: "#f44837",
                            fontSize: "36px",
                            fontFamily: "PingFang SC, PingFang SC-Bold",
                            fontWeight: "700",
                            textAlign: "left",
                            lineHeight: "32px"
                        }
                    }
                }, 7396: t => {
                    t.exports = {
                        "@FONT-FACE": {
                            myfont: {
                                fontFamily: "myfont",
                                src: ["https://tacticsclusters.oss-cn-beijing.aliyuncs.com/fontsize/myfont.otf"],
                                fontName: "myfont",
                                fontSrc: ["https://tacticsclusters.oss-cn-beijing.aliyuncs.com/fontsize/myfont.otf"]
                            }
                        },
                        ".main-common-header": {flexDirection: "row"},
                        ".main-common-header .main-common-name": {
                            fontSize: "44px",
                            color: "#333333",
                            fontWeight: "600",
                            marginLeft: "30px",
                            fontFamily: "myfont, serif",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "main-common-header"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "main-common-name"}]
                            }
                        }
                    }
                }, 7425: t => {
                    t.exports = {
                        ".prompt-pop-modal": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            backgroundColor: "rgba(0,0,0,0.85)",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".prompt-pop-modal .content": {
                            flexDirection: "column",
                            backgroundColor: "#ffffff",
                            justifyContent: "center",
                            alignItems: "center",
                            width: "540px",
                            borderRadius: "20px",
                            paddingTop: "50px",
                            paddingLeft: "32px",
                            paddingRight: "32px",
                            paddingBottom: "34px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}]
                            }
                        },
                        ".prompt-pop-modal .content .prompt-title": {
                            fontSize: "36px",
                            fontFamily: "PingFang SC, PingFang SC-Bold",
                            fontWeight: "700",
                            textAlign: "center",
                            color: "#000000",
                            lineHeight: "42px",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-title"
                                }]
                            }
                        },
                        ".prompt-pop-modal .content .prompt-cxt": {
                            marginTop: "57px",
                            fontSize: "28px",
                            fontFamily: "PingFang SC, PingFang SC-Medium",
                            fontWeight: "500",
                            textAlign: "left",
                            color: "#333333",
                            lineHeight: "42px",
                            alignItems: "center",
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-cxt"
                                }]
                            }
                        },
                        ".prompt-pop-modal .content .argeement": {
                            color: "#f44636",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "argeement"
                                }]
                            }
                        },
                        ".prompt-pop-modal .content .prompt-btn": {
                            width: "460px",
                            height: "88px",
                            background: '{"values":[{"type":"linearGradient","directions":["0deg"],"values":["#f34333 0%","#ff866a 100%"]}]}',
                            borderRadius: "44px",
                            marginTop: "50px",
                            textAlign: "center",
                            fontSize: "32px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "400",
                            color: "#ffffff",
                            lineHeight: "32px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-btn"
                                }]
                            }
                        },
                        ".prompt-pop-modal .content .prompt-not": {
                            fontSize: "32px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "400",
                            textAlign: "left",
                            color: "#cacaca",
                            lineHeight: "32px",
                            letterSpacing: "0.64px",
                            marginTop: "30px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-pop-modal"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "prompt-not"
                                }]
                            }
                        }
                    }
                }, 7324: t => {
                    t.exports = {
                        ".knowledge": {
                            width: "100%",
                            flexDirection: "column",
                            justifyContent: "center",
                            alignItems: "center",
                            boxSizing: "border-box",
                            paddingTop: "125px"
                        },
                        ".knowledge .cardbox": {
                            width: "675px",
                            height: "787px",
                            backgroundImage: "https://devims.readnos.com/image%2F2024-08-13%2F1723533013682_%E7%BB%84%2020.png",
                            backgroundRepeat: "no-repeat",
                            backgroundSize: "100% 100%",
                            borderRadius: "30px",
                            marginTop: "25px",
                            marginRight: "auto",
                            marginBottom: "0px",
                            marginLeft: "auto",
                            flexDirection: "column",
                            boxSizing: "border-box",
                            paddingTop: "33px",
                            paddingRight: "33px",
                            paddingBottom: "33px",
                            paddingLeft: "33px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}]
                            }
                        },
                        ".knowledge .cardbox .title": {
                            fontSize: "34px",
                            fontWeight: "700",
                            textAlign: "left",
                            color: "#262626",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "title"
                                }]
                            }
                        },
                        ".knowledge .cardbox .title_small": {
                            fontSize: "28px",
                            fontWeight: "normal",
                            textAlign: "left",
                            color: "#757575",
                            marginTop: "10px",
                            marginRight: "0px",
                            marginBottom: "10px",
                            marginLeft: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "title_small"
                                }]
                            }
                        },
                        ".knowledge .cardbox .item_box": {
                            width: "100%",
                            flexWrap: "wrap",
                            justifyContent: "space-between",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }]
                            }
                        },
                        ".knowledge .cardbox .item_box .small_item_box": {
                            width: "290px",
                            height: "290px",
                            borderRadius: "20px",
                            backgroundColor: "#4eb3b9",
                            marginTop: "25px",
                            flexDirection: "column",
                            justifyContent: "space-between",
                            alignItems: "flex-start",
                            boxSizing: "border-box",
                            paddingTop: "18px",
                            paddingRight: "18px",
                            paddingBottom: "18px",
                            paddingLeft: "18px",
                            position: "relative",
                            backgroundSize: "100% 100%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "small_item_box"}]
                            }
                        },
                        ".knowledge .cardbox .item_box .small_item_box text": {
                            color: "#FFFFFF",
                            fontSize: "24px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".knowledge .cardbox .item_box .small_item_box .mask": {
                            width: "290px",
                            height: "60px",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "20px",
                            borderTopRightRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "mask"}]
                            }
                        },
                        ".knowledge .cardbox .item_box .small_item_box .backgroundImg": {
                            width: "290px",
                            height: "290px",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "backgroundImg"}]
                            }
                        },
                        ".knowledge .cardbox .item_box .small_item_box .num": {
                            position: "absolute",
                            top: "18px",
                            left: "18px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "num"}]
                            }
                        },
                        ".knowledge .cardbox .item_box .small_item_box .tit": {
                            width: "150px",
                            height: "50px",
                            backgroundColor: "rgba(0,0,0,0.2)",
                            borderRadius: "25px",
                            justifyContent: "center",
                            alignItems: "center",
                            textAlign: "center",
                            fontWeight: "600",
                            letterSpacing: "0.24px",
                            lines: 1,
                            textOverflow: "ellipsis",
                            position: "absolute",
                            bottom: "18px",
                            left: "18px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "tit"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top": {
                            width: "100%",
                            justifyContent: "space-between",
                            marginTop: "10px",
                            marginRight: "0px",
                            marginBottom: "20px",
                            marginLeft: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .big_item": {
                            width: "400px",
                            height: "400px",
                            borderRadius: "20px",
                            backgroundColor: "#4eb3b9",
                            flexDirection: "column",
                            justifyContent: "space-between",
                            alignItems: "flex-start",
                            boxSizing: "border-box",
                            paddingTop: "18px",
                            paddingRight: "18px",
                            paddingBottom: "18px",
                            paddingLeft: "18px",
                            position: "relative",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "big_item"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .big_item text": {
                            color: "#FFFFFF",
                            fontSize: "24px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "big_item"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .big_item .backgroundImg": {
                            width: "400px",
                            height: "400px",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "big_item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "backgroundImg"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .big_item .mask": {
                            width: "400px",
                            height: "60px",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderTopLeftRadius: "20px",
                            borderTopRightRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "big_item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "mask"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .big_item .num": {
                            position: "absolute",
                            top: "18px",
                            left: "18px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "big_item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "num"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .big_item .tit": {
                            width: "150px",
                            height: "50px",
                            backgroundColor: "rgba(0,0,0,0.2)",
                            borderRadius: "25px",
                            justifyContent: "center",
                            alignItems: "center",
                            textAlign: "center",
                            fontWeight: "600",
                            letterSpacing: "0.24px",
                            position: "absolute",
                            bottom: "18px",
                            left: "18px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "big_item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "tit"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .small_item": {
                            flexDirection: "column",
                            justifyContent: "space-between",
                            alignItems: "flex-end",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "small_item"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .small_item .small_item_box": {
                            width: "187px",
                            height: "187px",
                            borderRadius: "20px",
                            backgroundColor: "#4eb3b9",
                            flexDirection: "column",
                            justifyContent: "space-between",
                            alignItems: "flex-start",
                            boxSizing: "border-box",
                            paddingTop: "10px",
                            paddingRight: "10px",
                            paddingBottom: "10px",
                            paddingLeft: "10px",
                            position: "relative",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "small_item_box"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .small_item .small_item_box text": {
                            color: "#FFFFFF",
                            fontSize: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .small_item .small_item_box .tit": {
                            width: "135px",
                            height: "45px",
                            backgroundColor: "rgba(0,0,0,0.2)",
                            borderRadius: "25px",
                            justifyContent: "center",
                            alignItems: "center",
                            textAlign: "center",
                            fontWeight: "600",
                            letterSpacing: "0.24px",
                            position: "absolute",
                            bottom: "10px",
                            left: "10px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "tit"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_top .small_item .small_item_box .backgroundImg": {
                            width: "187px",
                            height: "187px",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_top"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "backgroundImg"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_bottom": {
                            justifyContent: "space-between",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_bottom"
                                }]
                            }
                        },
                        ".knowledge .cardbox .item_box_bottom .small_item_box": {
                            width: "187px",
                            height: "187px",
                            borderRadius: "20px",
                            backgroundColor: "#4eb3b9",
                            flexDirection: "column",
                            justifyContent: "space-between",
                            alignItems: "flex-start",
                            boxSizing: "border-box",
                            paddingTop: "10px",
                            paddingRight: "10px",
                            paddingBottom: "10px",
                            paddingLeft: "10px",
                            position: "relative",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_bottom"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "small_item_box"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_bottom .small_item_box text": {
                            color: "#FFFFFF",
                            fontSize: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_bottom"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_bottom .small_item_box .tit": {
                            width: "135px",
                            height: "45px",
                            backgroundColor: "rgba(0,0,0,0.2)",
                            borderRadius: "25px",
                            justifyContent: "center",
                            alignItems: "center",
                            textAlign: "center",
                            fontWeight: "600",
                            letterSpacing: "0.24px",
                            position: "absolute",
                            bottom: "10px",
                            left: "10px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_bottom"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "tit"}]
                            }
                        },
                        ".knowledge .cardbox .item_box_bottom .small_item_box .backgroundImg": {
                            width: "187px",
                            height: "187px",
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            borderRadius: "20px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "knowledge"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cardbox"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "item_box_bottom"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small_item_box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "backgroundImg"}]
                            }
                        }
                    }
                }, 6968: t => {
                    t.exports = {
                        ".h5-title": {fontSize: "36px", color: "#333333", lineHeight: "36px", fontWeight: "600"},
                        ".h4-title": {fontSize: "44px", color: "#333333", fontWeight: "600", lineHeight: "44px"},
                        ".h6-title": {fontSize: "32px", color: "#333333", fontWeight: "600", lineHeight: "32px"},
                        ".main-box": {
                            width: "100%",
                            backgroundImage: "https://devims.readnos.com/image%2F2024-08-13%2F1723531857864_%E8%83%8C%E6%99%AF.png",
                            backgroundSize: "100% 100%",
                            backgroundRepeat: "no-repeat"
                        },
                        ".home-box": {flexDirection: "column"},
                        ".home-box .header-box": {
                            height: "150px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "header-box"}]
                            }
                        },
                        ".home-box .top-box": {
                            width: "690px",
                            marginTop: "0px",
                            marginRight: "auto",
                            marginBottom: "0px",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}]
                            }
                        },
                        ".home-box .top-box .today-box": {
                            width: "315px",
                            backgroundImage: "/assets/home/today-bg.png",
                            backgroundSize: "100% 100%",
                            backgroundRepeat: "no-repeat",
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }]
                            }
                        },
                        ".home-box .top-box .today-box .title": {
                            fontSize: "34px",
                            color: "#ffffff",
                            marginTop: "47px",
                            marginRight: "0px",
                            marginBottom: "0px",
                            marginLeft: "27px",
                            fontWeight: "600",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title"}]
                            }
                        },
                        ".home-box .top-box .today-box .content": {
                            height: "191px",
                            alignItems: "flex-start",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}]
                            }
                        },
                        ".home-box .top-box .today-box .content text": {
                            marginTop: "17px",
                            marginRight: "17px",
                            marginBottom: "0px",
                            marginLeft: "27px",
                            fontSize: "26px",
                            color: "#ffffff",
                            textDecoration: "underline",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "t",
                                    n: "text"
                                }]
                            }
                        },
                        ".home-box .top-box .today-box .content image": {
                            width: "183px",
                            height: "191px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "t",
                                    n: "image"
                                }]
                            }
                        },
                        ".home-box .top-box .today-box .footer": {
                            width: "200px",
                            height: "80px",
                            backgroundColor: "#FFFFFF",
                            borderRadius: "40px",
                            textAlign: "center",
                            fontSize: "32px",
                            fontWeight: "600",
                            color: "#2A3467",
                            marginTop: "10px",
                            marginRight: "0px",
                            marginBottom: "0px",
                            marginLeft: "36px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "footer"}]
                            }
                        },
                        ".home-box .top-box .right-box": {
                            width: "378px",
                            flexDirection: "column",
                            alignItems: "flex-end",
                            justifyContent: "space-between",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }]
                            }
                        },
                        ".home-box .top-box .right-box .cp-box": {
                            width: "348px",
                            height: "163px",
                            backgroundImage: "/assets/home/cp-bg.png",
                            backgroundSize: "100% 100%",
                            backgroundRepeat: "no-repeat",
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cp-box"}]
                            }
                        },
                        ".home-box .top-box .right-box .cp-box .title": {
                            fontSize: "34px",
                            color: "#ffffff",
                            marginTop: "46px",
                            marginRight: "0px",
                            marginBottom: "0px",
                            marginLeft: "28px",
                            fontWeight: "600",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cp-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "title"
                                }]
                            }
                        },
                        ".home-box .top-box .right-box .cp-box .title2": {
                            fontSize: "26px",
                            color: "#ffffff",
                            marginTop: "0px",
                            marginRight: "0px",
                            marginBottom: "0px",
                            marginLeft: "29px",
                            fontWeight: "500",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cp-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "title2"
                                }]
                            }
                        },
                        ".home-box .top-box .right-box .assess-box-top": {
                            width: "378px",
                            height: "238px",
                            backgroundImage: "/assets/home/assess-bg.png",
                            backgroundSize: "100% 100%",
                            backgroundRepeat: "no-repeat",
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "assess-box-top"}]
                            }
                        },
                        ".home-box .top-box .right-box .assess-box-top .title": {
                            width: "150px",
                            height: "50px",
                            backgroundColor: "rgba(255,255,255,0.6)",
                            borderRadius: "25px",
                            textAlign: "center",
                            fontSize: "24px",
                            fontWeight: "600",
                            color: "#FF48C3",
                            marginTop: "20px",
                            marginRight: "0px",
                            marginBottom: "22px",
                            marginLeft: "50px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box-top"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title"}]
                            }
                        },
                        ".home-box .top-box .right-box .assess-box-top .title2": {
                            width: "200px",
                            fontSize: "28px",
                            color: "#ffffff",
                            marginTop: "100px",
                            marginRight: "0px",
                            marginBottom: "0px",
                            marginLeft: "36px",
                            fontWeight: "500",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box-top"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title2"}]
                            }
                        },
                        ".home-box .top-box .new-right-box": {
                            width: "100%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-right-box"
                                }]
                            }
                        },
                        ".home-box .top-box .new-right-box .cp-box": {
                            width: "100%",
                            marginBottom: "29px",
                            backgroundImage: "/assets/home/cp-bg-new.png",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-right-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "cp-box"}]
                            }
                        },
                        ".home-box .top-box .new-right-box .assess-box-top": {
                            width: "100%",
                            backgroundImage: "/assets/home/assess-bg.png",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "top-box"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-right-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "assess-box-top"}]
                            }
                        },
                        ".home-box .new-top-box": {
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "new-top-box"}]
                            }
                        },
                        ".home-box .new-top-box .today-box": {
                            width: "100%",
                            height: "210px",
                            marginBottom: "29px",
                            backgroundImage: "/assets/home/today-bg-new.png",
                            flexDirection: "row",
                            justifyContent: "center",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-top-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "today-box"}]
                            }
                        },
                        ".home-box .new-top-box .today-box .title": {
                            marginTop: "0px",
                            marginRight: "0px",
                            marginBottom: "0px",
                            marginLeft: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-top-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title"}]
                            }
                        },
                        ".home-box .new-top-box .today-box .content": {
                            height: "191px",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-top-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}]
                            }
                        },
                        ".home-box .new-top-box .today-box .content text": {
                            marginTop: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "home-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "new-top-box"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "today-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "t",
                                    n: "text"
                                }]
                            }
                        },
                        ".assess-box": {
                            width: "690px",
                            height: "300px",
                            marginTop: "30px",
                            marginRight: "auto",
                            marginBottom: "30px",
                            marginLeft: "auto",
                            backgroundImage: "/assets/home/assess-box-bg.png",
                            backgroundSize: "100% 100%",
                            borderRadius: "30px",
                            flexDirection: "column",
                            position: "relative"
                        },
                        ".assess-box .title-img": {
                            width: "121px",
                            height: "135px",
                            position: "absolute",
                            right: "15px",
                            top: "0px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title-img"}]
                            }
                        },
                        ".assess-box .title": {
                            width: "150px",
                            height: "50px",
                            backgroundColor: "rgba(255,255,255,0.6)",
                            borderRadius: "25px",
                            textAlign: "center",
                            fontSize: "24px",
                            fontWeight: "600",
                            color: "#FF48C3",
                            marginTop: "23px",
                            marginRight: "0px",
                            marginBottom: "32px",
                            marginLeft: "28px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title"}]
                            }
                        },
                        ".assess-box .title2": {
                            fontSize: "32px",
                            color: "#ffffff",
                            marginTop: "100px",
                            marginRight: "30px",
                            marginBottom: "0px",
                            marginLeft: "37px",
                            fontWeight: "500",
                            lines: 2,
                            textOverflow: "ellipsis",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title2"}]
                            }
                        },
                        ".assess-box-small": {
                            width: "690px",
                            marginTop: "0px",
                            marginRight: "auto",
                            marginBottom: "0px",
                            marginLeft: "auto",
                            flexWrap: "wrap",
                            justifyContent: "space-between"
                        },
                        ".assess-box-small .small-box": {
                            width: "330px",
                            height: "250px",
                            backgroundImage: "/assets/home/small-box-bg.png",
                            backgroundSize: "100% 100%",
                            borderRadius: "30px",
                            marginBottom: "20px",
                            flexDirection: "column",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box-small"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "small-box"}]
                            }
                        },
                        ".assess-box-small .small-box .title2": {
                            fontSize: "32px",
                            color: "#44A1F6",
                            marginTop: "0px",
                            marginRight: "50px",
                            marginBottom: "0px",
                            marginLeft: "18px",
                            fontWeight: "500",
                            lines: 2,
                            textOverflow: "ellipsis",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "assess-box-small"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "small-box"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title2"}]
                            }
                        },
                        ".m-r-0": {marginRight: "0px"},
                        ".load-more": {justifyContent: "center"},
                        ".flex-column": {flexDirection: "column"},
                        ".footer-container": {height: "180px", backgroundColor: "#5696FF"},
                        ".tab-item": {flexDirection: "column", justifyContent: "center", alignItems: "center"},
                        ".tab-icon-0": {width: "87px", height: "65px"},
                        ".tab-icon-1": {width: "64px", height: "71px"},
                        ".tab-icon-2": {width: "54px", height: "67px"},
                        ".banner-img": {width: "750px", height: "354px"},
                        ".tab-title": {
                            fontSize: "28px",
                            fontFamily: "PingFang SC, PingFang SC-Medium",
                            fontWeight: "500",
                            textAlign: "left",
                            color: "rgba(0,0,0,0.5)",
                            lineHeight: "34px",
                            marginTop: "10px"
                        },
                        ".change-tab-color": {
                            fontSize: "28px",
                            fontFamily: "PingFang SC, PingFang SC-Medium",
                            fontWeight: "500",
                            textAlign: "left",
                            color: "#FDFEFE",
                            lineHeight: "34px",
                            marginTop: "10px"
                        },
                        ".boots-hide": {width: "0px", height: "0px", opacity: 0},
                        ".boots-show": {
                            width: "750px",
                            paddingTop: "0px",
                            paddingRight: "0px",
                            paddingBottom: "0px",
                            paddingLeft: "24px"
                        },
                        ".roll-out-bottom": {
                            animationName: "rollOutBottom",
                            animationDuration: "600ms",
                            animationTimingFunction: "ease-in",
                            animationFillMode: "forwards"
                        },
                        "@KEYFRAMES": {
                            rollOutBottom: [{
                                transform: '{"translateY":"0px","rotate":"0deg"}',
                                opacity: 1,
                                time: 0
                            }, {transform: '{"translateY":"1624px","rotate":"540deg"}', opacity: 0, time: 100}],
                            blinkA: [{opacity: 1, time: 0}, {opacity: 0, time: 25}, {opacity: 1, time: 50}, {
                                opacity: 0,
                                time: 75
                            }, {opacity: 1, time: 100}],
                            rotateCenter: [{transform: '{"rotate":"0deg"}', time: 0}, {
                                transform: '{"rotate":"360deg"}',
                                time: 100
                            }],
                            scaleUpCenter: [{
                                transform: '{"scaleX":0,"scaleY":0,"scaleZ":0}',
                                time: 0
                            }, {transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}', time: 100}],
                            scaleDownCenter: [{
                                transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}',
                                time: 0
                            }, {transform: '{"scaleX":0,"scaleY":0,"scaleZ":0}', time: 100}],
                            scaleDownUpCenter: [{
                                transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}',
                                time: 0
                            }, {
                                transform: '{"scaleX":0.8,"scaleY":0.8,"scaleZ":0.8}',
                                time: 50
                            }, {transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}', time: 100}],
                            scaleUpDownCenter: [{
                                transform: '{"scaleX":0.8,"scaleY":0.8,"scaleZ":0.8}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}',
                                time: 50
                            }, {transform: '{"scaleX":0.8,"scaleY":0.8,"scaleZ":0.8}', time: 100}],
                            shakeLr: [{transform: '{"rotate":"0deg"}', time: 0}, {
                                transform: '{"rotate":"8deg"}',
                                time: 10
                            }, {transform: '{"rotate":"-10deg"}', time: 20}, {
                                transform: '{"rotate":"10deg"}',
                                time: 30
                            }, {transform: '{"rotate":"-10deg"}', time: 40}, {
                                transform: '{"rotate":"10deg"}',
                                time: 50
                            }, {transform: '{"rotate":"-10deg"}', time: 60}, {
                                transform: '{"rotate":"10deg"}',
                                time: 70
                            }, {transform: '{"rotate":"-8deg"}', time: 80}, {
                                transform: '{"rotate":"8deg"}',
                                time: 90
                            }, {transform: '{"rotate":"0deg"}', time: 100}],
                            shakeHorizontal: [{
                                transform: '{"translateX":"0px"}',
                                time: 0
                            }, {transform: '{"translateX":"-10px"}', time: 10}, {
                                transform: '{"translateX":"10px"}',
                                time: 20
                            }, {transform: '{"translateX":"-10px"}', time: 30}, {
                                transform: '{"translateX":"10px"}',
                                time: 40
                            }, {transform: '{"translateX":"-10px"}', time: 50}, {
                                transform: '{"translateX":"10px"}',
                                time: 60
                            }, {transform: '{"translateX":"-10px"}', time: 70}, {
                                transform: '{"translateX":"8px"}',
                                time: 80
                            }, {transform: '{"translateX":"-8px"}', time: 90}, {
                                transform: '{"translateX":"0px"}',
                                time: 100
                            }],
                            wobbleHorBottom: [{
                                transform: '{"translateX":"0%"}',
                                time: 0
                            }, {
                                transform: '{"translateX":"-30px","rotate":"-6deg"}',
                                time: 15
                            }, {
                                transform: '{"translateX":"15px","rotate":"6deg"}',
                                time: 30
                            }, {
                                transform: '{"translateX":"-15px","rotate":"-3.6deg"}',
                                time: 45
                            }, {
                                transform: '{"translateX":"9px","rotate":"2.4deg"}',
                                time: 60
                            }, {
                                transform: '{"translateX":"-6px","rotate":"-1.2deg"}',
                                time: 75
                            }, {transform: '{"translateX":"0%"}', time: 100}],
                            shakeVertical: [{
                                transform: '{"translateY":"0px"}',
                                time: 0
                            }, {transform: '{"translateY":"-8px"}', time: 10}, {
                                transform: '{"translateY":"8px"}',
                                time: 20
                            }, {transform: '{"translateY":"-8px"}', time: 30}, {
                                transform: '{"translateY":"8px"}',
                                time: 40
                            }, {transform: '{"translateY":"-8px"}', time: 50}, {
                                transform: '{"translateY":"8px"}',
                                time: 60
                            }, {transform: '{"translateY":"-8px"}', time: 70}, {
                                transform: '{"translateY":"6.4px"}',
                                time: 80
                            }, {transform: '{"translateY":"-6.4px"}', time: 90}, {
                                transform: '{"translateY":"0px"}',
                                time: 100
                            }],
                            scaleUpDownLargeCenter: [{
                                transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}',
                                time: 0
                            }, {
                                transform: '{"scaleX":1.2,"scaleY":1.2,"scaleZ":1.2}',
                                time: 50
                            }, {transform: '{"scaleX":1,"scaleY":1,"scaleZ":1}', time: 100}]
                        },
                        ".blink-1": {
                            animationName: "blinkA",
                            animationDuration: "1500ms",
                            animationFillMode: "forwards",
                            animationIterationCount: -1
                        },
                        ".rotate-center": {
                            animationName: "rotateCenter",
                            animationDuration: "4000ms",
                            animationTimingFunction: "linear",
                            animationFillMode: "forwards",
                            animationIterationCount: -1
                        },
                        ".scale-up-center": {
                            animationName: "scaleUpCenter",
                            animationDuration: "300ms",
                            animationTimingFunction: "linear",
                            animationFillMode: "forwards"
                        },
                        ".scale-down-center": {
                            animationName: "scaleDownCenter",
                            animationDuration: "300ms",
                            animationTimingFunction: "linear",
                            animationFillMode: "forwards"
                        },
                        ".scale-down-up-center": {
                            animationName: "scaleDownUpCenter",
                            animationDuration: "1500ms",
                            animationTimingFunction: "linear",
                            animationFillMode: "forwards",
                            animationIterationCount: -1
                        },
                        ".scale-up-down-center": {
                            animationName: "scaleUpDownCenter",
                            animationDuration: "1500ms",
                            animationTimingFunction: "linear",
                            animationFillMode: "forwards",
                            animationIterationCount: -1
                        },
                        ".shake-lr": {
                            animationName: "shakeLr",
                            animationDuration: "1500ms",
                            animationTimingFunction: "cubic-bezier(0.455, 0.03, 0.515, 0.955)",
                            animationFillMode: "forwards",
                            animationIterationCount: -1
                        },
                        ".shake-horizontal": {
                            animationName: "shakeHorizontal",
                            animationDuration: "800ms",
                            animationTimingFunction: "cubic-bezier(0.455, 0.03, 0.515, 0.955)",
                            animationFillMode: "forwards"
                        },
                        ".wobble-hor-bottom": {
                            animationName: "wobbleHorBottom",
                            animationDuration: "800ms",
                            animationFillMode: "forwards"
                        },
                        ".shake-vertical": {
                            animationName: "shakeVertical",
                            animationDuration: "800ms",
                            animationTimingFunction: "cubic-bezier(0.455, 0.03, 0.515, 0.955)",
                            animationFillMode: "forwards"
                        },
                        ".ad-bg-tag": {
                            width: "46px",
                            height: "22px",
                            backgroundColor: "rgba(0,0,0,0.3)",
                            borderRadius: "4px",
                            fontSize: "18px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "400",
                            color: "#ffffff",
                            lineHeight: "22px",
                            textAlign: "center",
                            position: "absolute",
                            bottom: "6px",
                            right: "6px"
                        },
                        ".scale-down-up-large-center": {
                            animationName: "scaleUpDownLargeCenter",
                            animationDuration: "1500ms",
                            animationTimingFunction: "linear",
                            animationFillMode: "forwards",
                            animationIterationCount: -1
                        },
                        ".shake-lr-bag": {
                            animationName: "shakeLr",
                            animationDuration: "2000ms",
                            animationTimingFunction: "ease-in-out",
                            animationFillMode: "forwards",
                            animationIterationCount: -1,
                            animationDelay: "1000ms"
                        }
                    }
                }, 3185: t => {
                    t.exports = {
                        ".my-wrapper": {width: "750px", flexDirection: "column"},
                        ".my-wrapper .management": {
                            marginBottom: "44px",
                            fontSize: "32px",
                            fontFamily: "PingFang SC, PingFang SC-Bold",
                            fontWeight: "700",
                            textAlign: "left",
                            color: "#000000",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "management"}]
                            }
                        },
                        ".my-wrapper .title-header": {
                            display: "flex",
                            alignItems: "center",
                            marginLeft: "57px",
                            marginTop: "144px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "title-header"}]
                            }
                        },
                        ".my-wrapper .left-cxt": {
                            width: "160px",
                            height: "160px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "left-cxt"}]
                            }
                        },
                        ".my-wrapper .left-cxt > img": {
                            width: "100%",
                            height: "100%",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "left-cxt"
                                }, {t: "child"}, {t: "t", n: "img"}]
                            }
                        },
                        ".my-wrapper .right-cxt": {
                            flexDirection: "column",
                            marginLeft: "52px",
                            flex: 1,
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "right-cxt"}]
                            }
                        },
                        ".my-wrapper .right-cxt .login-welcome": {
                            height: "40px",
                            fontSize: "34px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "600",
                            textAlign: "left",
                            color: "#FFFFFF",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-cxt"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "login-welcome"}]
                            }
                        },
                        ".my-wrapper .right-cxt .login-tips": {
                            height: "23px",
                            fontSize: "26px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "400",
                            textAlign: "left",
                            color: "#bfbfbf",
                            lineHeight: "40px",
                            marginTop: "21px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "right-cxt"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "login-tips"}]
                            }
                        },
                        ".my-wrapper .menu-cxt": {
                            flexDirection: "column",
                            width: "700px",
                            height: "775px",
                            backgroundImage: "https://devims.readnos.com/image%2F2024-08-13%2F1723533013682_%E7%BB%84%2020.png",
                            backgroundRepeat: "no-repeat",
                            backgroundSize: "100% 100%",
                            borderRadius: "30px",
                            paddingLeft: "35px",
                            paddingRight: "35px",
                            paddingTop: "50px",
                            marginTop: "80px",
                            marginRight: "auto",
                            marginBottom: "80px",
                            marginLeft: "auto",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "menu-cxt"}]
                            }
                        },
                        ".my-wrapper .menu-cxt .menu-content": {
                            flexDirection: "column",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "menu-content"}]
                            }
                        },
                        ".my-wrapper .menu-cxt .menu-cxt-item": {
                            alignItems: "center",
                            justifyContent: "space-between",
                            marginBottom: "10px",
                            height: "90px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "menu-cxt-item"}]
                            }
                        },
                        ".my-wrapper .menu-cxt .menu-cxt-item .left-box div": {
                            width: "90px",
                            height: "90px",
                            marginRight: "20px",
                            alignItems: "center",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt-item"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "left-box"
                                }, {t: "d"}, {t: "t", n: "div"}]
                            }
                        },
                        ".my-wrapper .menu-cxt .menu-cxt-item .left-box text": {
                            fontSize: "34px",
                            color: "#343333",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt-item"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "left-box"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".my-wrapper .menu-cxt .menu-cxt-item .arrow": {
                            width: "15px",
                            height: "26px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt"
                                }, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "menu-cxt-item"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "arrow"}]
                            }
                        },
                        ".my-wrapper .welfare": {
                            width: "100%",
                            height: "207px",
                            borderRadius: "20px",
                            backgroundSize: "100% 100%",
                            backgroundImage: "/assets/my/my-bg.png",
                            justifyContent: "space-between",
                            alignItems: "center",
                            position: "relative",
                            zIndex: 22,
                            marginTop: "30px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "welfare"}]
                            }
                        },
                        ".my-wrapper .welfare .welfare-left": {
                            flexDirection: "column",
                            marginLeft: "74px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "welfare"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "welfare-left"
                                }]
                            }
                        },
                        ".my-wrapper .welfare .get-info": {
                            width: "120px",
                            height: "60px",
                            backgroundColor: "#fff3ed",
                            borderRadius: "30px",
                            marginRight: "81px",
                            justifyContent: "center",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "welfare"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "get-info"
                                }]
                            }
                        },
                        ".my-wrapper .welfare .get-text": {
                            fontSize: "26px",
                            fontFamily: "PingFang SC, PingFang SC-Bold",
                            fontWeight: "700",
                            textAlign: "center",
                            color: "#f34434",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "welfare"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "get-text"
                                }]
                            }
                        },
                        ".my-wrapper .welfare .welfare-text": {
                            fontSize: "36px",
                            fontFamily: "ZiZhiQuXiMaiTi, ZiZhiQuXiMaiTi-Regular",
                            fontWeight: "400",
                            textAlign: "left",
                            color: "#ffffff",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "welfare"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "welfare-text"
                                }]
                            }
                        },
                        ".my-wrapper .welfare .welfare-text1": {
                            opacity: .6,
                            fontSize: "24px",
                            fontFamily: "PingFang SC, PingFang SC-Regular",
                            fontWeight: "400",
                            textAlign: "left",
                            color: "#ffffff",
                            lineHeight: "40px",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "my-wrapper"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "welfare"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "welfare-text1"
                                }]
                            }
                        },
                        ".stack-cxt": {position: "absolute", top: "0px", height: "666px", width: "100%"},
                        ".filing-text": {
                            width: "100%",
                            position: "absolute",
                            bottom: "150px",
                            justifyContent: "center"
                        },
                        ".filing-text text": {
                            color: "#AAAAAA",
                            _meta: {
                                ruleDef: [{
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "filing-text"
                                }, {t: "d"}, {t: "t", n: "text"}]
                            }
                        },
                        ".dialog": {
                            position: "fixed",
                            width: "100%",
                            height: "100%",
                            backgroundColor: "rgba(0,0,0,0.85)",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center"
                        },
                        ".dialog .dialog-pop .content": {
                            flexDirection: "column",
                            backgroundColor: "#ffffff",
                            justifyContent: "center",
                            alignItems: "center",
                            width: "540px",
                            borderRadius: "20px",
                            paddingTop: "50px",
                            paddingLeft: "32px",
                            paddingRight: "32px",
                            paddingBottom: "34px",
                            _meta: {
                                ruleDef: [{t: "a", n: "class", i: !1, a: "element", v: "dialog"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}]
                            }
                        },
                        ".dialog .dialog-pop .content .desc": {
                            marginTop: "50px",
                            _meta: {
                                ruleDef: [{t: "a", n: "class", i: !1, a: "element", v: "dialog"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "desc"
                                }]
                            }
                        },
                        ".dialog .dialog-pop .content .desc .text": {
                            marginTop: "57px",
                            fontWeight: "500",
                            fontSize: "36px",
                            color: "#000201",
                            _meta: {
                                ruleDef: [{t: "a", n: "class", i: !1, a: "element", v: "dialog"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "desc"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "text"}]
                            }
                        },
                        ".dialog .dialog-pop .content .dialog-btn": {
                            marginTop: "80px",
                            width: "100%",
                            justifyContent: "space-around",
                            alignItems: "center",
                            _meta: {
                                ruleDef: [{t: "a", n: "class", i: !1, a: "element", v: "dialog"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-btn"
                                }]
                            }
                        },
                        ".dialog .dialog-pop .content .dialog-btn .dialog-confirm": {
                            fontSize: "32px",
                            color: "#fe3535",
                            _meta: {
                                ruleDef: [{t: "a", n: "class", i: !1, a: "element", v: "dialog"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-btn"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "dialog-confirm"}]
                            }
                        },
                        ".dialog .dialog-pop .content .dialog-btn .dialog-cancel": {
                            fontSize: "32px",
                            color: "#000201",
                            _meta: {
                                ruleDef: [{t: "a", n: "class", i: !1, a: "element", v: "dialog"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-pop"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "content"}, {t: "d"}, {
                                    t: "a",
                                    n: "class",
                                    i: !1,
                                    a: "element",
                                    v: "dialog-btn"
                                }, {t: "d"}, {t: "a", n: "class", i: !1, a: "element", v: "dialog-cancel"}]
                            }
                        }
                    }
                }, 5230: t => {
                    t.exports = {
                        type: "stack", attr: {}, style: function () {
                            return this.style.stackContainer
                        }, children: [{
                            type: "canvas", attr: {id: "canvasId"}, id: "canvasId", style: function () {
                                return this.style.timerCanvas
                            }
                        }, {
                            type: "div", attr: {}, style: function () {
                                return this.style.circleContainer
                            }, children: [{
                                type: "text", attr: {
                                    value: function () {
                                        return this.content
                                    }
                                }, style: function () {
                                    return this.style.circleText
                                }
                            }]
                        }]
                    }
                }, 93: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["close-btn"], style: function () {
                            return this.btnstyle
                        }, children: [{
                            type: "image", attr: {
                                src: function () {
                                    return this.closeImg
                                }
                            }, shown: function () {
                                return this.closeImg
                            }, style: function () {
                                return this.closeImgStyle
                            }
                        }, {
                            type: "text", attr: {
                                value: function () {
                                    return this.closeText
                                }
                            }, shown: function () {
                                return this.closeText
                            }, style: {
                                color: function () {
                                    return this.btnstyle.color
                                }
                            }, classList: ["closebtn-text"]
                        }]
                    }
                }, 7891: t => {
                    t.exports = {
                        type: "div", attr: {
                            id: function () {
                                return this.id
                            }
                        }, style: function () {
                            return this.customstyle
                        }, events: {
                            click: function (t) {
                                return this.containerClick(null, t)
                            }
                        }, id: function () {
                            return this.id
                        }, children: [{
                            type: "block", attr: {}, repeat: function () {
                                return this.list
                            }, children: [{
                                type: "text", attr: {
                                    id: function () {
                                        return this.$item.id
                                    }, value: function () {
                                        return this.$item.value
                                    }
                                }, shown: function () {
                                    return "text" === this.$item.name && !this.$item.hidden
                                }, style: function () {
                                    return this.$item.style
                                }, events: {
                                    click: function (t) {
                                        return this.clickHandler(this.$item, t)
                                    }
                                }, id: function () {
                                    return this.$item.id
                                }
                            }, {
                                type: "skip-circle", attr: {
                                    content: function () {
                                        return this.$item.content
                                    }, percent: function () {
                                        return this.$item.percent
                                    }, size: function () {
                                        return this.$item.size
                                    }
                                }, shown: function () {
                                    return "circle" === this.$item.name && !this.$item.hidden
                                }
                            }, {
                                type: "video", attr: {
                                    controls: function () {
                                        return this.$item.controls
                                    }, autoplay: function () {
                                        return this.$item.autoplay
                                    }, muted: function () {
                                        return this.$item.muted
                                    }, src: function () {
                                        return this.$item.video
                                    }, poster: function () {
                                        return this.$item.poster
                                    }, id: "info-flow-video"
                                }, shown: function () {
                                    return "video" === this.$item.name && !this.$item.hidden
                                }, id: "info-flow-video", style: function () {
                                    return this.$item.style
                                }, events: {
                                    pause: function (t) {
                                        return this.videoPause(this.$item, t)
                                    }, error: function (t) {
                                        return this.videoError(this.$item, t)
                                    }, start: function (t) {
                                        return this.videoStart(this.$item, t)
                                    }, click: function (t) {
                                        return this.clickHandler(this.$item, t)
                                    }, prepared: function (t) {
                                        return this.videoPrepared(this.$item, t)
                                    }, finish: function (t) {
                                        return this.videoFinish(this.$item, t)
                                    }, timeupdate: function (t) {
                                        return this.videoTimeUpdate(this.$item, t)
                                    }
                                }
                            }, {
                                type: "image", attr: {
                                    src: function () {
                                        return this.$item.value
                                    }, id: function () {
                                        return this.$item.id
                                    }
                                }, style: function () {
                                    return this.$item.style
                                }, classList: ["ad-image"], events: {
                                    click: function (t) {
                                        return this.clickHandler(this.$item, t)
                                    }
                                }, id: function () {
                                    return this.$item.id
                                }, shown: function () {
                                    return "image" === this.$item.name && !this.$item.hidden
                                }
                            }, {
                                type: "block", attr: {}, shown: function () {
                                    return "logo" === this.$item.name && !this.$item.hidden
                                }, children: [{
                                    type: "ad-logo", attr: {
                                        itemStyle: function () {
                                            return this.$item.style
                                        }
                                    }
                                }]
                            }, {
                                type: "close-btn", attr: {
                                    btnstyle: function () {
                                        return this.$item.style
                                    }, imgsrc: function () {
                                        return this.$item.imgsrc
                                    }
                                }, shown: function () {
                                    return "close" === this.$item.name && !this.$item.hidden
                                }, events: {
                                    click: function (t) {
                                        return this.clickHandler(this.$item, t)
                                    }, touchstart: function (t) {
                                        return this.touchstartHandler(this.$item, t)
                                    }
                                }
                            }, {
                                type: "union-custom", attr: {
                                    id: function () {
                                        return this.$item.id
                                    }, btnAnimate: function () {
                                        return this.btnAnimate
                                    }, list: function () {
                                        return this.$item.children
                                    }, customstyle: function () {
                                        return this.$item.style
                                    }, bindevent: function () {
                                        return this.$item.bindEvent
                                    }, item: function () {
                                        return this.$item
                                    }
                                }, shown: function () {
                                    return "layout" === this.$item.name && !this.$item.hidden
                                }, id: function () {
                                    return this.$item.id
                                }, events: {"custom-click": "customClick"}
                            }, {
                                type: "stack", attr: {}, style: function () {
                                    return this.$item.style
                                }, shown: function () {
                                    return "stack" === this.$item.name && !this.$item.hidden
                                }, events: {
                                    click: function (t) {
                                        return this.containerClick(this.$item, t)
                                    }
                                }, children: [{
                                    type: "block", attr: {}, repeat: function () {
                                        return this.$item.children
                                    }, children: [{
                                        type: "text", attr: {
                                            id: function () {
                                                return this.$item.id
                                            }, value: function () {
                                                return this.$item.value
                                            }
                                        }, shown: function () {
                                            return "text" === this.$item.name && !this.$item.hidden
                                        }, style: function () {
                                            return this.$item.style
                                        }, id: function () {
                                            return this.$item.id
                                        }, events: {
                                            click: function (t) {
                                                return this.clickHandler(this.$item, t)
                                            }
                                        }
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.$item.value
                                            }, id: function () {
                                                return this.$item.id
                                            }
                                        }, style: function () {
                                            return this.$item.style
                                        }, classList: ["ad-image"], id: function () {
                                            return this.$item.id
                                        }, events: {
                                            click: function (t) {
                                                return this.clickHandler(this.$item, t)
                                            }
                                        }, shown: function () {
                                            return "image" === this.$item.name && !this.$item.hidden
                                        }
                                    }, {
                                        type: "block", attr: {}, shown: function () {
                                            return "logo" === this.$item.name && !this.$item.hidden
                                        }, children: [{
                                            type: "ad-logo", attr: {
                                                itemStyle: function () {
                                                    return this.$item.style
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "union-custom", attr: {
                                            id: function () {
                                                return this.$item.id
                                            }, btnAnimate: function () {
                                                return this.btnAnimate
                                            }, list: function () {
                                                return this.$item.children
                                            }, customstyle: function () {
                                                return this.$item.style
                                            }, bindevent: function () {
                                                return this.$item.bindEvent
                                            }, item: function () {
                                                return this.$item
                                            }
                                        }, shown: function () {
                                            return "layout" === this.$item.name && !this.$item.hidden
                                        }, id: function () {
                                            return this.$item.id
                                        }, events: {"custom-click": "customClick"}
                                    }, {
                                        type: "video", attr: {
                                            controls: function () {
                                                return this.$item.controls
                                            }, autoplay: function () {
                                                return this.$item.autoplay
                                            }, muted: function () {
                                                return this.$item.muted
                                            }, src: function () {
                                                return this.$item.video
                                            }, poster: function () {
                                                return this.$item.poster
                                            }, id: "info-flow-video"
                                        }, shown: function () {
                                            return "video" === this.$item.name && !this.$item.hidden
                                        }, id: "info-flow-video", style: function () {
                                            return this.$item.style
                                        }, events: {
                                            click: function (t) {
                                                return this.clickHandler(this.$item, t)
                                            }, pause: function (t) {
                                                return this.videoPause(this.$item, t)
                                            }, error: function (t) {
                                                return this.videoError(this.$item, t)
                                            }, start: function (t) {
                                                return this.videoStart(this.$item, t)
                                            }, prepared: function (t) {
                                                return this.videoPrepared(this.$item, t)
                                            }, finish: function (t) {
                                                return this.videoFinish(this.$item, t)
                                            }, timeupdate: function (t) {
                                                return this.videoTimeUpdate(this.$item, t)
                                            }
                                        }
                                    }, {
                                        type: "skip-circle", attr: {
                                            content: function () {
                                                return this.$item.content
                                            }, percent: function () {
                                                return this.$item.percent
                                            }, size: function () {
                                                return this.$item.size
                                            }
                                        }, shown: function () {
                                            return "circle" === this.$item.name && !this.$item.hidden
                                        }
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 1325: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["overlay-container"], children: [{
                            type: "div", attr: {}, classList: function () {
                                return [this.overlayClass]
                            }, style: function () {
                                return this.style.overlay
                            }, shown: function () {
                                return this.isVisible
                            }, events: {click: "closeClick"}, children: [{
                                type: "div", attr: {}, style: function () {
                                    return this.style.panel
                                }, events: {click: "panelClick"}, children: [{
                                    type: "div", attr: {}, classList: function () {
                                        return [this.panelClass]
                                    }, style: function () {
                                        return this.style.contentWrapper
                                    }, children: [{
                                        type: "div", attr: {}, style: function () {
                                            return this.style.content
                                        }, children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.closePng
                                                }
                                            }, style: function () {
                                                return this.style.close
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.adData.icon
                                                }
                                            }, style: function () {
                                                return this.style.icon
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.adData.appname
                                                }
                                            }, style: function () {
                                                return this.style.appname
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return "版本" + this.adData.app_version
                                                }
                                            }, style: function () {
                                                return this.style.version
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.adData.publisher
                                                }
                                            }, style: function () {
                                                return this.style.publisher
                                            }
                                        }, {
                                            type: "div", attr: {}, style: function () {
                                                return this.style.linkContainer
                                            }, children: [{
                                                type: "a", attr: {
                                                    href: function () {
                                                        return this.adData.privacy_link
                                                    }, value: "隐私"
                                                }, style: function () {
                                                    return this.style.link
                                                }
                                            }, {
                                                type: "a", attr: {
                                                    href: function () {
                                                        return this.adData.permission_link
                                                    }, value: "权限"
                                                }, style: function () {
                                                    return this.style.link
                                                }
                                            }]
                                        }, {
                                            type: "text", attr: {value: "立即下载"}, style: function () {
                                                return this.style.button
                                            }, events: {click: "btnClick"}
                                        }]
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 2681: t => {
                    t.exports = {
                        type: "div",
                        attr: {id: "feed-ad"},
                        classList: ["feed-ad"],
                        id: "feed-ad",
                        children: [{
                            type: "block",
                            attr: {},
                            shown: function () {
                                return this.isAdLoaded
                            },
                            children: [{
                                type: "div",
                                attr: {},
                                events: {appear: "onAdExpose", disappear: "onAdDisappear"},
                                classList: ["feed-ad-expose"],
                                children: [{
                                    type: "image", attr: {
                                        id: function () {
                                            return this.exposeId
                                        }
                                    }, style: {width: "1px", height: "1px"}, id: function () {
                                        return this.exposeId
                                    }
                                }]
                            }, {
                                type: "union-custom", attr: {
                                    btnAnimate: function () {
                                        return this.btnAnimate
                                    }, list: function () {
                                        return this.templateConfig
                                    }
                                }, events: {"custom-click": "customClick"}
                            }]
                        }, {
                            type: "block", attr: {}, shown: function () {
                                return this.isAdLoaded && this.isDownloadPanel && !this.customPanel
                            }, children: [{
                                type: "union-custom", attr: {
                                    btnAnimate: function () {
                                        return this.btnAnimate
                                    }, list: function () {
                                        return this.downloadPanelConfig
                                    }
                                }, events: {"custom-click": "customClick"}
                            }]
                        }]
                    }
                }, 2104: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["int-ad"], children: [{
                            type: "div",
                            attr: {id: "ad-mask"},
                            classList: ["mask"],
                            shown: function () {
                                return this.isAdLoaded
                            },
                            id: "ad-mask",
                            children: [{
                                type: "div",
                                attr: {},
                                events: {appear: "onAdExpose", disappear: "onAdDisappear"},
                                classList: ["feed-ad-expose"],
                                children: [{type: "image", attr: {}, style: {width: "1px", height: "1px"}}]
                            }, {
                                type: "div", attr: {}, classList: ["int-main"], style: function () {
                                    return this.intMainStyle
                                }, children: [{
                                    type: "div", attr: {}, classList: ["int-close"], style: function () {
                                        return this.closeStyle
                                    }, children: [{
                                        type: "text",
                                        attr: {
                                            value: function () {
                                                return this.countdown + "s"
                                            }
                                        },
                                        shown: function () {
                                            return this.countdown && !this.enableClose
                                        },
                                        events: {click: "bindTimerClick"},
                                        classList: ["ad-closed-btn-wrap", "ad-close-timer"],
                                        style: function () {
                                            return this.countDownStyle
                                        }
                                    }, {
                                        type: "image",
                                        attr: {src: "https://render-server.cdn.bcebos.com/static/images/20220629/e1acc81f1440926315591a61bb287948.png"},
                                        shown: function () {
                                            return this.enableClose
                                        },
                                        events: {click: "bindClose"},
                                        classList: ["ad-closed-btn-wrap"]
                                    }]
                                }, {
                                    type: "div", attr: {}, classList: ["int-content"], style: function () {
                                        return this.intContentStyle
                                    }, children: [{
                                        type: "union-custom", attr: {
                                            list: function () {
                                                return this.templateConfig
                                            }
                                        }, events: {"custom-click": "customClick"}
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 6754: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        style: function () {
                            return this.styleBox
                        },
                        events: {click: "onClick", touchstart: "onTouchstart"},
                        classList: ["mssp-logo"],
                        children: [{
                            type: "image", attr: {
                                src: function () {
                                    return this.logoUrl
                                }
                            }, style: function () {
                                return this.style.logoImg
                            }
                        }, {
                            type: "text", attr: {value: "广告"}, style: function () {
                                return this.style.logoText
                            }
                        }]
                    }
                }, 9669: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["mobads-ad"],
                        events: {click: "onClick", touchstart: "onTouchstart"},
                        children: [{
                            type: "image", attr: {
                                src: function () {
                                    return this.sendLogUrl
                                }
                            }, style: {height: "1px", width: "1px"}
                        }, {
                            type: "open-ad", attr: {
                                entry: function () {
                                    return this.entry
                                }, openimg: function () {
                                    return this.openimg
                                }, adstyle: function () {
                                    return this.adstyle
                                }, customclose: function () {
                                    return this.customclose
                                }, downloadpanel: function () {
                                    return this.downloadpanel
                                }, splashrestrict: function () {
                                    return this.splashrestrict
                                }, skiptime: function () {
                                    return this.skiptime
                                }
                            }, shown: function () {
                                return "rsplash" === this.type
                            }
                        }, {
                            type: "int-ad", attr: {
                                adstyle: function () {
                                    return this.adstyle
                                }, downloadpanel: function () {
                                    return this.downloadpanel
                                }
                            }, shown: function () {
                                return "int" === this.type && this.intVisible
                            }, events: {close: "intClose", "init-complete": "initComplete"}
                        }, {
                            type: "native-ad", attr: {
                                adstyle: function () {
                                    return this.adstyle
                                }, videoautoplay: function () {
                                    return this.videoautoplay
                                }, videomuted: function () {
                                    return this.videomuted
                                }, downloadpanel: function () {
                                    return this.downloadpanel
                                }, showvolumn: function () {
                                    return this.showvolumn
                                }, templateid: function () {
                                    return this.templateid
                                }, needrefresh: function () {
                                    return this.needrefresh
                                }
                            }, shown: function () {
                                return "feed" === this.type && this.adVisible
                            }, events: {"feedback-click": "showFeedback", "area-click": "areaClick"}
                        }, {
                            type: "reward-ad", attr: {
                                adstyle: function () {
                                    return this.adstyle
                                }, showCountdown: function () {
                                    return this.showCountdown
                                }
                            }, shown: function () {
                                return "rvideo" === this.type && this.adVisible
                            }, events: {"area-click": "areaClick"}
                        }, {
                            type: "download-panel", attr: {
                                visible: function () {
                                    return this.panelVisible
                                }
                            }, events: {"panel-close": "downloadPanelClose", "download-click": "downloadClick"}
                        }]
                    }
                }, 9574: t => {
                    t.exports = {
                        type: "div", attr: {id: "open-screen-ad"}, style: function () {
                            return this.style.rootStyle
                        }, id: "open-screen-ad", children: [{
                            type: "stack", attr: {}, style: function () {
                                return this.style.containerStyle
                            }, children: [{
                                type: "div", attr: {}, style: function () {
                                    return this.style.imgWrapStyle
                                }, classList: ["imgWrapStyle"], children: [{
                                    type: "image", attr: {
                                        src: function () {
                                            return this.openimg
                                        }
                                    }, style: function () {
                                        return this.style.imgStyle
                                    }, events: {error: "imgLoadErr"}
                                }]
                            }, {
                                type: "stack", attr: {}, style: function () {
                                    return this.style.imgWrapStyle
                                }, classList: ["imgWrapStyle", "openImgWrap"], shown: function () {
                                    return this.isshow
                                }, children: [{
                                    type: "image", attr: {
                                        src: function () {
                                            return this.imgUrl
                                        }
                                    }, style: function () {
                                        return this.style.imgStyle
                                    }, events: {complete: "imgLoadCompleted", error: "imgLoadErr"}
                                }, {
                                    type: "div", attr: {}, style: function () {
                                        return this.style.adBtnWrapStyle
                                    }, shown: function () {
                                        return this.showSplashBtn
                                    }, children: [{
                                        type: "text", attr: {
                                            dataId: "open-ad-btn", value: function () {
                                                return this.btnText
                                            }
                                        }, style: function () {
                                            return this.style.adBtnStyle
                                        }, classList: ["open-ad-btn"]
                                    }]
                                }, {
                                    type: "div", attr: {}, style: function () {
                                        return this.style.logoWrapStyle
                                    }, children: [{
                                        type: "ad-logo", attr: {
                                            entry: function () {
                                                return this.entry
                                            }
                                        }, events: {"logo-click": "logoClick"}
                                    }]
                                }]
                            }, {
                                type: "div",
                                attr: {},
                                style: function () {
                                    return this.style.closeWrapStyle
                                },
                                classList: ["ad-closed-btn-wrap"],
                                children: [{
                                    type: "text", attr: {
                                        value: function () {
                                            return this.countdown + " 跳过"
                                        }
                                    }, style: function () {
                                        return this.style.closeBtnStyle
                                    }, shown: function () {
                                        return 1 === this.closetype
                                    }, events: {click: "onAdSkip"}
                                }, {
                                    type: "skip-circle", attr: {
                                        content: "跳过", size: function () {
                                            return this.circleSize
                                        }, percent: function () {
                                            return this.percent
                                        }
                                    }, events: {click: "onAdSkip"}, shown: function () {
                                        return 5 === this.closetype
                                    }
                                }]
                            }]
                        }, {
                            type: "div", attr: {}, shown: function () {
                                return this.isDownloadPanel
                            }, style: function () {
                                return this.style.downloadStyle
                            }, children: [{
                                type: "text", attr: {
                                    value: function () {
                                        return "版本 " + this.adData.app_version
                                    }
                                }, style: function () {
                                    return this.style.version
                                }
                            }, {
                                type: "text", attr: {value: "隐私"}, style: function () {
                                    return this.style.downloadText
                                }, events: {click: "privacyClick"}
                            }, {
                                type: "text", attr: {value: "权限"}, style: function () {
                                    return this.style.downloadText
                                }, events: {click: "permissionClick"}
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return this.adData.publisher
                                    }
                                }, style: function () {
                                    return this.style.publisher
                                }
                            }]
                        }]
                    }
                }, 6245: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["reward-ad"],
                        children: [{
                            type: "union-custom", attr: {
                                list: function () {
                                    return this.templateConfig
                                }
                            }, events: {"custom-click": "customClick"}
                        }]
                    }
                }, 5515: t => {
                    t.exports = {
                        type: "div", attr: {
                            id: function () {
                                return "ylh-ad-" + this.adId
                            }
                        }, id: function () {
                            return "ylh-ad-" + this.adId
                        }, events: {appear: "onAppear"}, children: [{type: "slot", attr: {name: "default"}}]
                    }
                }, 1770: t => {
                    t.exports = {
                        type: "div", attr: {
                            id: function () {
                                return "ylh-ad-clickable-" + this.adId
                            }
                        }, id: function () {
                            return "ylh-ad-clickable-" + this.adId
                        }, events: {click: "onClick"}, children: [{type: "slot", attr: {name: "default"}}]
                    }
                }, 4652: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["ad-count-down"],
                        style: function () {
                            return this.getBtnPosition
                        },
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["time"],
                            events: {click: "skip"},
                            shown: function () {
                                return this.time > 0
                            },
                            children: [{
                                type: "block", attr: {}, shown: function () {
                                    return 1 === this.buttonStyle
                                }, children: [{
                                    type: "text", attr: {
                                        value: function () {
                                            return this.buttonText
                                        }
                                    }
                                }, {type: "text", attr: {value: "|"}, classList: ["divide"]}]
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return this.time + "s"
                                    }
                                }
                            }, {
                                type: "block",
                                attr: {},
                                shown: function () {
                                    return 2 === this.buttonStyle
                                },
                                children: [{type: "text", attr: {value: "|"}, classList: ["divide"]}, {
                                    type: "text",
                                    attr: {
                                        value: function () {
                                            return this.buttonText
                                        }
                                    }
                                }]
                            }]
                        }]
                    }
                }, 9474: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        style: {
                            justifyContent: "center", alignItems: "center", width: function () {
                                return this.myButtonStyle.width + "px"
                            }, height: function () {
                                return this.myButtonStyle.height + "px"
                            }, borderRadius: function () {
                                return this.myButtonStyle.radio + "px"
                            }
                        },
                        children: [{
                            type: "image", attr: {
                                src: function () {
                                    return this.myButtonStyle.image
                                }
                            }, style: {
                                position: "absolute", left: "0px", top: "0px", width: function () {
                                    return this.myButtonStyle.width + "px"
                                }, height: function () {
                                    return this.myButtonStyle.height + "px"
                                }, objectFit: "fill"
                            }
                        }, {
                            type: "text",
                            attr: {
                                value: function () {
                                    return this.myButtonStyle.text || "去加桌"
                                }
                            },
                            events: {click: "addDesktopNormalClickHandle"},
                            classList: ["add-desktop-button"],
                            style: {
                                textAlign: "center", width: function () {
                                    return this.myButtonStyle.width + "px"
                                }, fontSize: function () {
                                    return this.myButtonStyle.font + "px"
                                }, color: function () {
                                    return this.myButtonStyle.color
                                }, height: function () {
                                    return this.myButtonStyle.height + "px"
                                }, borderRadius: function () {
                                    return this.myButtonStyle.radio + "px"
                                }, backgroundImage: function () {
                                    return "url(" + this.myButtonStyle.image + ")"
                                }, backgroundColor: function () {
                                    return this.myButtonStyle.bgColor
                                }
                            },
                            shown: function () {
                                return 0 == this.addDesktopType
                            }
                        }, {
                            type: "input", attr: {
                                type: function () {
                                    return this.eventbutton
                                }, eventtype: function () {
                                    return this.eventtype
                                }, value: function () {
                                    return this.myButtonStyle.text || "去加桌"
                                }
                            }, shown: function () {
                                return 1 == this.addDesktopType && !(0 == this.addDesktopType)
                            }, classList: ["add-desktop-button"], style: {
                                textAlign: "center", width: function () {
                                    return this.myButtonStyle.width + "px"
                                }, fontSize: function () {
                                    return this.myButtonStyle.font + "px"
                                }, color: function () {
                                    return this.myButtonStyle.color
                                }, borderRadius: function () {
                                    return this.myButtonStyle.radio + "px"
                                }, backgroundColor: function () {
                                    return this.myButtonStyle.bgColor
                                }, height: function () {
                                    return this.myButtonStyle.height + "px"
                                }
                            }, events: {click: "addDesktopClickHandle"}
                        }, {
                            type: "vivo-shortcutbtn", attr: {
                                value: function () {
                                    return this.myButtonStyle.text || "去加桌"
                                }
                            }, shown: function () {
                                return !(2 != this.addDesktopType || 0 == this.addDesktopType || 1 == this.addDesktopType)
                            }, classList: ["add-desktop-button"], style: {
                                textAlign: "center", width: function () {
                                    return this.myButtonStyle.width + "px"
                                }, fontSize: function () {
                                    return this.myButtonStyle.font + "px"
                                }, color: function () {
                                    return this.myButtonStyle.color
                                }, borderRadius: function () {
                                    return this.myButtonStyle.radio + "px"
                                }, backgroundColor: function () {
                                    return this.myButtonStyle.bgColor
                                }, height: function () {
                                    return this.myButtonStyle.height + "px"
                                }
                            }, events: {click: "addDesktopClickHandle"}
                        }, {
                            type: "shortcut-button", attr: {
                                value: function () {
                                    return this.myButtonStyle.text || "去加桌"
                                }
                            }, shown: function () {
                                return !(3 != this.addDesktopType || 0 == this.addDesktopType || 1 == this.addDesktopType || 2 == this.addDesktopType)
                            }, classList: ["add-desktop-button"], style: {
                                textAlign: "center", width: function () {
                                    return this.myButtonStyle.width + "px"
                                }, fontSize: function () {
                                    return this.myButtonStyle.font + "px"
                                }, color: function () {
                                    return this.myButtonStyle.color
                                }, borderRadius: function () {
                                    return this.myButtonStyle.radio + "px"
                                }, backgroundColor: function () {
                                    return this.myButtonStyle.bgColor
                                }, height: function () {
                                    return this.myButtonStyle.height + "px"
                                }
                            }, events: {click: "addDesktopClickHandle"}
                        }]
                    }
                }, 1669: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["wrapper"], children: [{
                            type: "div", attr: {}, classList: ["ad-view-out"], shown: function () {
                                return this.popConfig
                            }, children: [{
                                type: "div",
                                attr: {},
                                classList: ["adStyle"],
                                children: [{
                                    type: "image", attr: {
                                        src: function () {
                                            return this.popConfig.maskStyle.image
                                        }
                                    }, classList: ["mask"]
                                }, {
                                    type: "block",
                                    attr: {},
                                    shown: function () {
                                        return this.advConfig && this.popConfig.menubarStyle.isShow
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["menu-bar-wrapper"],
                                        shown: function () {
                                            return 2 == this.popConfig.menubarStyle.showType
                                        },
                                        style: {
                                            width: function () {
                                                return this.popConfig.menubarStyle.width + "px"
                                            }, height: function () {
                                                return this.popConfig.menubarStyle.height + "px"
                                            }, borderRadius: function () {
                                                return this.popConfig.menubarStyle.radio + "px"
                                            }, position: "fixed", left: function () {
                                                return (750 - this.popConfig.menubarStyle.width) / 2 + "px"
                                            }, top: "0px"
                                        },
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.popConfig.menubarStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.popConfig.menubarStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.menubarStyle.height + "px"
                                                }, objectFit: "fill"
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, shown: function () {
                                            return 1 == this.popConfig.menubarStyle.showType && !(2 == this.popConfig.menubarStyle.showType)
                                        }, style: {
                                            position: "fixed",
                                            backgroundColor: "#ffffff",
                                            top: function () {
                                                return this.menuBarTop + "px"
                                            },
                                            height: function () {
                                                return ("huawei" == this.advConfig.brand ? 66 : 52) + "px"
                                            },
                                            width: function () {
                                                return 750 - 2 * this.menuBarRight + "px"
                                            },
                                            left: function () {
                                                return this.menuBarRight + "px"
                                            },
                                            justifyContent: "flex-start",
                                            alignItems: "center",
                                            textAlign: "center",
                                            borderRadius: function () {
                                                return ("huawei" == this.advConfig.brand ? 33 : 26) + "px"
                                            },
                                            paddingTop: "0px",
                                            paddingRight: "24px",
                                            paddingBottom: "0px",
                                            paddingLeft: "24px"
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.popConfig.menubarStyle.text
                                                }
                                            }, style: {
                                                fontSize: "24px", fontWeight: "400", color: function () {
                                                    return this.popConfig.menubarStyle.color ? this.popConfig.menubarStyle.color : "#333333"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "image",
                                    attr: {src: "https://imgs.syreads.com/quick_static/-e-back_white@2x.png"},
                                    shown: function () {
                                        return this.popConfig.btnBackIsDisplay
                                    },
                                    classList: ["back-close-icon"],
                                    events: {click: "backIconClick"}
                                }, {
                                    type: "div", attr: {}, classList: ["mask"], style: {
                                        opacity: function () {
                                            return this.popConfig.maskStyle.opacity
                                        }, backgroundColor: "#000000"
                                    }
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["ad-native"],
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return this.popShowGif
                                        },
                                        classList: ["before-gif"],
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.popShowGifImg
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return !this.popShowGif
                                        },
                                        classList: ["ad-content"],
                                        style: {
                                            flexDirection: "column",
                                            justifyContent: "center",
                                            alignItems: "center",
                                            alignSelf: "center"
                                        },
                                        children: [{
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.popConfig.closeStyle.isShow && 1 == this.popConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.popConfig.closeStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.popConfig.closeStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.closeStyle.height + "px"
                                                }, marginBottom: function () {
                                                    return this.popConfig.closeStyle.distance + "px"
                                                }, opacity: function () {
                                                    return this.popConfig.closeStyle.opacity
                                                }, objectFit: "fill"
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "div", attr: {
                                                show: function () {
                                                    return 1 == this.popConfig.crowdStyle.position && this.popConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.popConfig.crowdStyle.width + "px"
                                                },
                                                height: function () {
                                                    return this.popConfig.crowdStyle.height + "px"
                                                },
                                                alignItems: "center",
                                                justifyContent: "center",
                                                textAlign: "center",
                                                marginBottom: function () {
                                                    return this.popConfig.crowdStyle.distance + this.popConfig.crowdStyle.between + "px"
                                                },
                                                marginTop: function () {
                                                    return this.popConfig.crowdStyle.distance + "px"
                                                }
                                            }, children: [{
                                                type: "image",
                                                attr: {
                                                    src: function () {
                                                        return this.popConfig.crowdStyle.image
                                                    }
                                                },
                                                style: {
                                                    width: "100%",
                                                    height: "100%",
                                                    position: "absolute",
                                                    left: "0px",
                                                    top: "0px",
                                                    objectFit: "fill"
                                                }
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.popConfig.crowdStyle.text
                                                    }
                                                }, style: {
                                                    fontSize: function () {
                                                        return this.popConfig.crowdStyle.font + "px"
                                                    }, color: function () {
                                                        return this.popConfig.crowdStyle.color
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div", attr: {}, style: {
                                                width: function () {
                                                    return this.popConfig.popStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.popStyle.height >= this.popConfig.materialStyle.height + this.popConfig.materialStyle.top ? this.popConfig.popStyle.height + Number(this.popConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.popConfig.materialStyle.height + this.popConfig.materialStyle.top + Number(this.popConfig.customBoxStyle.style.height.split("px")[0]) + "px"
                                                }, flexDirection: "column"
                                            }, children: [{
                                                type: "div", attr: {}, shown: function () {
                                                    return this.popConfig.customTextStyle.canShow
                                                }, style: function () {
                                                    return this.popConfig.customBoxStyle.style
                                                }
                                            }, {
                                                type: "image", attr: {
                                                    src: function () {
                                                        return this.popConfig.popStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return this.popConfig.popStyle.width + "px"
                                                    }, height: function () {
                                                        return this.popConfig.popStyle.height + "px"
                                                    }, position: "absolute", left: "0px", top: "0px", objectFit: "fill"
                                                }
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return this.popConfig.closeStyle.isShow && 3 == this.popConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.popConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    position: "absolute", width: function () {
                                                        return this.popConfig.closeStyle.width + "px"
                                                    }, height: function () {
                                                        return this.popConfig.closeStyle.height + "px"
                                                    }, opacity: function () {
                                                        return this.popConfig.closeStyle.opacity
                                                    }, objectFit: "fill", left: "10px", top: function () {
                                                        return this.popConfig.closeStyle.top + 10 + "px"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return this.popConfig.closeStyle.isShow && 4 == this.popConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.popConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    position: "absolute", width: function () {
                                                        return this.popConfig.closeStyle.width + "px"
                                                    }, height: function () {
                                                        return this.popConfig.closeStyle.height + "px"
                                                    }, opacity: function () {
                                                        return this.popConfig.closeStyle.opacity
                                                    }, objectFit: "fill", right: "10px", top: function () {
                                                        return this.popConfig.closeStyle.top + 10 + "px"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: function () {
                                                    return ["ad-btn", this.popConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                },
                                                events: {
                                                    click: function (t) {
                                                        return this.adClickForBtn(t)
                                                    }
                                                },
                                                style: {
                                                    justifyContent: "center",
                                                    position: "absolute",
                                                    alignItems: "center",
                                                    top: function () {
                                                        return this.popConfig.btnStyle.top - this.popConfig.btnStyle.hotTop + "px"
                                                    },
                                                    left: function () {
                                                        return this.popConfig.btnStyle.left - this.popConfig.btnStyle.hotAbout + "px"
                                                    },
                                                    width: function () {
                                                        return this.popConfig.btnStyle.width + 2 * this.popConfig.btnStyle.hotAbout + "px"
                                                    },
                                                    height: function () {
                                                        return this.popConfig.btnStyle.height + this.popConfig.btnStyle.hotTop + this.popConfig.btnStyle.hotBottom + "px"
                                                    },
                                                    paddingLeft: function () {
                                                        return this.popConfig.btnStyle.hotAbout + "px"
                                                    },
                                                    paddingRight: function () {
                                                        return this.popConfig.btnStyle.hotAbout + "px"
                                                    },
                                                    paddingTop: function () {
                                                        return this.popConfig.btnStyle.hotTop + "px"
                                                    },
                                                    paddingBottom: function () {
                                                        return this.popConfig.btnStyle.hotBottom + "px"
                                                    },
                                                    marginTop: function () {
                                                        return this.popConfig.customBoxStyle.style.height
                                                    }
                                                },
                                                children: [{
                                                    type: "div",
                                                    attr: {},
                                                    style: {
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        width: function () {
                                                            return this.popConfig.btnStyle.width + "px"
                                                        },
                                                        height: function () {
                                                            return this.popConfig.btnStyle.height + "px"
                                                        },
                                                        backgroundColor: function () {
                                                            return this.popConfig.btnStyle.bgColor
                                                        },
                                                        borderRadius: function () {
                                                            return this.popConfig.btnStyle.radio + "px"
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image",
                                                        attr: {
                                                            src: function () {
                                                                return this.popConfig.btnStyle.image
                                                            }
                                                        },
                                                        style: {
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px",
                                                            width: function () {
                                                                return this.popConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.popConfig.btnStyle.height + "px"
                                                            },
                                                            objectFit: "fill"
                                                        }
                                                    }, {
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.popConfig.btnStyle.text ? this.popConfig.btnStyle.text : this.advConfig.clickBtnTxt ? this.advConfig.clickBtnTxt : "查看广告"
                                                            }
                                                        }, style: {
                                                            textAlign: "center", fontSize: function () {
                                                                return this.popConfig.btnStyle.font + "px"
                                                            }, color: function () {
                                                                return this.popConfig.btnStyle.color
                                                            }, height: function () {
                                                                return this.popConfig.btnStyle.height + "px"
                                                            }
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {
                                                    show: function () {
                                                        return this.popConfig.negStyle.isShow
                                                    }
                                                },
                                                classList: ["cancel_btn"],
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    position: "absolute",
                                                    top: function () {
                                                        return this.popConfig.negStyle.top + "px"
                                                    },
                                                    left: function () {
                                                        return this.popConfig.negStyle.left + "px"
                                                    },
                                                    width: function () {
                                                        return this.popConfig.negStyle.width ? this.popConfig.negStyle.width + "px" : "auto"
                                                    },
                                                    height: function () {
                                                        return (this.popConfig.negStyle.height ? this.popConfig.negStyle.height : this.popConfig.negStyle.font) + "px"
                                                    },
                                                    backgroundImage: function () {
                                                        return this.popConfig.negStyle.icon
                                                    },
                                                    backgroundPosition: "center center",
                                                    backgroundSize: function () {
                                                        return this.popConfig.negStyle.width + "px " + this.popConfig.negStyle.height + "px"
                                                    },
                                                    backgroundRepeat: "no-repeat",
                                                    borderRadius: function () {
                                                        return this.popConfig.negStyle.radio + "px"
                                                    },
                                                    marginTop: function () {
                                                        return this.popConfig.customBoxStyle.style.height
                                                    }
                                                },
                                                children: [{
                                                    type: "image",
                                                    attr: {
                                                        src: function () {
                                                            return this.popConfig.negStyle.icon
                                                        }
                                                    },
                                                    style: {
                                                        width: "100%",
                                                        height: "100%",
                                                        position: "absolute",
                                                        left: "0px",
                                                        top: "0px"
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.popConfig.negStyle.text
                                                        }
                                                    }, events: {click: "negClick"}, style: {
                                                        fontSize: function () {
                                                            return this.popConfig.negStyle.font + "px"
                                                        }, color: function () {
                                                            return this.popConfig.negStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["ad-btn"],
                                                events: {click: "adClickForImg"},
                                                style: {
                                                    width: function () {
                                                        return this.popConfig.materialStyle.width + "px"
                                                    }, height: function () {
                                                        return this.popConfig.materialStyle.height + "px"
                                                    }, top: function () {
                                                        return this.popConfig.materialStyle.top + "px"
                                                    }, left: function () {
                                                        return (this.popConfig.popStyle.width - this.popConfig.materialStyle.width) / 2 + "px"
                                                    }, position: "absolute", marginTop: function () {
                                                        return this.popConfig.customBoxStyle.style.height
                                                    }
                                                },
                                                children: [{
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.advConfig && this.advConfig.materialUrl
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return this.popConfig.materialStyle.width + "px"
                                                        }, height: function () {
                                                            return this.popConfig.materialStyle.height + "px"
                                                        }, objectFit: "fill", borderTopLeftRadius: function () {
                                                            return "8px"
                                                        }, borderTopRightRadius: function () {
                                                            return "8px"
                                                        }, borderBottomRightRadius: function () {
                                                            return "8px"
                                                        }, borderBottomLeftRadius: function () {
                                                            return "8px"
                                                        }
                                                    }
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-mask"],
                                                    children: [{type: "text", attr: {value: "广告"}}]
                                                }]
                                            }, {
                                                type: "div", attr: {}, shown: function () {
                                                    return this.popConfig.customTextStyle.canShow
                                                }, style: function () {
                                                    return this.popConfig.customTextStyle.style
                                                }, children: [{
                                                    type: "text", attr: {
                                                        id: function () {
                                                            return "@" == this.item.text ? "anTran" : ""
                                                        }, value: function () {
                                                            return this.replaceText("@" != this.item.text ? this.item.text : this.changeable)
                                                        }
                                                    }, repeat: {
                                                        exp: function () {
                                                            return this.popConfig.customTextStyle.text
                                                        }, value: "item"
                                                    }, style: function () {
                                                        return this.item.style
                                                    }, id: function () {
                                                        return "@" == this.item.text ? "anTran" : ""
                                                    }, classList: function () {
                                                        return ["@" == this.item.text || "@city" == this.item.text || "@brand" == this.item.text ? this.transAn : ""]
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "div", attr: {
                                                show: function () {
                                                    return 2 == this.popConfig.crowdStyle.position && this.popConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.popConfig.crowdStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.crowdStyle.height + "px"
                                                }, justifyContent: "center", marginBottom: function () {
                                                    return this.popConfig.crowdStyle.distance + "px"
                                                }, marginTop: function () {
                                                    return this.popConfig.crowdStyle.distance + this.popConfig.crowdStyle.between + "px"
                                                }
                                            }, children: [{
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.popConfig.crowdStyle.text
                                                    }
                                                }, style: {
                                                    fontSize: function () {
                                                        return this.popConfig.crowdStyle.font + "px"
                                                    }, color: function () {
                                                        return this.popConfig.crowdStyle.color
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.popConfig.closeStyle.isShow && 2 == this.popConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.popConfig.closeStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.popConfig.closeStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.closeStyle.height + "px"
                                                }, marginTop: function () {
                                                    return this.popConfig.closeStyle.distance + "px"
                                                }, opacity: function () {
                                                    return this.popConfig.closeStyle.opacity
                                                }, objectFit: "fill"
                                            }, events: {click: "closeClick"}
                                        }]
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 6478: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["app-info"], children: [{
                            type: "div", attr: {}, shown: function () {
                                return 1 == this.rows
                            }, children: [{
                                type: "text", attr: {
                                    value: function () {
                                        return this.appInfo.appName
                                    }
                                }, classList: ["ellipsis"], style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }, maxWidth: function () {
                                        return (22 != this.fSize ? 60 : 90) + "px"
                                    }
                                }
                            }, {
                                type: "text", attr: {value: "｜"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }
                                }
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return (this.appInfo.appSize / 1e3).toFixed(0) + "MB"
                                    }
                                }, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }
                                }, shown: function () {
                                    return this.appInfo.appSize
                                }
                            }, {
                                type: "text", attr: {value: "｜"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }
                                }, shown: function () {
                                    return this.appInfo.appSize
                                }
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return this.appInfo.developer
                                    }
                                }, classList: ["ellipsis"], style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }, maxWidth: function () {
                                        return (22 != this.fSize ? 60 : 90) + "px"
                                    }
                                }
                            }, {
                                type: "text", attr: {value: "｜"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }
                                }, shown: function () {
                                    return this.appInfo.appVersion
                                }
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return "v" + this.appInfo.appVersion
                                    }
                                }, shown: function () {
                                    return this.appInfo.appVersion
                                }, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }, width: function () {
                                        return this.vWidth
                                    }
                                }
                            }, {
                                type: "text", attr: {value: "隐私"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }, width: "55px"
                                }, shown: function () {
                                    return this.appInfo.appPrivacyUrl
                                }, events: {click: "toPrivacy"}
                            }, {
                                type: "text", attr: {value: "｜"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }
                                }, shown: function () {
                                    return this.appInfo.appPermissionUrl
                                }
                            }, {
                                type: "text", attr: {value: "权限"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }, width: "55px"
                                }, shown: function () {
                                    return this.appInfo.appPermissionUrl
                                }, events: {click: "toPermission"}
                            }, {
                                type: "text", attr: {value: "｜"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }
                                }, shown: function () {
                                    return this.appInfo.introduce
                                }
                            }, {
                                type: "text", attr: {value: "介绍"}, style: {
                                    fontSize: function () {
                                        return this.fSize + "px"
                                    }, width: "55px"
                                }, shown: function () {
                                    return this.appInfo.introduce
                                }, events: {click: "toIntroduce"}
                            }]
                        }, {
                            type: "div",
                            attr: {},
                            shown: function () {
                                return !(1 == this.rows)
                            },
                            style: {flexDirection: "column"},
                            children: [{
                                type: "div", attr: {}, children: [{
                                    type: "text", attr: {
                                        value: function () {
                                            return this.appInfo.appName
                                        }
                                    }, classList: ["ellipsis"], style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }, maxWidth: function () {
                                            return (22 != this.fSize ? 60 : 90) + "px"
                                        }
                                    }
                                }, {
                                    type: "text", attr: {value: "｜"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appVersion
                                    }
                                }, {
                                    type: "text", attr: {
                                        value: function () {
                                            return "v" + this.appInfo.appVersion
                                        }
                                    }, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appVersion
                                    }
                                }, {
                                    type: "text", attr: {value: "｜"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appPrivacyUrl
                                    }
                                }, {
                                    type: "text", attr: {value: "隐私"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appPrivacyUrl
                                    }, events: {click: "toPrivacy"}
                                }]
                            }, {
                                type: "div", attr: {}, children: [{
                                    type: "text", attr: {
                                        value: function () {
                                            return this.appInfo.developer
                                        }
                                    }, classList: ["ellipsis"], style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }, maxWidth: function () {
                                            return (22 != this.fSize ? 60 : 90) + "px"
                                        }
                                    }
                                }, {
                                    type: "text", attr: {value: "｜"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }
                                }, {
                                    type: "text", attr: {
                                        value: function () {
                                            return (this.appInfo.appSize / 1e3).toFixed(0) + "MB"
                                        }
                                    }, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appSize
                                    }
                                }, {
                                    type: "text", attr: {value: "｜"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appSize
                                    }
                                }, {
                                    type: "text", attr: {value: "权限"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.appPermissionUrl
                                    }, events: {click: "toPermission"}
                                }, {
                                    type: "text", attr: {value: "｜"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.introduce
                                    }
                                }, {
                                    type: "text", attr: {value: "介绍"}, style: {
                                        fontSize: function () {
                                            return this.fSize + "px"
                                        }
                                    }, shown: function () {
                                        return this.appInfo.introduce
                                    }, events: {click: "toIntroduce"}
                                }]
                            }]
                        }]
                    }
                }, 3671: t => {
                    t.exports = {
                        type: "div", attr: {}, children: [{
                            type: "div",
                            attr: {},
                            classList: ["bqt-wrapper"],
                            style: {
                                width: "100%",
                                height: "100%",
                                position: "fixed",
                                transform: function () {
                                    return "scaleX(" + (this.isSuccess ? 1 : 0) + ") scaleY(" + (this.isSuccess ? 1 : 0) + ")"
                                },
                                justifyContent: "center",
                                alignItems: "center",
                                textAlign: "center",
                                flexDirection: "column"
                            },
                            children: [{
                                type: "image",
                                attr: {src: "https://imgs.syreads.com/quick_static/-e-back_white@2x.png"},
                                shown: function () {
                                    return this.popConfig.btnBackIsDisplay && this.isSuccess
                                },
                                classList: ["back-close-icon"],
                                events: {click: "backIconClick"}
                            }, {
                                type: "image", attr: {
                                    src: function () {
                                        return this.popConfig.maskStyle.image
                                    }
                                }, style: {width: "100%", height: "100%", objectFit: "fill", position: "absolute"}
                            }, {
                                type: "div", attr: {}, classList: ["mask"], style: {
                                    opacity: function () {
                                        return this.popConfig.maskStyle.opacity
                                    }, backgroundColor: "#000000"
                                }
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["menubar-bqt-wrapper"],
                                shown: function () {
                                    return this.popConfig.materialStyle.isAdCover
                                },
                                style: {width: "750px", position: "absolute", top: "0px", backgroundColor: "#ffffff"},
                                children: [{
                                    type: "mobads-ad",
                                    attr: {
                                        apid: "8004118", appid: function () {
                                            return this.advConfig.app_id
                                        }, type: "feed", templateid: "3303", downloadpanel: function () {
                                            return this.downloadpanel
                                        }
                                    },
                                    events: {
                                        "ad-load": "adLoadHandleBl",
                                        "ad-click": "adClickHandleBl",
                                        "ad-show": "adShowHandleBl",
                                        "ad-error": "adErrorHandleBl"
                                    }
                                }]
                            }, {
                                type: "div", attr: {}, classList: ["bqt-content"], style: {
                                    transform: function () {
                                        return "scaleX(" + this.popConfig.commonStyle.scale + ") scaleY(" + this.popConfig.commonStyle.scale + ")"
                                    }
                                }, children: [{
                                    type: "image", attr: {
                                        show: function () {
                                            return this.popConfig.closeStyle.isShow && 1 == this.popConfig.closeStyle.position
                                        }, src: function () {
                                            return this.popConfig.closeStyle.image
                                        }
                                    }, style: {
                                        width: function () {
                                            return this.popConfig.closeStyle.widthHeight * this.popConfig.commonStyle.scale + "px"
                                        }, height: function () {
                                            return this.popConfig.closeStyle.widthHeight * this.popConfig.commonStyle.scale + "px"
                                        }, marginBottom: function () {
                                            return this.popConfig.closeStyle.distance * this.popConfig.commonStyle.scale + "px"
                                        }, opacity: function () {
                                            return this.popConfig.closeStyle.opacity
                                        }, objectFit: "fill"
                                    }, events: {click: "closeClick"}
                                }, {
                                    type: "div", attr: {}, style: {
                                        width: function () {
                                            return this.popConfig.popStyle.width + "px"
                                        },
                                        height: function () {
                                            return this.popConfig.popStyle.height + "px"
                                        },
                                        justifyContent: "center",
                                        alignItems: "center",
                                        textAlign: "center",
                                        flexDirection: "column"
                                    }, children: [{
                                        type: "image", attr: {
                                            src: function () {
                                                return this.popConfig.popStyle.image
                                            }
                                        }, style: {width: "100%", height: "100%", objectFit: "fill"}
                                    }, {
                                        type: "image", attr: {
                                            show: function () {
                                                return this.popConfig.closeStyle.isShow && 3 == this.popConfig.closeStyle.position
                                            }, src: function () {
                                                return this.popConfig.closeStyle.image
                                            }
                                        }, style: {
                                            position: "absolute", width: function () {
                                                return this.popConfig.closeStyle.widthHeight + "px"
                                            }, height: function () {
                                                return this.popConfig.closeStyle.widthHeight + "px"
                                            }, opacity: function () {
                                                return this.popConfig.closeStyle.opacity
                                            }, objectFit: "fill", left: "10px", top: function () {
                                                return this.popConfig.closeStyle.top + 10 + "px"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "image", attr: {
                                            show: function () {
                                                return this.popConfig.closeStyle.isShow && 4 == this.popConfig.closeStyle.position
                                            }, src: function () {
                                                return this.popConfig.closeStyle.image
                                            }
                                        }, style: {
                                            position: "absolute", width: function () {
                                                return this.popConfig.closeStyle.widthHeight + "px"
                                            }, height: function () {
                                                return this.popConfig.closeStyle.widthHeight + "px"
                                            }, opacity: function () {
                                                return this.popConfig.closeStyle.opacity
                                            }, objectFit: "fill", right: "10px", top: function () {
                                                return this.popConfig.closeStyle.top + 10 + "px"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div", attr: {}, style: {
                                            width: function () {
                                                return this.popConfig.materialStyle.width + 20 + "px"
                                            },
                                            position: "absolute",
                                            left: function () {
                                                return (750 - this.popConfig.materialStyle.width - 20) / 2 + "px"
                                            },
                                            top: function () {
                                                return this.popConfig.materialStyle.materialAndBtnTop + "px"
                                            },
                                            justifyContent: "center",
                                            alignItems: "center",
                                            textAlign: "center",
                                            flexDirection: "column",
                                            overflow: "hidden"
                                        }, children: [{
                                            type: "mobads-ad",
                                            attr: {
                                                apid: function () {
                                                    return this.advConfig.id
                                                }, appid: function () {
                                                    return this.advConfig.app_id
                                                }, type: "feed", templateid: function () {
                                                    return this.advConfig.bqt_template_encode
                                                }, downloadpanel: function () {
                                                    return this.downloadpanel
                                                }, videoautoplay: function () {
                                                    return this.videoautoplay
                                                }, videomuted: function () {
                                                    return this.videomuted
                                                }, showvolumn: function () {
                                                    return this.showvolumn
                                                }, refresh: function () {
                                                    return this.refresh
                                                }, adstyle: function () {
                                                    return this.adStyle
                                                }
                                            },
                                            events: {
                                                "ad-load": "adLoadHandle",
                                                "ad-click": "adClickHandle",
                                                "ad-show": "adShowHandle",
                                                "ad-closed": "adCloseHandle",
                                                "ad-error": "adErrorHandle",
                                                "download-click": "adDownloadClickHandle",
                                                "download-close": "adDownloadCloseHandle",
                                                "download-show": "adDownloadShowHandle",
                                                downloaded: "adDownloadedHandle"
                                            }
                                        }, {
                                            type: "div", attr: {
                                                show: function () {
                                                    return this.popConfig.negStyle.isShow
                                                }
                                            }, classList: ["cancel_btn"], events: {click: "negClick"}, style: {
                                                justifyContent: "center",
                                                alignItems: "center",
                                                marginTop: function () {
                                                    return 2 == this.popConfig.btnStyle.position ? "0px" : "10px"
                                                },
                                                width: function () {
                                                    return 2 == this.popConfig.btnStyle.position ? this.popConfig.btnStyle.width + "px" : this.popConfig.negStyle.width ? this.popConfig.negStyle.width + "px" : "auto"
                                                },
                                                height: function () {
                                                    return (2 == this.popConfig.btnStyle.position ? this.popConfig.btnStyle.height : this.popConfig.negStyle.height ? this.popConfig.negStyle.height : this.popConfig.negStyle.font) + "px"
                                                },
                                                borderRadius: function () {
                                                    return (2 == this.popConfig.btnStyle.position ? this.popConfig.btnStyle.radio : this.popConfig.negStyle.radio) + "px"
                                                },
                                                position: function () {
                                                    return 2 == this.popConfig.btnStyle.position ? "absolute" : "relative"
                                                },
                                                left: function () {
                                                    return 2 == this.popConfig.btnStyle.position ? this.popConfig.btnStyle.btnRight + 10 + "px" : "auto"
                                                },
                                                top: function () {
                                                    return 2 == this.popConfig.btnStyle.position ? this.popConfig.materialStyle.height + 148 + "px" : "auto"
                                                },
                                                backgroundImage: function () {
                                                    return this.popConfig.negStyle.icon
                                                },
                                                backgroundSize: "100% 100%",
                                                backgroundRepeat: "no-repeat",
                                                backgroundPosition: "center center"
                                            }, children: [{
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.popConfig.negStyle.text
                                                    }
                                                }, style: {
                                                    fontSize: function () {
                                                        return this.popConfig.negStyle.font + "px"
                                                    }, color: function () {
                                                        return this.popConfig.negStyle.color
                                                    }
                                                }
                                            }]
                                        }]
                                    }]
                                }, {
                                    type: "image", attr: {
                                        show: function () {
                                            return this.popConfig.closeStyle.isShow && 2 == this.popConfig.closeStyle.position
                                        }, src: function () {
                                            return this.popConfig.closeStyle.image
                                        }
                                    }, style: {
                                        width: function () {
                                            return this.popConfig.closeStyle.widthHeight * this.popConfig.commonStyle.scale + "px"
                                        }, height: function () {
                                            return this.popConfig.closeStyle.widthHeight * this.popConfig.commonStyle.scale + "px"
                                        }, marginTop: function () {
                                            return this.popConfig.closeStyle.distance * this.popConfig.commonStyle.scale + "px"
                                        }, opacity: function () {
                                            return this.popConfig.closeStyle.opacity
                                        }, objectFit: "fill"
                                    }, events: {click: "closeClick"}
                                }]
                            }]
                        }, {
                            type: "ad-count-down", attr: {
                                actionCode: function () {
                                    return this.actionCode
                                }, countDownTime: function () {
                                    return this.screenConfig.screenCountDownTime
                                }
                            }, shown: function () {
                                return this.isSuccess && this.checkActionCodeIsScreen
                            }, events: {"event-watch": "endTime"}
                        }]
                    }
                }, 658: t => {
                    t.exports = {
                        type: "div", attr: {}, children: [{
                            type: "mobads-ad",
                            attr: {
                                apid: function () {
                                    return this.advConfig.id
                                }, appid: function () {
                                    return this.advConfig.app_id
                                }, type: "int", downloadpanel: function () {
                                    return !1
                                }, visible: function () {
                                    return this.intVisible
                                }
                            },
                            events: {
                                "ad-show": "adShowHandle",
                                "ad-click": "adClickHandle",
                                "ad-error": "adErrorHandle",
                                "ad-closed": "adCloseHandle"
                            }
                        }]
                    }
                }, 2662: t => {
                    t.exports = {
                        type: "div", attr: {}, children: [{
                            type: "bqt-ad-view", attr: {
                                advConfig: function () {
                                    return this.bqtConfig.advConfig
                                }, popConfig: function () {
                                    return this.bqtConfig.popConfig
                                }, adStyle: function () {
                                    return this.bqtConfig.adStyle
                                }, actionCode: function () {
                                    return this.actionCode
                                }, backPressTimes: function () {
                                    return this.backPressTimes
                                }, pageName: function () {
                                    return this.pageName
                                }, customAction: function () {
                                    return this.bqtConfig.customAction
                                }
                            }, shown: function () {
                                return this.bqtConfig.isShow
                            }, events: {"event-watch": "bqtEvnetWatchHandle"}
                        }, {
                            type: "video-ad-view", attr: {
                                popConfig: function () {
                                    return this.videoConfig.popConfig
                                }, actionCode: function () {
                                    return this.actionCode
                                }, pageName: function () {
                                    return this.pageName
                                }, backPressTimes: function () {
                                    return this.backPressTimes
                                }, customAction: function () {
                                    return this.videoConfig.customAction
                                }
                            }, shown: function () {
                                return this.videoConfig.isShow && !this.bqtConfig.isShow
                            }, events: {"event-watch": "videoEvnetWatchHandle"}
                        }, {
                            type: "app-ad-view", attr: {
                                popConfigs: function () {
                                    return this.appConfig.popConfig
                                }, advConfig: function () {
                                    return this.appConfig.advConfig
                                }, actionCode: function () {
                                    return this.actionCode
                                }, pageName: function () {
                                    return this.pageName
                                }, backPressTimes: function () {
                                    return this.backPressTimes
                                }, customAction: function () {
                                    return this.appConfig.customAction
                                }
                            }, shown: function () {
                                return this.appConfig.isShow && !this.bqtConfig.isShow && !this.videoConfig.isShow
                            }, events: {"event-watch": "appEvnetWatchHandle"}
                        }]
                    }
                }, 1257: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["close-ad-pop"],
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["warp"],
                                children: [{
                                    type: "image",
                                    attr: {src: "/assets/common/ad-pop-close.png"},
                                    events: {
                                        click: function (t) {
                                            return this.selectItem("closePop", t)
                                        }
                                    },
                                    classList: ["back-icon"]
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["content"],
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["item", "one"],
                                        shown: function () {
                                            return !this.appType
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {value: "购买VIP免广告"},
                                            classList: ["vip"],
                                            events: {
                                                click: function (t) {
                                                    return this.selectItem("toVip", t)
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["item", "two"],
                                        children: [{
                                            type: "text",
                                            attr: {value: "关闭本次广告"},
                                            classList: ["close"],
                                            events: {
                                                click: function (t) {
                                                    return this.selectItem("closeAd", t)
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["item"],
                                        children: [{
                                            type: "text",
                                            attr: {value: "举报广告"},
                                            classList: ["complaint"],
                                            events: {click: "complaintPopClick"}
                                        }]
                                    }]
                                }]
                            }]
                        }, {
                            type: "complaint-pop",
                            attr: {},
                            shown: function () {
                                return this.isShowComplaintPop
                            },
                            events: {
                                "cancel-click": "complaintPopCancelClickHandler",
                                "sure-click": "complaintPopSureClickHandler"
                            }
                        }]
                    }
                }, 9294: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["last-pop-modal"], children: [{
                            type: "div",
                            attr: {},
                            classList: ["last-pop"],
                            children: [{
                                type: "image",
                                attr: {src: "https://devims.readnos.com/image%2F2024-06-04%2F1717489649492_%E5%85%B3%E9%97%AD.png"},
                                classList: ["close-img"],
                                events: {click: "complainCancelAction"}
                            }, {
                                type: "image",
                                attr: {src: "https://devims.readnos.com/image%2F2024-06-04%2F1717488523804_%E5%9B%BE%E5%B1%82%202.png"},
                                classList: ["emptyImg"]
                            }, {
                                type: "text",
                                attr: {value: "抱歉给您带来不好的体验"},
                                classList: ["boldTip"]
                            }, {type: "text", attr: {value: "我们将持续优化"}, classList: ["tip"]}, {
                                type: "text",
                                attr: {value: "产品，并在5秒后帮您"},
                                classList: ["tip"]
                            }, {type: "text", attr: {value: "永久退出"}, classList: ["tip"]}, {
                                type: "div",
                                attr: {},
                                classList: ["handlerBox"],
                                children: [{
                                    type: "div",
                                    attr: {},
                                    classList: ["continue"],
                                    events: {click: "complainCancelAction"},
                                    children: [{type: "text", attr: {value: "继续使用"}}]
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["exit"],
                                    children: [{
                                        type: "text",
                                        attr: {value: "永久退出"},
                                        style: {color: "#424242"},
                                        events: {click: "exitHandler"}
                                    }, {
                                        type: "text", attr: {
                                            value: function () {
                                                return "(" + this.complaintCuntDown + "s)"
                                            }
                                        }, style: {color: "#FF3E3E"}
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 6670: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["prompt-pop-modal"], children: [{
                            type: "div",
                            attr: {},
                            classList: ["prompt-pop"],
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["prompt-pop-header"],
                                children: [{type: "text", attr: {value: "举报"}, classList: ["text-header"]}]
                            }, {
                                type: "image",
                                attr: {src: "/assets/images/welfare/pop-close.png"},
                                classList: ["close-img"],
                                events: {click: "complainCancelAction"}
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["prompt-pop-main"],
                                children: [{
                                    type: "div",
                                    attr: {},
                                    classList: ["call-box"],
                                    children: [{
                                        type: "text",
                                        attr: {value: "快应用投诉热线"},
                                        classList: ["call-title"]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["num-box"],
                                        children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.phone
                                                }
                                            }, classList: ["call-num"]
                                        }, {
                                            type: "text",
                                            attr: {value: "「点击拨打」"},
                                            classList: ["call-text"],
                                            events: {click: "callFn"}
                                        }]
                                    }]
                                }, {
                                    type: "text",
                                    attr: {value: "举报类型"},
                                    classList: ["prompt-item-header"]
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["prompt-box"],
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: function () {
                                            return ["select-item-box", 2 === this.$idx || 5 == this.$idx ? "m-r-0" : ""]
                                        },
                                        repeat: function () {
                                            return this.adQuestionList
                                        },
                                        events: {
                                            click: function (t) {
                                                return this.selectItem(this.$idx, t)
                                            }
                                        },
                                        children: [{
                                            type: "image",
                                            attr: {src: "/assets/common/select-active.png"},
                                            shown: function () {
                                                return this.adQuestion === this.$idx
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "/assets/common/select-default.png"},
                                            shown: function () {
                                                return !(this.adQuestion === this.$idx)
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.$item
                                                }
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["prompt-form-item"],
                                    children: [{
                                        type: "text",
                                        attr: {value: "举报描述(选填)"},
                                        classList: ["form-item-title"]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["form-item-content"],
                                        children: [{
                                            type: "textarea",
                                            attr: {
                                                id: "compaintTextarea",
                                                placeholderColor: "#999999",
                                                placeholder: function () {
                                                    return this.complaintPlaceholer
                                                },
                                                maxlength: "100",
                                                value: function () {
                                                    return this.complaintContent
                                                }
                                            },
                                            id: "compaintTextarea",
                                            classList: ["compaintContent", "inputBorder"],
                                            events: {change: "complainContentChange", click: "textareaClick"}
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["btn-box"],
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["cancael-btn", "btn"],
                                        events: {click: "complainCancelAction"},
                                        children: [{type: "text", attr: {value: "取消"}}]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["sure-btn", "btn"],
                                        events: {click: "complainSureAction"},
                                        children: [{type: "text", attr: {value: "确定"}}]
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 1022: t => {
                    t.exports = {
                        type: "div", attr: {}, style: function () {
                            return this.imgStyle
                        }, children: [{
                            type: "lottie", attr: {
                                source: function () {
                                    return this.source
                                }, autoplay: function () {
                                    return !0
                                }, loop: function () {
                                    return this.loop
                                }
                            }, shown: function () {
                                return this.isSupportLottie && this.source
                            }, style: function () {
                                return this.imgStyle
                            }, events: {error: "errorFunction"}
                        }, {
                            type: "image", attr: {
                                src: function () {
                                    return this.src
                                }
                            }, shown: function () {
                                return !(this.isSupportLottie && this.source)
                            }, style: function () {
                                return this.imgStyle
                            }
                        }]
                    }
                }, 164: t => {
                    t.exports = {
                        type: "div",
                        attr: {
                            show: function () {
                                return this.isShowPopFlag
                            }
                        },
                        classList: ["marquee-box"],
                        style: {
                            position: function () {
                                return this.posType
                            }, top: function () {
                                return this.marqueeTop
                            }, height: function () {
                                return this.marqueeHeight
                            }, left: function () {
                                return this.posLeft
                            }
                        },
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["run-box"],
                            events: {click: "backBtnClick"},
                            shown: function () {
                                return this.popBack
                            },
                            children: [{
                                type: "image",
                                attr: {src: "https://devims.readnos.com/image%2F2023-06-08%2F1686190996374_page-back.png"}
                            }]
                        }, {
                            type: "div", attr: {}, classList: ["run-box-right"], style: {
                                marginLeft: function () {
                                    return this.popBack ? "0px" : "135px"
                                }
                            }, children: [{
                                type: "swiper",
                                attr: {
                                    autoplay: function () {
                                        return this.autoPlay
                                    }, interval: function () {
                                        return this.sliderValue
                                    }, indicator: function () {
                                        return this.indicator
                                    }, vertical: function () {
                                        return this.isVertical
                                    }, loop: function () {
                                        return this.loopPlay
                                    }
                                },
                                classList: ["swiper", "swiper-animation"],
                                children: [{
                                    type: "div",
                                    attr: {},
                                    classList: ["run-content"],
                                    repeat: {
                                        exp: function () {
                                            return this.marqueeList
                                        }, key: "index", value: "item"
                                    },
                                    children: [{
                                        type: "image", attr: {
                                            src: function () {
                                                return this.item.headImg
                                            }
                                        }
                                    }, {
                                        type: "div", attr: {}, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return "[" + this.item.userName + "]获得了"
                                                }
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.item.userCoin
                                                }
                                            }, style: {color: "#ff463e"}
                                        }, {type: "text", attr: {value: "金币"}}]
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 429: t => {
                    t.exports = {
                        type: "div", attr: {}, children: [{
                            type: "block", attr: {}, repeat: {
                                exp: function () {
                                    return this.boostCompList
                                }, key: "index", value: "item"
                            }, children: [{
                                type: "div", attr: {}, style: {
                                    width: function () {
                                        return (!this.item.isSuccess || this.item.isShow || this.item.isDelete ? "0" : this.boostRect.width) + "px"
                                    }, height: function () {
                                        return (!this.item.isSuccess || this.item.isShow || this.item.isDelete ? "0" : this.boostRect.height) + "px"
                                    }, marginRight: "18px"
                                }, children: [{
                                    type: "native-boost", attr: {
                                        index: function () {
                                            return this.index
                                        }, backPressTimes: function () {
                                            return this.item.backPressTimes
                                        }, popCode: function () {
                                            return this.item.popCode
                                        }, isShowPop: function () {
                                            return this.item.isShow
                                        }, isAuditUser: function () {
                                            return this.isAuditUser
                                        }, actionCode: function () {
                                            return this.item.actionCode
                                        }, isFullScreen: function () {
                                            return this.isFullScreen
                                        }, pageName: function () {
                                            return this.pageName
                                        }, pageCode: function () {
                                            return this.pageCode
                                        }, adRequestTimes: function () {
                                            return this.adRequestTimes
                                        }, popType: function () {
                                            return this.item.popType
                                        }, winHeight: function () {
                                            return this.winHeight
                                        }, customAction: function () {
                                            return this.item.customAction
                                        }, dataPollNativeAdvObj: function () {
                                            return this.item.nativeAdvObj
                                        }
                                    }, shown: function () {
                                        return !this.item.isDelete
                                    }, events: {"event-watch": "nativeBoostEventDispatchHandler"}
                                }]
                            }]
                        }]
                    }
                }, 4596: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["wrapper"],
                        style: function () {
                            return this.wrapperStyle
                        },
                        children: [{type: "exposure-pool", attr: {}}, {
                            type: "skeleton-pop",
                            attr: {
                                skeletonImg: function () {
                                    return this.skeletonImg
                                }
                            },
                            shown: function () {
                                return this.isShowSkeleton || this.isShowEcpmSkeleton
                            }
                        }, {
                            type: "block", attr: {}, repeat: {
                                exp: function () {
                                    return this.boostCompList
                                }, key: "index", value: "item"
                            }, children: [{
                                type: "div", attr: {}, style: {
                                    opacity: function () {
                                        return this.item.time > 0 ? 0 : 1
                                    }, width: function () {
                                        return (!this.item.isSuccess || this.item.isShow || this.item.isDelete ? "0" : this.boostRect.width) + "px"
                                    }, height: function () {
                                        return (this.item.isSuccess && !this.item.isShow && !this.item.isDelete && this.item.nativeAdvObj && this.item.nativeAdvObj.isUIShow ? this.boostRect.height : "0") + "px"
                                    }, marginRight: function () {
                                        return (!this.item.isSuccess || this.item.isShow || this.item.isDelete ? "0" : this.boostRect.marginRight) + "px"
                                    }
                                }, children: [{
                                    type: "native-boost", attr: {
                                        index: function () {
                                            return this.index
                                        }, backPressTimes: function () {
                                            return this.item.backPressTimes
                                        }, popCode: function () {
                                            return this.item.popCode
                                        }, isShowPop: function () {
                                            return this.item.isShow
                                        }, isAuditUser: function () {
                                            return this.isAuditUser
                                        }, actionCode: function () {
                                            return this.item.actionCode
                                        }, isFullScreen: function () {
                                            return this.isFullScreen
                                        }, pageName: function () {
                                            return this.pageName
                                        }, pageCode: function () {
                                            return this.pageCode
                                        }, adRequestTimes: function () {
                                            return this.adRequestTimes
                                        }, popType: function () {
                                            return this.item.popType
                                        }, winHeight: function () {
                                            return this.winHeight
                                        }, customAction: function () {
                                            return this.item.customAction
                                        }, preloadVedioReady: function () {
                                            return this.preloadVedioReady
                                        }, noAdPreloadVideoReady: function () {
                                            return this.noAdPreloadVideoReady
                                        }, adType: function () {
                                            return this.item.adType
                                        }
                                    }, shown: function () {
                                        return !this.item.isDelete
                                    }, events: {"event-watch": "nativeBoostEventDispatchHandler"}
                                }]
                            }]
                        }]
                    }
                }, 5700: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["wrapper"],
                        events: {click: "screenClickHandle", touchend: "screenTouchendHandle"},
                        children: [{
                            type: "div",
                            attr: {},
                            classList: function () {
                                return ["ad-view-" + (this.nativeIsShowPop ? "out" : "in")]
                            },
                            style: {
                                justifyContent: "center",
                                alignItems: "center",
                                flexDirection: "column",
                                position: function () {
                                    return this.nativeIsShowPop ? "fixed" : "relative"
                                },
                                width: "100%",
                                right: function () {
                                    return ("SECOND_SCREEN_TOUCH" === this.actionCode && this.nativeIsShowPop ? this.positionRight : 0) + "px"
                                },
                                bottom: function () {
                                    return "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.winHeight ? "178px" : "0px"
                                },
                                height: function () {
                                    return "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.winHeight ? this.winHeight - 178 + "px" : "100%"
                                }
                            },
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["adStyle"],
                                children: [{
                                    type: "div",
                                    attr: {},
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.wholeStyle.bgType
                                    },
                                    style: {
                                        width: "100%",
                                        height: "100%",
                                        position: "absolute",
                                        left: "0px",
                                        top: "0px",
                                        backgroundColor: function () {
                                            return this.curMiddleConfig.wholeStyle.bgColor
                                        },
                                        opacity: function () {
                                            return this.curMiddleConfig.wholeStyle.bgOpacity
                                        }
                                    }
                                }, {
                                    type: "div",
                                    attr: {},
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" == this.popType && 2 == this.curMiddleConfig.wholeStyle.bgType && !(this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.wholeStyle.bgType)
                                    },
                                    classList: ["pop-background"],
                                    style: {
                                        width: "100%",
                                        height: "100%",
                                        position: "absolute",
                                        left: "0px",
                                        top: "0px"
                                    }
                                }, {
                                    type: "image",
                                    attr: {
                                        src: function () {
                                            return this.curMiddleConfig.wholeStyle.image
                                        }
                                    },
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" == this.popType && 3 == this.curMiddleConfig.wholeStyle.bgType && !(this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.wholeStyle.bgType) && !(this.nativeIsShowPop && "middle" == this.popType && 2 == this.curMiddleConfig.wholeStyle.bgType)
                                    },
                                    style: {
                                        width: "100%",
                                        height: "100%",
                                        position: "absolute",
                                        left: "0px",
                                        top: "0px",
                                        objectFit: "fill"
                                    }
                                }, {
                                    type: "div",
                                    attr: {},
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" == this.popType
                                    },
                                    style: {
                                        width: "100%",
                                        height: "100%",
                                        position: "absolute",
                                        left: "0px",
                                        top: "0px",
                                        flexDirection: "column",
                                        justifyContent: "center",
                                        alignItems: "center",
                                        backgroundColor: "rgba(255,255,255,0.01)"
                                    },
                                    children: [{
                                        type: "div", attr: {}, shown: function () {
                                            return this.curMiddleConfig.tipStyle.isShow
                                        }, style: {
                                            width: function () {
                                                return this.curMiddleConfig.tipStyle.width + "px"
                                            }, height: function () {
                                                return this.curMiddleConfig.tipStyle.height + "px"
                                            }, marginBottom: function () {
                                                return this.curMiddleConfig.tipStyle.distance + "px"
                                            }
                                        }, children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curMiddleConfig.tipStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.curMiddleConfig.tipStyle.width + "px"
                                                }, height: function () {
                                                    return this.curMiddleConfig.tipStyle.height + "px"
                                                }, objectFit: "fill"
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, style: {
                                            width: function () {
                                                return this.curMiddleConfig.popStyle.width + "px"
                                            }, height: function () {
                                                return this.curMiddleConfig.popStyle.height + "px"
                                            }
                                        }
                                    }]
                                }, {
                                    type: "div",
                                    attr: {},
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" == this.popType && this.curMiddleConfig.maskStyle.isShow
                                    },
                                    style: {
                                        width: "100%",
                                        height: "100%",
                                        position: "absolute",
                                        left: "0px",
                                        top: "0px",
                                        flexDirection: "column",
                                        justifyContent: "center",
                                        alignItems: "center"
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return 1 == this.curMiddleConfig.maskStyle.maskType
                                        },
                                        style: {
                                            width: "100%",
                                            height: "100%",
                                            position: "absolute",
                                            left: "0px",
                                            top: "0px",
                                            backgroundColor: function () {
                                                return this.curMiddleConfig.maskStyle.bgColor
                                            },
                                            opacity: function () {
                                                return this.curMiddleConfig.maskStyle.opacity
                                            }
                                        }
                                    }, {
                                        type: "image",
                                        attr: {
                                            src: function () {
                                                return this.curMiddleConfig.maskStyle.image
                                            }
                                        },
                                        style: {
                                            width: "100%",
                                            height: "100%",
                                            position: "absolute",
                                            objectFit: "fill",
                                            left: "0px",
                                            top: "0px"
                                        },
                                        shown: function () {
                                            return 2 == this.curMiddleConfig.maskStyle.maskType && !(1 == this.curMiddleConfig.maskStyle.maskType)
                                        }
                                    }, {
                                        type: "div", attr: {}, style: {
                                            width: "100%", height: function () {
                                                return 2 == this.curMiddleConfig.popStyle.layoutType ? "100%" : "auto"
                                            }, justifyContent: function () {
                                                return (2 == this.curMiddleConfig.popStyle.layoutType ? "flex-end" : "center") + "              align-items: center"
                                            }, flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, shown: function () {
                                                return 1 == this.curMiddleConfig.maskStyle.tip.position && 1 == this.curMiddleConfig.popStyle.layoutType
                                            }, style: {
                                                paddingTop: function () {
                                                    return (this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance > this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance ? this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance : this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance) + "px"
                                                }, paddingBottom: function () {
                                                    return (this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance > this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance ? 0 : this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance - this.curMiddleConfig.maskStyle.tip.height - this.curMiddleConfig.maskStyle.tip.distance) + "px"
                                                }, width: function () {
                                                    return this.curMiddleConfig.popStyle.width + "px"
                                                }, height: function () {
                                                    return (this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance >= this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance ? this.curMiddleConfig.popStyle.height + this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance : this.curMiddleConfig.popStyle.height + 2 * this.curMiddleConfig.maskStyle.tip.height + 2 * this.curMiddleConfig.maskStyle.tip.distance - this.curMiddleConfig.tipStyle.height - this.curMiddleConfig.tipStyle.distance) + "px"
                                                }
                                            }
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return 2 == this.curMiddleConfig.maskStyle.tip.position && 1 == this.curMiddleConfig.popStyle.layoutType && !(1 == this.curMiddleConfig.maskStyle.tip.position && 1 == this.curMiddleConfig.popStyle.layoutType)
                                            }, style: {
                                                paddingTop: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance + "px"
                                                }, paddingBottom: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance + "px"
                                                }, width: function () {
                                                    return this.curMiddleConfig.popStyle.width + "px"
                                                }, height: function () {
                                                    return this.curMiddleConfig.popStyle.height + this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance + 2 * this.curMiddleConfig.maskStyle.tip.height + 2 * this.curMiddleConfig.maskStyle.tip.distance + "px"
                                                }
                                            }
                                        }, {
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.image
                                                }
                                            }, shown: function () {
                                                return 1 == this.curMiddleConfig.maskStyle.tip.position && 1 == this.curMiddleConfig.popStyle.layoutType
                                            }, style: {
                                                width: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.width + "px"
                                                }, height: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.height + "px"
                                                }, objectFit: "fill", position: "absolute", left: function () {
                                                    return (750 - this.curMiddleConfig.maskStyle.tip.width) / 2 + "px"
                                                }, top: function () {
                                                    return (this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance >= this.curMiddleConfig.maskStyle.tip.height + this.curMiddleConfig.maskStyle.tip.distance ? this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance - this.curMiddleConfig.maskStyle.tip.height - this.curMiddleConfig.maskStyle.tip.distance : 0) + "px"
                                                }
                                            }
                                        }, {
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.image
                                                }
                                            }, shown: function () {
                                                return 2 == this.curMiddleConfig.maskStyle.tip.position && 1 == this.curMiddleConfig.popStyle.layoutType
                                            }, style: {
                                                width: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.width + "px"
                                                }, height: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.height + "px"
                                                }, objectFit: "fill", position: "absolute", left: function () {
                                                    return (750 - this.curMiddleConfig.maskStyle.tip.width) / 2 + "px"
                                                }, top: function () {
                                                    return this.curMiddleConfig.popStyle.height + this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance + this.curMiddleConfig.maskStyle.tip.height + 2 * this.curMiddleConfig.maskStyle.tip.distance + "px"
                                                }
                                            }
                                        }, {
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.image
                                                }
                                            }, shown: function () {
                                                return 1 == this.curMiddleConfig.maskStyle.tip.position && 2 == this.curMiddleConfig.popStyle.layoutType
                                            }, style: {
                                                width: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.width + "px"
                                                }, height: function () {
                                                    return this.curMiddleConfig.maskStyle.tip.height + "px"
                                                }, objectFit: "fill", position: "absolute", left: function () {
                                                    return (750 - this.curMiddleConfig.maskStyle.tip.width) / 2 + "px"
                                                }, bottom: function () {
                                                    return this.curMiddleConfig.popStyle.height + this.curMiddleConfig.maskStyle.tip.distance + "px"
                                                }
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "image", attr: {
                                        src: function () {
                                            return this.curpopConfig.maskStyle.image
                                        }
                                    }, shown: function () {
                                        return this.nativeIsShowPop && "middle" !== this.popType
                                    }, classList: ["mask"]
                                }, {
                                    type: "image",
                                    attr: {src: "https://imgs.syreads.com/quick_static/-e-back_white@2x.png"},
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" !== this.popType && this.curpopConfig.btnBackIsDisplay
                                    },
                                    classList: ["back-close-icon"],
                                    events: {click: "backIconClick"}
                                }, {
                                    type: "div", attr: {}, shown: function () {
                                        return this.nativeIsShowPop && "middle" !== this.popType && !this.checkActionCodeIsScreen
                                    }, classList: ["mask"], style: {
                                        opacity: function () {
                                            return this.curpopConfig.maskStyle.opacity
                                        }, backgroundColor: "#000000"
                                    }
                                }, {
                                    type: "marquee-list",
                                    attr: {
                                        posType: "absoulte", posLeft: "0px", popBack: function () {
                                            return !1
                                        }
                                    },
                                    shown: function () {
                                        return this.nativeIsShowPop && "middle" !== this.popType && !this.checkActionCodeIsScreen
                                    }
                                }, {
                                    type: "block",
                                    attr: {},
                                    shown: function () {
                                        return this.nativeAdvObj && "middle" !== this.popType && this.nativeIsShowPop && this.curpopConfig.menubarStyle.isShow
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["menu-bar-wrapper"],
                                        shown: function () {
                                            return 2 == this.curpopConfig.menubarStyle.showType
                                        },
                                        style: {
                                            width: function () {
                                                return this.curpopConfig.menubarStyle.width + "px"
                                            }, height: function () {
                                                return this.curpopConfig.menubarStyle.height + "px"
                                            }, borderRadius: function () {
                                                return this.curpopConfig.menubarStyle.radio + "px"
                                            }, position: "absolute", left: function () {
                                                return (750 - this.curpopConfig.menubarStyle.width) / 2 + "px"
                                            }, top: "0px"
                                        },
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curpopConfig.menubarStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.curpopConfig.menubarStyle.width + "px"
                                                }, height: function () {
                                                    return this.curpopConfig.menubarStyle.height + "px"
                                                }, objectFit: "fill"
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, shown: function () {
                                            return 1 == this.curpopConfig.menubarStyle.showType && !(2 == this.curpopConfig.menubarStyle.showType)
                                        }, style: {
                                            position: "absolute",
                                            backgroundColor: "#ffffff",
                                            top: function () {
                                                return this.menuBarTop + "px"
                                            },
                                            height: function () {
                                                return ("huawei" == this.nativeAdvObj.brand ? 66 : 52) + "px"
                                            },
                                            width: function () {
                                                return 750 - 2 * this.menuBarRight + "px"
                                            },
                                            left: function () {
                                                return this.menuBarRight + "px"
                                            },
                                            justifyContent: "flex-start",
                                            alignItems: "center",
                                            textAlign: "center",
                                            borderRadius: function () {
                                                return ("huawei" == this.nativeAdvObj.brand ? 33 : 26) + "px"
                                            },
                                            paddingTop: "0px",
                                            paddingRight: "24px",
                                            paddingBottom: "0px",
                                            paddingLeft: "24px"
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.menubarStyle.text
                                                }
                                            }, style: {
                                                fontSize: "24px", fontWeight: "400", color: function () {
                                                    return this.curpopConfig.menubarStyle.color ? this.curpopConfig.menubarStyle.color : "#333333"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "block", attr: {}, shown: function () {
                                        return this.nativeAdvObj && "middle" !== this.popType && this.nativeIsShowPop && this.curpopConfig.bottomStyle && this.curpopConfig.bottomStyle.isShow
                                    }, children: [{
                                        type: "div", attr: {}, shown: function () {
                                            return 2 == this.curpopConfig.bottomStyle.showType
                                        }, style: {
                                            width: function () {
                                                return this.curpopConfig.bottomStyle.width + "px"
                                            }, height: function () {
                                                return this.curpopConfig.bottomStyle.height + "px"
                                            }, borderRadius: function () {
                                                return this.curpopConfig.bottomStyle.radio + "px"
                                            }, position: "absolute", left: function () {
                                                return (750 - this.curpopConfig.bottomStyle.width) / 2 + "px"
                                            }, bottom: "0px"
                                        }, children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curpopConfig.bottomStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.curpopConfig.bottomStyle.width + "px"
                                                }, height: function () {
                                                    return this.curpopConfig.bottomStyle.height + "px"
                                                }, objectFit: "fill"
                                            }
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return 1 == this.curpopConfig.bottomStyle.showType && !(2 == this.curpopConfig.bottomStyle.showType)
                                        },
                                        style: {
                                            position: "absolute",
                                            backgroundColor: "#ffffff",
                                            bottom: function () {
                                                return this.menuBarTop + "px"
                                            },
                                            height: function () {
                                                return ("huawei" == this.nativeAdvObj.brand ? 66 : 52) + "px"
                                            },
                                            width: function () {
                                                return 750 - 2 * this.menuBarRight + "px"
                                            },
                                            left: function () {
                                                return this.menuBarRight + "px"
                                            },
                                            justifyContent: "flex-start",
                                            alignItems: "center",
                                            textAlign: "center",
                                            borderRadius: function () {
                                                return ("huawei" == this.nativeAdvObj.brand ? 33 : 26) + "px"
                                            },
                                            paddingTop: "0px",
                                            paddingRight: "24px",
                                            paddingBottom: "0px",
                                            paddingLeft: "24px"
                                        },
                                        children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.bottomStyle.text
                                                }
                                            }, style: {
                                                fontSize: "24px", fontWeight: "400", color: function () {
                                                    return this.curpopConfig.bottomStyle.color ? this.curpopConfig.bottomStyle.color : "#333333"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "block", attr: {}, shown: function () {
                                        return this.nativeAdvObj && "oppo" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod
                                    }, children: [{
                                        type: "ad", attr: {
                                            adunitid: function () {
                                                return this.nativeAdvObj && this.nativeAdvObj.id
                                            }, type: "native"
                                        }, classList: ["ad-native"], events: {
                                            load: function (t) {
                                                return this.adLoad(t)
                                            }, error: function (t) {
                                                return this.adError(this.err, t)
                                            }, adshow: "adShow", adclick: "adClickForImg"
                                        }, children: [{
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.popShowGif
                                            },
                                            classList: ["before-gif"],
                                            children: [{
                                                type: "image", attr: {
                                                    src: function () {
                                                        return this.popShowGifImg
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return "middle" !== this.popType && !this.popShowGif
                                                }
                                            },
                                            classList: ["ad-content"],
                                            children: [{
                                                type: "ad-clickable-area",
                                                attr: {},
                                                style: {
                                                    transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                },
                                                children: [{
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return this.curpopConfig.isCloseBtnToAd && "middle" !== this.popType && this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, marginBottom: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill"
                                                    }, events: {click: "closeClick"}
                                                }]
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return !this.curpopConfig.isCloseBtnToAd && "middle" !== this.popType && this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.curpopConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginBottom: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, opacity: function () {
                                                        return this.curpopConfig.closeStyle.opacity
                                                    }, objectFit: "fill", transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                shown: function () {
                                                    return this.customAction.pop_title
                                                },
                                                style: {
                                                    width: "100%",
                                                    display: "flex",
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    marginBottom: "15px"
                                                },
                                                children: [{
                                                    type: "text",
                                                    attr: {value: "恭喜获得 "},
                                                    style: {color: "#ffedc6", fontSize: "50px"}
                                                }, {
                                                    type: "text",
                                                    attr: {
                                                        value: function () {
                                                            return this.customAction.pop_title
                                                        }
                                                    },
                                                    style: {
                                                        fontSize: "50px", fontWeight: "bold", color: function () {
                                                            return "OPEN_RED_MONEY" === this.customAction.task_code ? "#FF4F4F" : "#FF9401"
                                                        }
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: "元 "},
                                                    style: {color: "#ffedc6", fontSize: "50px"},
                                                    shown: function () {
                                                        return "OPEN_RED_MONEY" === this.customAction.task_code
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: " 水滴 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return "OPEN_WATAR" === this.customAction.task_code && !("OPEN_RED_MONEY" === this.customAction.task_code)
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: " 袋肥料 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return !("OPEN_FERTILIZER" !== this.customAction.task_code || "OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code)
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: "金币 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return !("OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code || "OPEN_FERTILIZER" === this.customAction.task_code)
                                                    }
                                                }]
                                            }, {
                                                type: "div", attr: {
                                                    show: function () {
                                                        return "middle" !== this.popType && 1 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                                    },
                                                    height: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                                    },
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    textAlign: "center",
                                                    marginBottom: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                                    },
                                                    marginTop: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                                    }
                                                }, children: [{
                                                    type: "image",
                                                    attr: {
                                                        src: function () {
                                                            return this.curpopConfig.crowdStyle.image
                                                        }
                                                    },
                                                    style: {
                                                        width: "100%",
                                                        height: "100%",
                                                        position: "absolute",
                                                        left: "0px",
                                                        top: "0px",
                                                        objectFit: "fill"
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.crowdStyle.text
                                                        }
                                                    }, style: {
                                                        fontSize: function () {
                                                            return this.curpopConfig.crowdStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.crowdStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["ad-title"],
                                                style: {
                                                    height: function () {
                                                        return (this.nativeIsShowPop || "middle" === this.popType ? 0 : this.defaultStyle.titleHeight) + "px"
                                                    },
                                                    verticalAlign: "top",
                                                    width: "100%",
                                                    borderLeftWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderBottomWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderRightWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderTopWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderTopLeftRadius: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "6px"
                                                    },
                                                    borderTopRightRadius: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "6px"
                                                    }
                                                },
                                                children: [{
                                                    type: "ad-clickable-area",
                                                    attr: {},
                                                    style: {flex: 1, width: "100%"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.nativeAdvObj.title || this.nativeAdvObj.desc || "热门应用"
                                                            }
                                                        }, style: {
                                                            width: "100%", height: "100%", color: function () {
                                                                return this.defaultStyle.titleColor
                                                            }, fontSize: function () {
                                                                return this.defaultStyle.titleFont + "px"
                                                            }, lines: 1, textOverflow: "ellipsis"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-title-close"],
                                                    events: {click: "deleteBtnClick"},
                                                    children: [{
                                                        type: "image",
                                                        attr: {src: "https://ims.readnos.com/image%2F2022-06-28%2F1656399134152_close.png"}
                                                    }]
                                                }]
                                            }, {
                                                type: "div", attr: {}, style: {
                                                    width: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "middle" == this.popType ? 0 : this.curpopConfig.popStyle.width + "px" : this.defaultStyle.imageWidth + "px"
                                                    }, height: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "middle" == this.popType ? 0 : this.curpopConfig.popStyle.height >= this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top || "fixed" === this.curpopConfig.materialStyle.position ? this.curpopConfig.popStyle.height + "px" : this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top + "px" : this.defaultStyle.imageHeight + "px"
                                                    }
                                                }, children: [{
                                                    type: "div", attr: {}, shown: function () {
                                                        return this.curpopConfig.customTextStyle.canShow
                                                    }, style: function () {
                                                        return this.curpopConfig.customBoxStyle.style
                                                    }
                                                }, {
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.popStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.popStyle.json
                                                        }, imgStyle: function () {
                                                            return "width:" + (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.popStyle.width + "px" : "0px") + ";                        height:" + (this.nativeIsShowPop && "middle" != this.popType ? this.checkActionCodeIsScreen ? "100%" : this.curpopConfig.popStyle.height + "px" : "0px") + ";                        position:absolute;                        left:0;                        top:" + this.curpopConfig.customBoxStyle.style.height + ";                        object-fit:fill;"
                                                        }
                                                    }
                                                }, {
                                                    type: "ad-clickable-area",
                                                    attr: {},
                                                    style: {
                                                        position: "absolute", left: function () {
                                                            return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image", attr: {
                                                            show: function () {
                                                                return this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                            }, src: function () {
                                                                return this.curpopConfig.closeStyle.image
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                            }, height: function () {
                                                                return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                            }, opacity: function () {
                                                                return this.curpopConfig.closeStyle.opacity
                                                            }, objectFit: "fill"
                                                        }, events: {click: "closeClick"}
                                                    }]
                                                }, {
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return !this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill", left: function () {
                                                            return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    }, events: {click: "closeClick"}
                                                }, {
                                                    type: "ad-clickable-area",
                                                    attr: {},
                                                    style: {
                                                        position: "absolute", right: function () {
                                                            return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image", attr: {
                                                            show: function () {
                                                                return this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                            }, src: function () {
                                                                return this.curpopConfig.closeStyle.image
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                            }, height: function () {
                                                                return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                            }, opacity: function () {
                                                                return this.curpopConfig.closeStyle.opacity
                                                            }, objectFit: "fill"
                                                        }, events: {click: "closeClick"}
                                                    }]
                                                }, {
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return !this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill", right: function () {
                                                            return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    }, events: {click: "closeClick"}
                                                }, {
                                                    type: "div", attr: {
                                                        show: function () {
                                                            return this.curpopConfig.negStyle.isShow
                                                        }
                                                    }, classList: ["cancel_btn"], style: {
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        position: "absolute",
                                                        top: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.negStyle.top : 0) + "px"
                                                        },
                                                        left: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.negStyle.left : 0) + "px"
                                                        },
                                                        width: function () {
                                                            return this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.negStyle.width ? this.curpopConfig.negStyle.width + "px" : "auto" : "0px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.negStyle.height ? this.curpopConfig.negStyle.height : this.curpopConfig.negStyle.font : "0px") + "px"
                                                        },
                                                        backgroundImage: function () {
                                                            return this.curpopConfig.negStyle.icon
                                                        },
                                                        backgroundPosition: "center center",
                                                        backgroundSize: function () {
                                                            return this.curpopConfig.negStyle.width + "px " + this.curpopConfig.negStyle.height + "px"
                                                        },
                                                        backgroundRepeat: "no-repeat",
                                                        borderRadius: function () {
                                                            return this.curpopConfig.negStyle.radio + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    }, children: [{
                                                        type: "image",
                                                        attr: {
                                                            src: function () {
                                                                return this.curpopConfig.negStyle.icon
                                                            }
                                                        },
                                                        style: {
                                                            width: "100%",
                                                            height: "100%",
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px"
                                                        }
                                                    }, {
                                                        type: "ad-clickable-area",
                                                        attr: {},
                                                        children: [{
                                                            type: "text",
                                                            attr: {
                                                                show: function () {
                                                                    return this.curpopConfig.isNegBtnToAd
                                                                }, value: function () {
                                                                    return this.curpopConfig.negStyle.text
                                                                }
                                                            },
                                                            events: {click: "negClick"},
                                                            style: {
                                                                fontSize: function () {
                                                                    return this.curpopConfig.negStyle.font + "px"
                                                                }, color: function () {
                                                                    return this.curpopConfig.negStyle.color
                                                                }, width: "100%", textAlign: "center"
                                                            }
                                                        }]
                                                    }, {
                                                        type: "text", attr: {
                                                            show: function () {
                                                                return !this.curpopConfig.isNegBtnToAd
                                                            }, value: function () {
                                                                return this.curpopConfig.negStyle.text
                                                            }
                                                        }, events: {click: "negClick"}, style: {
                                                            fontSize: function () {
                                                                return this.curpopConfig.negStyle.font + "px"
                                                            }, color: function () {
                                                                return this.curpopConfig.negStyle.color
                                                            }, width: "100%", textAlign: "center"
                                                        }
                                                    }]
                                                }, {
                                                    type: "ad-clickable-area",
                                                    attr: {type: "click"},
                                                    classList: ["ad-btn"],
                                                    style: {
                                                        justifyContent: "center",
                                                        position: "absolute",
                                                        alignItems: "center",
                                                        top: function () {
                                                            return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                        },
                                                        left: function () {
                                                            return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                        },
                                                        width: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        paddingLeft: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingRight: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingTop: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                        },
                                                        paddingBottom: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "div",
                                                        attr: {},
                                                        classList: function () {
                                                            return [this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                        },
                                                        style: {
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            width: function () {
                                                                return this.curpopConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curpopConfig.btnStyle.height + "px"
                                                            },
                                                            backgroundColor: function () {
                                                                return this.curpopConfig.btnStyle.bgColor
                                                            },
                                                            borderRadius: function () {
                                                                return this.curpopConfig.btnStyle.radio + "px"
                                                            }
                                                        },
                                                        children: [{
                                                            type: "lottie-image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.image
                                                                },
                                                                source: function () {
                                                                    return this.curpopConfig.btnStyle.json
                                                                },
                                                                imgStyle: " position: absolute;\n                          left: 0;\n                          top: 0;\n                          width: 100%;\n                          height: 100%; "
                                                            }
                                                        }, {
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.icon
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, marginTop: function () {
                                                                    return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.adData.clickBtnTxt ? this.adData.clickBtnTxt : "查看广告"
                                                                }
                                                            }, style: {
                                                                textAlign: "center", fontSize: function () {
                                                                    return this.curpopConfig.btnStyle.font + "px"
                                                                }, color: function () {
                                                                    return this.curpopConfig.btnStyle.color
                                                                }, height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                }
                                                            }
                                                        }]
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    shown: function () {
                                                        return this.nativeIsShowPop && (!this.curpopConfig.btnStyle.isBindingAd || this.isNoAd)
                                                    },
                                                    classList: ["ad-btn"],
                                                    events: {click: "noAdClickForBtn"},
                                                    style: {
                                                        justifyContent: "center",
                                                        position: "absolute",
                                                        alignItems: "center",
                                                        top: function () {
                                                            return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                        },
                                                        left: function () {
                                                            return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                        },
                                                        width: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        paddingLeft: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingRight: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingTop: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                        },
                                                        paddingBottom: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "div",
                                                        attr: {},
                                                        classList: function () {
                                                            return [this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                        },
                                                        style: {
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            width: function () {
                                                                return this.curpopConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curpopConfig.btnStyle.height + "px"
                                                            },
                                                            backgroundColor: function () {
                                                                return this.curpopConfig.btnStyle.bgColor
                                                            },
                                                            borderRadius: function () {
                                                                return this.curpopConfig.btnStyle.radio + "px"
                                                            }
                                                        },
                                                        children: [{
                                                            type: "image",
                                                            attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.image
                                                                }
                                                            },
                                                            style: {
                                                                position: "absolute",
                                                                left: "0px",
                                                                top: "0px",
                                                                width: "100%",
                                                                height: "100%"
                                                            }
                                                        }, {
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.icon
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, marginTop: function () {
                                                                    return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.adData.clickBtnTxt ? this.adData.clickBtnTxt : "查看广告"
                                                                }
                                                            }, style: {
                                                                textAlign: "center", fontSize: function () {
                                                                    return this.curpopConfig.btnStyle.font + "px"
                                                                }, color: function () {
                                                                    return this.curpopConfig.btnStyle.color
                                                                }, height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                }
                                                            }
                                                        }]
                                                    }]
                                                }, {
                                                    type: "ad-clickable-area",
                                                    attr: {type: "click"},
                                                    shown: function () {
                                                        return !this.isNoAd
                                                    },
                                                    classList: ["ad-btn"],
                                                    style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop || "middle" === this.popType ? "middle" == this.popType ? 0 : this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop || "middle" === this.popType ? "middle" == this.popType ? 0 : this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                        }, top: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.materialStyle.top : 0) + "px"
                                                        }, left: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.materialStyle.left : 0) + "px"
                                                        }, position: function () {
                                                            return this.nativeIsShowPop ? this.curpopConfig.materialStyle.position : "absolute"
                                                        }, marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.$app.$def.getMaterialUrl(this.adData)
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop || "middle" === this.popType ? "middle" == this.popType ? 0 : this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                            }, height: function () {
                                                                return (this.nativeIsShowPop || "middle" === this.popType ? "middle" == this.popType ? 0 : this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                            }, objectFit: "fill", borderTopLeftRadius: function () {
                                                                return this.nativeIsShowPop && "middle" != this.popType ? "8px" : "0px"
                                                            }, borderTopRightRadius: function () {
                                                                return this.nativeIsShowPop && "middle" != this.popType ? "8px" : "0px"
                                                            }, borderBottomRightRadius: function () {
                                                                return this.nativeIsShowPop && "middle" != this.popType ? "8px" : "0px"
                                                            }, borderBottomLeftRadius: function () {
                                                                return this.nativeIsShowPop && "middle" != this.popType ? "8px" : "0px"
                                                            }
                                                        }
                                                    }, {
                                                        type: "div",
                                                        attr: {
                                                            show: function () {
                                                                return this.nativeIsShowPop && "middle" !== this.popType && !this.isNoAd
                                                            }
                                                        },
                                                        classList: ["ad-mask"],
                                                        children: [{type: "text", attr: {value: "广告"}}]
                                                    }, {
                                                        type: "div",
                                                        attr: {
                                                            show: function () {
                                                                return !this.nativeIsShowPop && "middle" !== this.popType
                                                            }
                                                        },
                                                        classList: ["ad-mask-normal"],
                                                        children: [{type: "text", attr: {value: "广告"}}]
                                                    }]
                                                }, {
                                                    type: "div", attr: {}, shown: function () {
                                                        return this.nativeIsShowPop && this.curpopConfig.customTextStyle.canShow
                                                    }, style: function () {
                                                        return this.curpopConfig.customTextStyle.style
                                                    }, children: [{
                                                        type: "text", attr: {
                                                            id: function () {
                                                                return "@" == this.item.text ? "anTran" : ""
                                                            }, value: function () {
                                                                return "@" != this.item.text ? this.item.text : this.changeable
                                                            }
                                                        }, repeat: {
                                                            exp: function () {
                                                                return this.curpopConfig.customTextStyle.text
                                                            }, value: "item"
                                                        }, style: function () {
                                                            return this.item.style
                                                        }, id: function () {
                                                            return "@" == this.item.text ? "anTran" : ""
                                                        }, classList: function () {
                                                            return ["@" == this.item.text ? this.transAn : ""]
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "div", attr: {
                                                    show: function () {
                                                        return "middle" !== this.popType && 2 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                                    },
                                                    height: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                                    },
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    textAlign: "center",
                                                    marginBottom: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                                    },
                                                    marginTop: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                                    }
                                                }, children: [{
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.crowdStyle.text
                                                        }
                                                    }, style: {
                                                        fontSize: function () {
                                                            return this.curpopConfig.crowdStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.crowdStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "ad-clickable-area", attr: {}, style: {
                                                    transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, children: [{
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return this.curpopConfig.isCloseBtnToAd && "middle" !== this.popType && this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, marginTop: function () {
                                                            return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill"
                                                    }, events: {click: "closeClick"}
                                                }]
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return !this.curpopConfig.isCloseBtnToAd && "middle" !== this.popType && this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.curpopConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginTop: function () {
                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, opacity: function () {
                                                        return this.curpopConfig.closeStyle.opacity
                                                    }, objectFit: "fill", transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["ad-title"],
                                                style: {
                                                    height: function () {
                                                        return (this.nativeIsShowPop || "middle" === this.popType ? 0 : this.defaultStyle.titleHeight) + "px"
                                                    },
                                                    verticalAlign: "top",
                                                    width: "100%",
                                                    borderLeftWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderBottomWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderRightWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderTopWidth: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "1px"
                                                    },
                                                    borderBottomLeftRadius: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "6px"
                                                    },
                                                    borderBottomRightRadius: function () {
                                                        return this.nativeIsShowPop || "middle" === this.popType ? "0px" : "6px"
                                                    }
                                                },
                                                children: [{
                                                    type: "ad-clickable-area",
                                                    attr: {},
                                                    style: {flex: 1, width: "100%"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.adData.title || this.adData.desc
                                                            }
                                                        }, style: {
                                                            width: "100%", height: "100%", color: function () {
                                                                return this.defaultStyle.titleColor
                                                            }, fontSize: function () {
                                                                return this.defaultStyle.titleFont + "px"
                                                            }, lines: 1, textOverflow: "ellipsis"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-title-icon"],
                                                    events: {click: "adClickForBtnNormal"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.adData.clickBtnTxt ? this.adData.clickBtnTxt : 2 == this.adData.interactionType ? "安装" : "打开"
                                                            }
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "ad-clickable-area", attr: {
                                                    show: function () {
                                                        return this.nativeIsShowPop && !this.isNoAd && this.curpopConfig.commonStyle.fullScreenSwitch
                                                    }
                                                }, classList: ["full-touch"]
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {
                                                poptype: "emptyarea", show: function () {
                                                    return "middle" == this.popType
                                                }
                                            },
                                            style: {
                                                justifyContent: function () {
                                                    return "middle" == this.popType && 2 == this.curMiddleConfig.popStyle.layoutType ? "flex-end" : "center"
                                                }, alignItems: "center", flexDirection: "column", width: function () {
                                                    return this.nativeIsShowPop && "middle" === this.popType ? "100%" : "0px"
                                                }, height: function () {
                                                    return this.nativeIsShowPop && "middle" === this.popType ? "100%" : "0px"
                                                }
                                            },
                                            events: {click: "middleAdContentClick"},
                                            children: [{
                                                type: "div",
                                                attr: {poptype: "emptyarea"},
                                                classList: ["middle-empty-tip"],
                                                style: {
                                                    width: "100%", height: function () {
                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.tipStyle.height : 0) + "px"
                                                    }, marginBottom: function () {
                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.tipStyle.distance : 0) + "px"
                                                    }
                                                }
                                            }, {
                                                type: "tabs", attr: {}, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.width : 0) + "px"
                                                    },
                                                    height: function () {
                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.height : 0) + "px"
                                                    },
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    flexDirection: "column"
                                                }, children: [{
                                                    type: "tab-content", attr: {
                                                        scrollable: function () {
                                                            return !this.curMiddleConfig.commonStyle.mistakeType
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.width : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.height : 0) + "px"
                                                        },
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        flexDirection: "column"
                                                    }, children: [{
                                                        type: "div",
                                                        attr: {},
                                                        classList: ["middle-ad-content"],
                                                        style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.width : 0) + "px"
                                                            },
                                                            height: function () {
                                                                return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.height : 0) + "px"
                                                            },
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            flexDirection: "column"
                                                        },
                                                        children: [{
                                                            type: "div", attr: {
                                                                show: function () {
                                                                    return "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.bgType
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgWidth : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgHeight : 0) + "px"
                                                                }, backgroundColor: function () {
                                                                    return this.curMiddleConfig.popStyle.bgColor
                                                                }, borderRadius: function () {
                                                                    return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                                }, position: "absolute", top: "0px", left: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.popStyle.bgWidth) / 2 : 0) + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "div", attr: {
                                                                show: function () {
                                                                    return "middle" == this.popType && 2 == this.curMiddleConfig.popStyle.bgType
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgWidth : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgHeight : 0) + "px"
                                                                }, borderRadius: function () {
                                                                    return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                                }, position: "absolute", top: "0px", left: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.popStyle.bgWidth) / 2 : 0) + "px"
                                                                }
                                                            }, children: [{
                                                                type: "image", attr: {
                                                                    src: function () {
                                                                        return this.curMiddleConfig.popStyle.bgImage
                                                                    }
                                                                }, style: {
                                                                    width: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgWidth : 0) + "px"
                                                                    }, height: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgHeight : 0) + "px"
                                                                    }, borderRadius: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.popStyle.bgRadio : 0) + "px"
                                                                    }, objectFit: "fill"
                                                                }
                                                            }]
                                                        }, {
                                                            type: "div",
                                                            attr: {},
                                                            classList: ["middle-ad-meterial"],
                                                            style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.width : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.height : 0) + "px"
                                                                }, borderRadius: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.radio : 0) + "px"
                                                                }, top: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.top : 0) + "px"
                                                                }, left: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.meterialStyle.width) / 2 : 0) + "px"
                                                                }, position: "absolute"
                                                            },
                                                            children: [{
                                                                type: "ad-clickable-area",
                                                                attr: {type: "click"},
                                                                style: {
                                                                    width: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.width : 0) + "px"
                                                                    }, height: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.height : 0) + "px"
                                                                    }, borderRadius: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.radio : 0) + "px"
                                                                    }, top: "0px", left: "0px", position: "absolute"
                                                                },
                                                                children: [{
                                                                    type: "image", attr: {
                                                                        src: function () {
                                                                            return this.curMiddleConfig.commonStyle.isCover && this.curMiddleConfig.meterialStyle.image ? this.curMiddleConfig.meterialStyle.image : this.$app.$def.getMaterialUrl(this.adData)
                                                                        }
                                                                    }, style: {
                                                                        width: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.width : 0) + "px"
                                                                        },
                                                                        height: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.height : 0) + "px"
                                                                        },
                                                                        borderRadius: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.meterialStyle.radio : 0) + "px"
                                                                        },
                                                                        top: "0px",
                                                                        left: "0px",
                                                                        position: "absolute",
                                                                        objectFit: "contain"
                                                                    }
                                                                }, {
                                                                    type: "text",
                                                                    attr: {
                                                                        show: function () {
                                                                            return this.nativeIsShowPop && "middle" == this.popType && this.curMiddleConfig.functionConfig.isCloseAd2ClickAd
                                                                        }, value: "去广告"
                                                                    },
                                                                    events: {click: "removeMiddleAd"},
                                                                    classList: ["middle-clear-ad-tag"]
                                                                }, {
                                                                    type: "text",
                                                                    attr: {value: "▼"},
                                                                    classList: ["graph"]
                                                                }, {
                                                                    type: "text",
                                                                    attr: {value: "广告"},
                                                                    classList: ["middle-ad-tag"]
                                                                }, {
                                                                    type: "image", attr: {
                                                                        show: function () {
                                                                            return this.adData.icon
                                                                        }, src: function () {
                                                                            return this.adData.icon
                                                                        }
                                                                    }, classList: ["middle-ad-icon"]
                                                                }]
                                                            }, {
                                                                type: "text",
                                                                attr: {
                                                                    show: function () {
                                                                        return this.nativeIsShowPop && "middle" == this.popType && !this.curMiddleConfig.functionConfig.isCloseAd2ClickAd
                                                                    }, value: "去广告"
                                                                },
                                                                events: {click: "removeMiddleAd"},
                                                                classList: ["middle-clear-ad-tag"]
                                                            }, {
                                                                type: "text",
                                                                attr: {value: "▼"},
                                                                classList: ["graph"]
                                                            }, {
                                                                type: "text",
                                                                attr: {value: "看视频免广告"},
                                                                classList: ["video-ad-tag"],
                                                                events: {
                                                                    click: function (t) {
                                                                        return this.topWatchVideo4Free(t)
                                                                    }
                                                                },
                                                                shown: function () {
                                                                    return this.nativeIsShowPop && "middle" == this.popType && this.curMiddleConfig.commonStyle.materialExemptAd
                                                                },
                                                                style: {
                                                                    width: "200px",
                                                                    height: "44px",
                                                                    lineHeight: "42px",
                                                                    backgroundColor: "rgba(0,0,0,0.15)",
                                                                    borderRadius: "22px",
                                                                    textAlign: "center",
                                                                    color: "rgba(255,255,255,0.5)",
                                                                    fontSize: "28px",
                                                                    position: "absolute",
                                                                    top: "10px",
                                                                    right: "162px"
                                                                }
                                                            }]
                                                        }, {
                                                            type: "ad-clickable-area",
                                                            attr: {type: "click"},
                                                            style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.width : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.height : 0) + "px"
                                                                }, fontSize: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.size : 0) + "px"
                                                                }, position: "absolute", left: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.descStyle.width) / 2 : 0) + "px"
                                                                }, top: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.top : 0) + "px"
                                                                }
                                                            },
                                                            children: [{
                                                                type: "div",
                                                                attr: {},
                                                                classList: ["middle-ad-desc"],
                                                                style: {
                                                                    width: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.width : 0) + "px"
                                                                    },
                                                                    height: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.height : 0) + "px"
                                                                    },
                                                                    fontSize: function () {
                                                                        return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.size : 0) + "px"
                                                                    },
                                                                    lineHeight: function () {
                                                                        return this.curMiddleConfig.descStyle.height / 2 + "px"
                                                                    },
                                                                    color: function () {
                                                                        return this.curMiddleConfig.descStyle.color
                                                                    },
                                                                    backgroundColor: function () {
                                                                        return this.curMiddleConfig.descStyle.bgColor || ""
                                                                    },
                                                                    position: "absolute",
                                                                    left: "0px",
                                                                    top: "0px",
                                                                    flexDirection: "column",
                                                                    justifyContent: "space-between"
                                                                },
                                                                children: [{
                                                                    type: "text",
                                                                    attr: {
                                                                        value: function () {
                                                                            return this.curMiddleConfig.commonStyle.isCover && this.curMiddleConfig.descStyle.text ? this.curMiddleConfig.descStyle.text : this.adData.desc ? this.adData.desc : this.adData.title ? this.adData.title : "热门应用"
                                                                        }
                                                                    },
                                                                    style: {
                                                                        lines: 1,
                                                                        textOverflow: "ellipsis",
                                                                        color: function () {
                                                                            return this.curMiddleConfig.descStyle.color
                                                                        },
                                                                        fontSize: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.size : 0) + "px"
                                                                        }
                                                                    }
                                                                }, {
                                                                    type: "div",
                                                                    attr: {},
                                                                    style: {alignItems: "center", marginTop: "10px"},
                                                                    children: [{
                                                                        type: "image",
                                                                        attr: {
                                                                            width: "80px",
                                                                            height: "80px",
                                                                            src: function () {
                                                                                return this.adData.icon || this.curMiddleConfig.meterialStyle.image || this.$app.$def.getMaterialUrl(this.adData)
                                                                            }
                                                                        },
                                                                        style: {
                                                                            marginRight: "20px",
                                                                            borderRadius: "12px"
                                                                        }
                                                                    }, {
                                                                        type: "text", attr: {
                                                                            value: function () {
                                                                                return this.adData.title || "热门应用"
                                                                            }
                                                                        }, classList: ["middle-ad-desc"]
                                                                    }]
                                                                }]
                                                            }]
                                                        }, {
                                                            type: "image",
                                                            attr: {
                                                                poptype: "emptyarea", show: function () {
                                                                    return "middle" == this.popType && this.curMiddleConfig.guideStyle.isShow
                                                                }, src: function () {
                                                                    return this.curMiddleConfig.guideStyle.image
                                                                }
                                                            },
                                                            style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.guideStyle.width : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.guideStyle.height : 0) + "px"
                                                                }, position: "absolute", left: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.guideStyle.width) / 2 : 0) + "px"
                                                                }, top: function () {
                                                                    return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.guideStyle.top : 0) + "px"
                                                                }, objectFit: "fill"
                                                            }
                                                        }, {
                                                            type: "ad-clickable-area",
                                                            attr: {type: "click"},
                                                            style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.btnStyle.width + "px"
                                                                },
                                                                height: function () {
                                                                    return this.curMiddleConfig.btnStyle.height + (this.curMiddleConfig.btnStyle.oppoMistakeRange ? this.curMiddleConfig.btnStyle.oppoMistakeRange : 0) + "px"
                                                                },
                                                                borderRadius: function () {
                                                                    return this.curMiddleConfig.btnStyle.radio + "px"
                                                                },
                                                                position: "absolute",
                                                                top: function () {
                                                                    return this.curMiddleConfig.btnStyle.top + "px"
                                                                },
                                                                left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.btnStyle.width) / 2 + "px"
                                                                },
                                                                justifyContent: "center",
                                                                alignItems: "center",
                                                                flexDirection: "column"
                                                            },
                                                            classList: function () {
                                                                return ["middle-ad-button", this.curMiddleConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                            },
                                                            children: [{
                                                                type: "image", attr: {
                                                                    src: function () {
                                                                        return this.curMiddleConfig.btnStyle.image
                                                                    }
                                                                }, shown: function () {
                                                                    return 2 == this.curMiddleConfig.btnStyle.type
                                                                }, style: {
                                                                    width: function () {
                                                                        return this.curMiddleConfig.btnStyle.width + "px"
                                                                    },
                                                                    height: function () {
                                                                        return this.curMiddleConfig.btnStyle.height + "px"
                                                                    },
                                                                    borderRadius: function () {
                                                                        return this.curMiddleConfig.btnStyle.radio + "px"
                                                                    },
                                                                    position: "absolute",
                                                                    left: "0px",
                                                                    top: "0px",
                                                                    objectFit: "fill"
                                                                }
                                                            }, {
                                                                type: "div",
                                                                attr: {},
                                                                classList: ["middle-ad-button"],
                                                                style: {
                                                                    width: function () {
                                                                        return this.curMiddleConfig.btnStyle.width + "px"
                                                                    },
                                                                    height: function () {
                                                                        return this.curMiddleConfig.btnStyle.height + "px"
                                                                    },
                                                                    borderRadius: function () {
                                                                        return this.curMiddleConfig.btnStyle.radio + "px"
                                                                    },
                                                                    backgroundColor: function () {
                                                                        return 1 == this.curMiddleConfig.btnStyle.type ? this.curMiddleConfig.btnStyle.bgColor : "rgba(255,255,255,0)"
                                                                    },
                                                                    position: "absolute",
                                                                    left: "0px",
                                                                    top: "0px",
                                                                    justifyContent: "center",
                                                                    alignItems: "center",
                                                                    flexDirection: "column"
                                                                },
                                                                children: [{
                                                                    type: "text", attr: {
                                                                        value: function () {
                                                                            return this.curMiddleConfig.commonStyle.isCover ? this.curMiddleConfig.btnStyle.text : this.adData.clickBtnTxt ? this.adData.clickBtnTxt : "查看广告"
                                                                        }
                                                                    }, style: {
                                                                        fontSize: function () {
                                                                            return this.curMiddleConfig.btnStyle.size + "px"
                                                                        }, color: function () {
                                                                            return this.curMiddleConfig.btnStyle.color
                                                                        }
                                                                    }
                                                                }]
                                                            }]
                                                        }]
                                                    }]
                                                }]
                                            }]
                                        }, {
                                            type: "ad-clickable-area", attr: {type: "click"}, shown: function () {
                                                return this.checkActionCodeIsScreen && this.nativeIsShowPop && this.curpopConfig.screenConfig.isScreen2ClickAd
                                            }, classList: ["skip-btn-mask"], style: function () {
                                                return this.getBtnPosition
                                            }, events: {click: "screenMistakeClickHandle"}
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {poptype: "emptyarea"},
                                    shown: function () {
                                        return "middle" == this.popType && this.isShowMiddleMask && 1 == this.curMiddleConfig.popStyle.layoutType
                                    },
                                    events: {swipe: "middleOppoAdContentSwiper", click: "middleAdContentClick"},
                                    style: {
                                        width: "750px", height: function () {
                                            return (this.winHeight - 178 - this.curMiddleConfig.popStyle.height - this.curMiddleConfig.tipStyle.height - this.curMiddleConfig.tipStyle.distance) / 2 + this.curMiddleConfig.tipStyle.height + this.curMiddleConfig.tipStyle.distance + "px"
                                        }, position: "fixed", left: "0px", top: "0px"
                                    }
                                }, {
                                    type: "div",
                                    attr: {poptype: "emptyarea"},
                                    shown: function () {
                                        return "middle" == this.popType && this.isShowMiddleMask && 1 == this.curMiddleConfig.popStyle.layoutType
                                    },
                                    events: {swipe: "middleOppoAdContentSwiper", click: "middleAdContentClick"},
                                    style: {
                                        width: "750px", height: function () {
                                            return (this.winHeight - 178 - this.curMiddleConfig.popStyle.height - this.curMiddleConfig.tipStyle.height - this.curMiddleConfig.tipStyle.distance) / 2 + "px"
                                        }, position: "fixed", left: "0px", bottom: "178px"
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return this.nativeIsShowPop && this.curMiddleConfig.bottomOcclusionStyle && this.curMiddleConfig.bottomOcclusionStyle.isShow && this.preloadVedioReady
                                        },
                                        classList: ["redpacket"],
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.curMiddleConfig.bottomOcclusionStyle.image
                                                }
                                            }, events: {click: "onClickRedpacket"}, style: {
                                                width: function () {
                                                    return this.curMiddleConfig.bottomOcclusionStyle.width + "px"
                                                }, height: function () {
                                                    return this.curMiddleConfig.bottomOcclusionStyle.height + "px"
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.curMiddleConfig.sceneStyle.image
                                            }
                                        }, shown: function () {
                                            return this.isShowBottomScence && this.nativeIsShowPop && this.curMiddleConfig.sceneStyle && this.curMiddleConfig.sceneStyle.isShow && this.curMiddleConfig.sceneStyle.image && this.customAction.isShowScence
                                        }, style: {
                                            width: function () {
                                                return this.curMiddleConfig.sceneStyle.width + "px"
                                            }, height: function () {
                                                return this.curMiddleConfig.sceneStyle.height + "px"
                                            }, position: "absolute", left: function () {
                                                return (750 - this.curMiddleConfig.sceneStyle.width) / 2 + "px"
                                            }, bottom: function () {
                                                return this.curMiddleConfig.sceneStyle.top + "px"
                                            }
                                        }, events: {click: "bottomScenceClick"}
                                    }, {
                                        type: "div",
                                        attr: {},
                                        events: {click: "bottomWatchVideo4Free"},
                                        shown: function () {
                                            return this.isShowBottomScence && this.nativeIsShowPop && this.curMiddleConfig.commonStyle.bottomExemptAd && !(this.isShowBottomScence && this.nativeIsShowPop && this.curMiddleConfig.sceneStyle && this.curMiddleConfig.sceneStyle.isShow && this.curMiddleConfig.sceneStyle.image && this.customAction.isShowScence)
                                        },
                                        classList: ["video-click-free"],
                                        style: {
                                            width: "750px",
                                            height: "60px",
                                            position: "absolute",
                                            bottom: "16px",
                                            left: "0px",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            backgroundColor: "rgba(255,255,255,0.11)"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return "看视频免" + (this.curMiddleConfig.commonStyle.exemptAdTime ? this.curMiddleConfig.commonStyle.exemptAdTime : 30) + "分钟广告"
                                                }
                                            },
                                            style: {
                                                height: "28px",
                                                fontSize: "28px",
                                                color: "rgba(0,0,0,0.3)",
                                                textAlign: "center"
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "https://ims.readnos.com/image%2F2022-09-29%2Farrow.png"},
                                            style: {width: "24px", height: "24px", marginTop: "4px"}
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {poptype: "emptyarea"},
                                    shown: function () {
                                        return "middle" == this.popType && this.isShowMiddleMask && 2 == this.curMiddleConfig.popStyle.layoutType
                                    },
                                    events: {swipe: "middleOppoAdContentSwiper", click: "middleAdContentClick"},
                                    style: {
                                        width: "750px", height: function () {
                                            return this.winHeight - this.curMiddleConfig.popStyle.height + "px"
                                        }, position: "fixed", left: "0px", top: "0px"
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        events: {click: "bottomWatchVideo4Free"},
                                        shown: function () {
                                            return 2 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.commonStyle.bottomExemptAd
                                        },
                                        classList: ["video-click-free"],
                                        style: {
                                            width: "750px",
                                            height: "60px",
                                            position: "absolute",
                                            top: "174px",
                                            left: "0px",
                                            alignItems: "center",
                                            justifyContent: "center"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return "看视频免" + (this.curMiddleConfig.commonStyle.exemptAdTime ? this.curMiddleConfig.commonStyle.exemptAdTime : 30) + "分钟广告"
                                                }
                                            },
                                            style: {
                                                height: "28px",
                                                fontSize: "28px",
                                                color: "rgba(0,0,0,0.3)",
                                                textAlign: "center"
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "https://ims.readnos.com/image%2F2022-09-29%2Farrow.png"},
                                            style: {width: "24px", height: "24px", marginTop: "4px"}
                                        }]
                                    }]
                                }, {
                                    type: "block", attr: {}, shown: function () {
                                        return this.nativeAdvObj && "vivo" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod && !("middle" == this.popType && this.isShowMiddleMask && 2 == this.curMiddleConfig.popStyle.layoutType)
                                    }, children: [{
                                        type: "div", attr: {}, classList: ["ad-native"], shown: function () {
                                            return "middle" !== this.popType
                                        }, children: [{
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.popShowGif
                                            },
                                            classList: ["before-gif"],
                                            children: [{
                                                type: "image", attr: {
                                                    src: function () {
                                                        return this.popShowGifImg
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return !this.popShowGif
                                            }, classList: ["ad-content"], children: [{
                                                type: "ad",
                                                attr: {
                                                    adid: function () {
                                                        return this.nativeAdvObj.advDetail.adId
                                                    }, show: function () {
                                                        return this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                                    }
                                                },
                                                events: {adclick: "adClickForImg"},
                                                style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                },
                                                children: [{
                                                    type: "ad-clickable-area",
                                                    attr: {type: "click"},
                                                    children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.curpopConfig.closeStyle.image
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                            }, height: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                            }, opacity: function () {
                                                                return this.curpopConfig.closeStyle.opacity
                                                            }, objectFit: "fill"
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return !this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.curpopConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, opacity: function () {
                                                        return this.curpopConfig.closeStyle.opacity
                                                    }, objectFit: "fill", transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                shown: function () {
                                                    return this.customAction.pop_title
                                                },
                                                style: {
                                                    width: "100%",
                                                    display: "flex",
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    marginBottom: "15px"
                                                },
                                                children: [{
                                                    type: "text",
                                                    attr: {value: "恭喜获得 "},
                                                    style: {color: "#ffffff", fontSize: "50px"}
                                                }, {
                                                    type: "text",
                                                    attr: {
                                                        value: function () {
                                                            return this.customAction.pop_title
                                                        }
                                                    },
                                                    style: {
                                                        fontSize: "50px", fontWeight: "bold", color: function () {
                                                            return "OPEN_RED_MONEY" === this.customAction.task_code ? "#FF4F4F" : "#FF9401"
                                                        }
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: "元 "},
                                                    style: {color: "#ff4f4f", fontSize: "50px"},
                                                    shown: function () {
                                                        return "OPEN_RED_MONEY" === this.customAction.task_code
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: " 水滴 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return "OPEN_WATAR" === this.customAction.task_code && !("OPEN_RED_MONEY" === this.customAction.task_code)
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: " 袋肥料 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return !("OPEN_FERTILIZER" !== this.customAction.task_code || "OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code)
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: "金币 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return !("OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code || "OPEN_FERTILIZER" === this.customAction.task_code)
                                                    }
                                                }]
                                            }, {
                                                type: "div", attr: {
                                                    show: function () {
                                                        return 1 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                                    },
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                                    },
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    textAlign: "center",
                                                    marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                                    },
                                                    marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                                    }
                                                }, children: [{
                                                    type: "image",
                                                    attr: {
                                                        src: function () {
                                                            return this.curpopConfig.crowdStyle.image
                                                        }
                                                    },
                                                    style: {
                                                        width: "100%",
                                                        height: "100%",
                                                        position: "absolute",
                                                        left: "0px",
                                                        top: "0px",
                                                        objectFit: "fill"
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.crowdStyle.text
                                                        }
                                                    }, style: {
                                                        fontSize: function () {
                                                            return this.curpopConfig.crowdStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.crowdStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "ad",
                                                attr: {
                                                    adid: function () {
                                                        return this.nativeAdvObj.advDetail.adId
                                                    }
                                                },
                                                events: {adclick: "adClickForImg"},
                                                classList: ["ad-title"],
                                                style: {
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                                    },
                                                    verticalAlign: "top",
                                                    width: "100%",
                                                    borderLeftWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderBottomWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderRightWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderTopWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderTopLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    },
                                                    borderTopRightRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    }
                                                },
                                                children: [{
                                                    type: "ad-clickable-area",
                                                    attr: {},
                                                    style: {flex: 1, width: "100%", height: "100%"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.nativeAdvObj.title || this.nativeAdvObj.desc || "热门应用"
                                                            }
                                                        }, style: {
                                                            width: "100%", height: "100%", color: function () {
                                                                return this.defaultStyle.titleColor
                                                            }, fontSize: function () {
                                                                return this.defaultStyle.titleFont + "px"
                                                            }, lines: 1, textOverflow: "ellipsis"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-title-close"],
                                                    events: {click: "deleteBtnClick"},
                                                    children: [{
                                                        type: "image",
                                                        attr: {src: "https://ims.readnos.com/image%2F2022-06-28%2F1656399134152_close.png"}
                                                    }]
                                                }]
                                            }, {
                                                type: "div", attr: {}, style: {
                                                    width: function () {
                                                        return this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : this.defaultStyle.imageWidth + "px"
                                                    }, height: function () {
                                                        return this.nativeIsShowPop ? this.curpopConfig.popStyle.height >= this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top || "fixed" === this.curpopConfig.materialStyle.position ? this.curpopConfig.popStyle.height + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.defaultStyle.imageHeight + "px"
                                                    }, flexDirection: "column"
                                                }, children: [{
                                                    type: "div", attr: {}, shown: function () {
                                                        return this.curpopConfig.customTextStyle.canShow
                                                    }, style: function () {
                                                        return this.curpopConfig.customBoxStyle.style
                                                    }
                                                }, {
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.popStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.popStyle.json
                                                        }, imgStyle: function () {
                                                            return "width:" + (this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : "0px") + ";                        height:" + (this.nativeIsShowPop ? this.checkActionCodeIsScreen ? "100%" : this.curpopConfig.popStyle.height + "px" : "0px") + ";                        position:absolute;                        left:0;                        top:0;                        object-fit:fill;"
                                                        }
                                                    }
                                                }, {
                                                    type: "ad",
                                                    attr: {
                                                        adid: function () {
                                                            return this.nativeAdvObj.advDetail.adId
                                                        }, show: function () {
                                                            return this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                        }
                                                    },
                                                    events: {adclick: "adClickForImg"},
                                                    style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, left: "26px", top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    },
                                                    children: [{
                                                        type: "ad-clickable-area",
                                                        attr: {type: "click"},
                                                        children: [{
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.closeStyle.image
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                                }, opacity: function () {
                                                                    return this.curpopConfig.closeStyle.opacity
                                                                }, objectFit: "fill"
                                                            }
                                                        }]
                                                    }]
                                                }, {
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return !this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill", left: function () {
                                                            return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    }, events: {click: "closeClick"}
                                                }, {
                                                    type: "ad",
                                                    attr: {
                                                        adid: function () {
                                                            return this.nativeAdvObj.advDetail.adId
                                                        }, show: function () {
                                                            return this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                        }
                                                    },
                                                    events: {adclick: "adClickForImg"},
                                                    style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, right: "26px", top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    },
                                                    children: [{
                                                        type: "ad-clickable-area",
                                                        attr: {type: "click"},
                                                        children: [{
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.closeStyle.image
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                                }, opacity: function () {
                                                                    return this.curpopConfig.closeStyle.opacity
                                                                }, objectFit: "fill"
                                                            }
                                                        }]
                                                    }]
                                                }, {
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return !this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill", right: function () {
                                                            return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    }, events: {click: "closeClick"}
                                                }, {
                                                    type: "div",
                                                    attr: {
                                                        show: function () {
                                                            return this.curpopConfig.negStyle.isShow
                                                        }
                                                    },
                                                    classList: ["cancel_btn"],
                                                    style: {
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        position: "absolute",
                                                        top: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.negStyle.top : 0) + "px"
                                                        },
                                                        left: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.negStyle.left : 0) + "px"
                                                        },
                                                        width: function () {
                                                            return this.nativeIsShowPop ? this.curpopConfig.negStyle.width ? this.curpopConfig.negStyle.width + "px" : "auto" : "0px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.negStyle.height ? this.curpopConfig.negStyle.height : this.curpopConfig.negStyle.font : "0px") + "px"
                                                        },
                                                        backgroundImage: function () {
                                                            return this.curpopConfig.negStyle.icon
                                                        },
                                                        backgroundPosition: "center center",
                                                        backgroundSize: function () {
                                                            return this.curpopConfig.negStyle.width + "px " + this.curpopConfig.negStyle.height + "px"
                                                        },
                                                        backgroundRepeat: "no-repeat",
                                                        borderRadius: function () {
                                                            return this.curpopConfig.negStyle.radio + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image",
                                                        attr: {
                                                            src: function () {
                                                                return this.curpopConfig.negStyle.icon
                                                            }
                                                        },
                                                        style: {
                                                            width: "100%",
                                                            height: "100%",
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px"
                                                        }
                                                    }, {
                                                        type: "ad",
                                                        attr: {
                                                            adid: function () {
                                                                return this.nativeAdvObj.advDetail.adId
                                                            }, show: function () {
                                                                return this.curpopConfig.isNegBtnToAd
                                                            }
                                                        },
                                                        events: {adclick: "adClickForImg"},
                                                        style: {width: "100%", height: "100%"},
                                                        children: [{
                                                            type: "ad-clickable-area",
                                                            attr: {type: "click"},
                                                            children: [{
                                                                type: "text", attr: {
                                                                    value: function () {
                                                                        return this.curpopConfig.negStyle.text
                                                                    }
                                                                }, style: {
                                                                    fontSize: function () {
                                                                        return this.curpopConfig.negStyle.font + "px"
                                                                    }, color: function () {
                                                                        return this.curpopConfig.negStyle.color
                                                                    }, width: "100%", textAlign: "center"
                                                                }
                                                            }]
                                                        }]
                                                    }, {
                                                        type: "text", attr: {
                                                            show: function () {
                                                                return !this.curpopConfig.isNegBtnToAd
                                                            }, value: function () {
                                                                return this.curpopConfig.negStyle.text
                                                            }
                                                        }, events: {click: "negClick"}, style: {
                                                            fontSize: function () {
                                                                return this.curpopConfig.negStyle.font + "px"
                                                            }, color: function () {
                                                                return this.curpopConfig.negStyle.color
                                                            }, width: "100%", textAlign: "center"
                                                        }
                                                    }]
                                                }, {
                                                    type: "ad",
                                                    attr: {
                                                        adid: function () {
                                                            return this.nativeAdvObj.advDetail.adId
                                                        }
                                                    },
                                                    classList: ["ad-btn"],
                                                    events: {adclick: "adClickForBtn"},
                                                    style: {
                                                        justifyContent: "center",
                                                        position: "absolute",
                                                        alignItems: "center",
                                                        top: function () {
                                                            return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                        },
                                                        left: function () {
                                                            return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                        },
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "ad-clickable-area",
                                                        attr: {type: "click"},
                                                        style: {
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            position: "absolute",
                                                            top: "0px",
                                                            left: "0px",
                                                            width: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                            },
                                                            height: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                            },
                                                            paddingLeft: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                            },
                                                            paddingRight: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                            },
                                                            paddingTop: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                            },
                                                            paddingBottom: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                            }
                                                        },
                                                        children: [{
                                                            type: "div",
                                                            attr: {},
                                                            classList: function () {
                                                                return [this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                            },
                                                            style: {
                                                                justifyContent: "center",
                                                                alignItems: "center",
                                                                width: function () {
                                                                    return this.curpopConfig.btnStyle.width + "px"
                                                                },
                                                                height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                },
                                                                backgroundColor: function () {
                                                                    return this.curpopConfig.btnStyle.bgColor
                                                                },
                                                                borderRadius: function () {
                                                                    return this.curpopConfig.btnStyle.radio + "px"
                                                                }
                                                            },
                                                            children: [{
                                                                type: "lottie-image", attr: {
                                                                    src: function () {
                                                                        return this.curpopConfig.btnStyle.image
                                                                    },
                                                                    source: function () {
                                                                        return this.curpopConfig.btnStyle.json
                                                                    },
                                                                    imgStyle: " position: absolute;\n                          left: 0;\n                          top: 0;\n                          width: 100%;\n                          height: 100%; "
                                                                }
                                                            }, {
                                                                type: "image", attr: {
                                                                    src: function () {
                                                                        return this.curpopConfig.btnStyle.icon
                                                                    }
                                                                }, style: {
                                                                    width: function () {
                                                                        return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                    }, height: function () {
                                                                        return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                    }, marginTop: function () {
                                                                        return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                                    }
                                                                }
                                                            }, {
                                                                type: "text", attr: {
                                                                    value: function () {
                                                                        return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                                    }
                                                                }, style: {
                                                                    textAlign: "center", fontSize: function () {
                                                                        return this.curpopConfig.btnStyle.font + "px"
                                                                    }, color: function () {
                                                                        return this.curpopConfig.btnStyle.color
                                                                    }, height: function () {
                                                                        return this.curpopConfig.btnStyle.height + "px"
                                                                    }
                                                                }
                                                            }]
                                                        }]
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    shown: function () {
                                                        return this.nativeIsShowPop && (!this.curpopConfig.btnStyle.isBindingAd || this.isNoAd)
                                                    },
                                                    classList: ["ad-btn"],
                                                    events: {click: "noAdClickForBtn"},
                                                    style: {
                                                        justifyContent: "center",
                                                        position: "absolute",
                                                        alignItems: "center",
                                                        top: function () {
                                                            return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                        },
                                                        left: function () {
                                                            return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                        },
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        paddingLeft: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingRight: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingTop: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                        },
                                                        paddingBottom: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "div",
                                                        attr: {type: "click"},
                                                        style: {
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            width: "100%",
                                                            height: "100%"
                                                        },
                                                        children: [{
                                                            type: "div",
                                                            attr: {},
                                                            classList: function () {
                                                                return [this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                            },
                                                            style: {
                                                                justifyContent: "center",
                                                                alignItems: "center",
                                                                width: function () {
                                                                    return this.curpopConfig.btnStyle.width + "px"
                                                                },
                                                                height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                },
                                                                backgroundColor: function () {
                                                                    return this.curpopConfig.btnStyle.bgColor
                                                                },
                                                                borderRadius: function () {
                                                                    return this.curpopConfig.btnStyle.radio + "px"
                                                                }
                                                            },
                                                            children: [{
                                                                type: "image",
                                                                attr: {
                                                                    src: function () {
                                                                        return this.curpopConfig.btnStyle.image
                                                                    }
                                                                },
                                                                style: {
                                                                    position: "absolute",
                                                                    left: "0px",
                                                                    top: "0px",
                                                                    width: "100%",
                                                                    height: "100%"
                                                                }
                                                            }, {
                                                                type: "image", attr: {
                                                                    src: function () {
                                                                        return this.curpopConfig.btnStyle.icon
                                                                    }
                                                                }, style: {
                                                                    width: function () {
                                                                        return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                    }, height: function () {
                                                                        return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                    }, marginTop: function () {
                                                                        return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                                    }
                                                                }
                                                            }, {
                                                                type: "text", attr: {
                                                                    value: function () {
                                                                        return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                                    }
                                                                }, style: {
                                                                    textAlign: "center", fontSize: function () {
                                                                        return this.curpopConfig.btnStyle.font + "px"
                                                                    }, color: function () {
                                                                        return this.curpopConfig.btnStyle.color
                                                                    }, height: function () {
                                                                        return this.curpopConfig.btnStyle.height + "px"
                                                                    }
                                                                }
                                                            }]
                                                        }]
                                                    }]
                                                }, {
                                                    type: "ad",
                                                    attr: {
                                                        adid: function () {
                                                            return this.nativeAdvObj.advDetail.adId
                                                        }
                                                    },
                                                    classList: ["ad-btn"],
                                                    events: {adclick: "adClickForImg"},
                                                    style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                        }, top: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.top : 0) + "px"
                                                        }, left: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.left : 0) + "px"
                                                        }, position: function () {
                                                            return this.nativeIsShowPop ? this.curpopConfig.materialStyle.position : "absolute"
                                                        }, marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "ad-clickable-area",
                                                        attr: {type: "click"},
                                                        children: [{
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.nativeAdvObj.materialUrl
                                                                }
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                                }, height: function () {
                                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                                }, objectFit: "fill", borderTopLeftRadius: function () {
                                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                                }, borderTopRightRadius: function () {
                                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                                }, borderBottomRightRadius: function () {
                                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                                }, borderBottomLeftRadius: function () {
                                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "div",
                                                            attr: {
                                                                show: function () {
                                                                    return this.nativeIsShowPop && !this.isNoAd
                                                                }
                                                            },
                                                            classList: ["ad-mask"],
                                                            children: [{type: "text", attr: {value: "广告"}}]
                                                        }, {
                                                            type: "div",
                                                            attr: {
                                                                show: function () {
                                                                    return !this.nativeIsShowPop
                                                                }
                                                            },
                                                            classList: ["ad-mask-normal"],
                                                            children: [{type: "text", attr: {value: "广告"}}]
                                                        }]
                                                    }]
                                                }, {
                                                    type: "div", attr: {}, shown: function () {
                                                        return this.nativeIsShowPop && this.curpopConfig.customTextStyle.canShow
                                                    }, style: function () {
                                                        return this.curpopConfig.customTextStyle.style
                                                    }, children: [{
                                                        type: "text", attr: {
                                                            id: function () {
                                                                return "@" == this.item.text ? "anTran" : ""
                                                            }, value: function () {
                                                                return "@" != this.item.text ? this.item.text : this.changeable
                                                            }
                                                        }, repeat: {
                                                            exp: function () {
                                                                return this.curpopConfig.customTextStyle.text
                                                            }, value: "item"
                                                        }, style: function () {
                                                            return this.item.style
                                                        }, id: function () {
                                                            return "@" == this.item.text ? "anTran" : ""
                                                        }, classList: function () {
                                                            return ["@" == this.item.text ? this.transAn : ""]
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "div", attr: {
                                                    show: function () {
                                                        return 2 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                                    },
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                                    },
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    textAlign: "center",
                                                    marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                                    },
                                                    marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                                    }
                                                }, children: [{
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.crowdStyle.text
                                                        }
                                                    }, style: {
                                                        fontSize: function () {
                                                            return this.curpopConfig.crowdStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.crowdStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "ad",
                                                attr: {
                                                    adid: function () {
                                                        return this.nativeAdvObj.advDetail.adId
                                                    }, show: function () {
                                                        return this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                                    }
                                                },
                                                events: {adclick: "adClickForImg"},
                                                style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                },
                                                children: [{
                                                    type: "ad-clickable-area",
                                                    attr: {type: "click"},
                                                    children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.curpopConfig.closeStyle.image
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                            }, height: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                            }, opacity: function () {
                                                                return this.curpopConfig.closeStyle.opacity
                                                            }, objectFit: "fill"
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return !this.curpopConfig.isCloseBtnToAd && this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.curpopConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, opacity: function () {
                                                        return this.curpopConfig.closeStyle.opacity
                                                    }, objectFit: "fill", transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["ad-title"],
                                                style: {
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                                    },
                                                    verticalAlign: "top",
                                                    width: "100%",
                                                    borderLeftWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderBottomWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderRightWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderTopWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderBottomLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    },
                                                    borderBottomRightRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    }
                                                },
                                                children: [{
                                                    type: "ad",
                                                    attr: {
                                                        adid: function () {
                                                            return this.nativeAdvObj.advDetail.adId
                                                        }
                                                    },
                                                    classList: ["ad-btn"],
                                                    style: {flex: 1, width: "100%"},
                                                    events: {adclick: "adClickForImg"},
                                                    children: [{
                                                        type: "ad-clickable-area",
                                                        attr: {type: "click"},
                                                        style: {width: "100%"},
                                                        children: [{
                                                            type: "text",
                                                            attr: {
                                                                value: function () {
                                                                    return this.nativeAdvObj.source || this.nativeAdvObj.title
                                                                }
                                                            },
                                                            style: {
                                                                width: "100%", height: "100%", color: function () {
                                                                    return this.defaultStyle.titleColor
                                                                }, fontSize: function () {
                                                                    return this.defaultStyle.titleFont + "px"
                                                                }, lines: 1, textOverflow: "ellipsis"
                                                            }
                                                        }]
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-title-icon"],
                                                    events: {click: "adClickForBtnNormal"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.adData.clickBtnTxt ? this.adData.clickBtnTxt : 2 == this.adData.interactionType ? "安装" : "打开"
                                                            }
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "ad",
                                                attr: {
                                                    adid: function () {
                                                        return this.nativeAdvObj.advDetail.adId
                                                    }
                                                },
                                                events: {adclick: "screenMistakeClickHandle"},
                                                shown: function () {
                                                    return this.checkActionCodeIsScreen && this.nativeIsShowPop && this.curpopConfig.screenConfig.isScreen2ClickAd
                                                },
                                                classList: ["skip-btn-mask"],
                                                style: function () {
                                                    return this.getBtnPosition
                                                },
                                                children: [{
                                                    type: "ad-clickable-area",
                                                    attr: {},
                                                    style: {flex: 1, width: "100%", height: "100%"}
                                                }]
                                            }, {
                                                type: "ad",
                                                attr: {
                                                    adid: function () {
                                                        return this.nativeAdvObj.advDetail.adId
                                                    }
                                                },
                                                events: {adclick: "adClickForImg"},
                                                classList: ["full-touch"],
                                                shown: function () {
                                                    return this.nativeIsShowPop && !this.isNoAd && this.curpopConfig.commonStyle.fullScreenSwitch
                                                },
                                                children: [{type: "ad-clickable-area", attr: {}}]
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-native"], shown: function () {
                                            return !("middle" !== this.popType)
                                        }, children: [{
                                            type: "div",
                                            attr: {poptype: "emptyarea"},
                                            style: {
                                                justifyContent: function () {
                                                    return "middle" == this.popType && 2 == this.curMiddleConfig.popStyle.layoutType ? "flex-end" : "center"
                                                },
                                                alignItems: "center",
                                                flexDirection: "column",
                                                width: "100%",
                                                height: "100%"
                                            },
                                            events: {click: "middleAdContentClick", swipe: "middleVivoAdContentSwiper"},
                                            children: [{
                                                type: "div",
                                                attr: {poptype: "emptyarea"},
                                                classList: ["middle-empty-tip"],
                                                style: {
                                                    width: "100%", height: function () {
                                                        return this.curMiddleConfig.tipStyle.height + "px"
                                                    }, marginBottom: function () {
                                                        return this.curMiddleConfig.tipStyle.distance + "px"
                                                    }
                                                }
                                            }, {
                                                type: "tabs", attr: {}, style: {
                                                    width: function () {
                                                        return this.curMiddleConfig.popStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curMiddleConfig.popStyle.height + "px"
                                                    },
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    flexDirection: "column"
                                                }, children: [{
                                                    type: "tab-content", attr: {
                                                        scrollable: function () {
                                                            return !this.curMiddleConfig.commonStyle.mistakeType
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.popStyle.width + "px"
                                                        },
                                                        height: function () {
                                                            return this.curMiddleConfig.popStyle.height + "px"
                                                        },
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        flexDirection: "column"
                                                    }, children: [{
                                                        type: "div",
                                                        attr: {},
                                                        classList: ["middle-ad-content"],
                                                        style: {
                                                            width: function () {
                                                                return this.curMiddleConfig.popStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curMiddleConfig.popStyle.height + "px"
                                                            },
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            flexDirection: "column"
                                                        },
                                                        children: [{
                                                            type: "div", attr: {}, shown: function () {
                                                                return 1 == this.curMiddleConfig.popStyle.bgType
                                                            }, style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.popStyle.bgWidth + "px"
                                                                }, height: function () {
                                                                    return this.curMiddleConfig.popStyle.bgHeight + "px"
                                                                }, backgroundColor: function () {
                                                                    return this.curMiddleConfig.popStyle.bgColor
                                                                }, borderRadius: function () {
                                                                    return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                                }, position: "absolute", top: "0px", left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.popStyle.bgWidth) / 2 + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "div", attr: {}, shown: function () {
                                                                return 2 == this.curMiddleConfig.popStyle.bgType
                                                            }, style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.popStyle.bgWidth + "px"
                                                                }, height: function () {
                                                                    return this.curMiddleConfig.popStyle.bgHeight + "px"
                                                                }, borderRadius: function () {
                                                                    return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                                }, position: "absolute", top: "0px", left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.popStyle.bgWidth) / 2 + "px"
                                                                }
                                                            }, children: [{
                                                                type: "image", attr: {
                                                                    src: function () {
                                                                        return this.curMiddleConfig.popStyle.bgImage
                                                                    }
                                                                }, style: {
                                                                    width: function () {
                                                                        return this.curMiddleConfig.popStyle.bgWidth + "px"
                                                                    }, height: function () {
                                                                        return this.curMiddleConfig.popStyle.bgHeight + "px"
                                                                    }, borderRadius: function () {
                                                                        return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                                    }, objectFit: "fill"
                                                                }
                                                            }]
                                                        }, {
                                                            type: "div",
                                                            attr: {},
                                                            classList: ["middle-ad-meterial"],
                                                            style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.meterialStyle.width + "px"
                                                                }, height: function () {
                                                                    return this.curMiddleConfig.meterialStyle.height + "px"
                                                                }, borderRadius: function () {
                                                                    return this.curMiddleConfig.meterialStyle.radio + "px"
                                                                }, top: function () {
                                                                    return this.curMiddleConfig.meterialStyle.top + "px"
                                                                }, left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.meterialStyle.width) / 2 + "px"
                                                                }, position: "absolute", objectFit: "fill"
                                                            },
                                                            children: [{
                                                                type: "ad",
                                                                attr: {
                                                                    adid: function () {
                                                                        return this.nativeAdvObj.advDetail.adId
                                                                    }
                                                                },
                                                                events: {adclick: "adClickForImg"},
                                                                style: {
                                                                    width: function () {
                                                                        return this.curMiddleConfig.meterialStyle.width + "px"
                                                                    },
                                                                    height: function () {
                                                                        return this.curMiddleConfig.meterialStyle.height + "px"
                                                                    },
                                                                    borderRadius: function () {
                                                                        return this.curMiddleConfig.meterialStyle.radio + "px"
                                                                    },
                                                                    top: "0px",
                                                                    left: "0px",
                                                                    position: "absolute",
                                                                    justifyContent: "center",
                                                                    alignItems: "center",
                                                                    flexDirection: "column"
                                                                },
                                                                children: [{
                                                                    type: "ad-clickable-area",
                                                                    attr: {},
                                                                    style: {flex: 1, width: "100%", height: "100%"},
                                                                    children: [{
                                                                        type: "image", attr: {
                                                                            src: function () {
                                                                                return this.curMiddleConfig.commonStyle.isCover && this.curMiddleConfig.meterialStyle.image ? this.curMiddleConfig.meterialStyle.image : this.nativeAdvObj.materialUrl
                                                                            }
                                                                        }, style: {
                                                                            width: function () {
                                                                                return this.curMiddleConfig.meterialStyle.width + "px"
                                                                            }, height: function () {
                                                                                return this.curMiddleConfig.meterialStyle.height + "px"
                                                                            }, borderRadius: function () {
                                                                                return this.curMiddleConfig.meterialStyle.radio + "px"
                                                                            }, objectFit: "contain"
                                                                        }
                                                                    }, {
                                                                        type: "text",
                                                                        attr: {value: "去广告"},
                                                                        shown: function () {
                                                                            return this.nativeIsShowPop && "middle" == this.popType && this.curMiddleConfig.functionConfig.isCloseAd2ClickAd
                                                                        },
                                                                        classList: ["middle-clear-ad-tag"]
                                                                    }, {
                                                                        type: "text",
                                                                        attr: {value: "▼"},
                                                                        classList: ["graph"]
                                                                    }]
                                                                }]
                                                            }, {
                                                                type: "text",
                                                                attr: {value: "去广告"},
                                                                shown: function () {
                                                                    return this.nativeIsShowPop && "middle" == this.popType && !this.curMiddleConfig.functionConfig.isCloseAd2ClickAd
                                                                },
                                                                events: {click: "removeMiddleAd"},
                                                                classList: ["middle-clear-ad-tag"]
                                                            }, {
                                                                type: "text",
                                                                attr: {value: "▼"},
                                                                classList: ["graph"]
                                                            }, {
                                                                type: "text",
                                                                attr: {value: "看视频免广告"},
                                                                classList: ["video-ad-tag"],
                                                                events: {
                                                                    click: function (t) {
                                                                        return this.topWatchVideo4Free(t)
                                                                    }
                                                                },
                                                                shown: function () {
                                                                    return this.nativeIsShowPop && "middle" == this.popType && this.curMiddleConfig.commonStyle.materialExemptAd
                                                                },
                                                                style: {
                                                                    width: "200px",
                                                                    height: "44px",
                                                                    lineHeight: "42px",
                                                                    backgroundColor: "rgba(0,0,0,0.15)",
                                                                    borderRadius: "22px",
                                                                    textAlign: "center",
                                                                    color: "rgba(255,255,255,0.5)",
                                                                    fontSize: "28px",
                                                                    position: "absolute",
                                                                    top: "10px",
                                                                    right: "162px"
                                                                }
                                                            }, {
                                                                type: "text",
                                                                attr: {value: "广告"},
                                                                classList: ["middle-ad-tag"]
                                                            }, {
                                                                type: "image", attr: {
                                                                    src: function () {
                                                                        return this.nativeAdvObj.icon
                                                                    }
                                                                }, classList: ["middle-ad-icon"], shown: function () {
                                                                    return this.nativeAdvObj.icon
                                                                }
                                                            }]
                                                        }, {
                                                            type: "ad",
                                                            attr: {
                                                                adid: function () {
                                                                    return this.nativeAdvObj.advDetail.adId
                                                                }
                                                            },
                                                            events: {adclick: "adClickForImg"},
                                                            style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.descStyle.width + "px"
                                                                },
                                                                height: function () {
                                                                    return this.curMiddleConfig.descStyle.height + "px"
                                                                },
                                                                position: "absolute",
                                                                left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.descStyle.width) / 2 + "px"
                                                                },
                                                                top: function () {
                                                                    return this.curMiddleConfig.descStyle.top + "px"
                                                                },
                                                                justifyContent: "center",
                                                                alignItems: "center",
                                                                flexDirection: "column"
                                                            },
                                                            children: [{
                                                                type: "ad-clickable-area",
                                                                attr: {},
                                                                style: {flex: 1, width: "100%", height: "100%"},
                                                                children: [{
                                                                    type: "div",
                                                                    attr: {},
                                                                    classList: ["middle-ad-desc"],
                                                                    style: {
                                                                        width: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.width : 0) + "px"
                                                                        },
                                                                        height: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.height : 0) + "px"
                                                                        },
                                                                        fontSize: function () {
                                                                            return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.size : 0) + "px"
                                                                        },
                                                                        lineHeight: function () {
                                                                            return this.curMiddleConfig.descStyle.height / 2 + "px"
                                                                        },
                                                                        color: function () {
                                                                            return this.curMiddleConfig.descStyle.color
                                                                        },
                                                                        backgroundColor: function () {
                                                                            return this.curMiddleConfig.descStyle.bgColor || ""
                                                                        },
                                                                        position: "absolute",
                                                                        left: "0px",
                                                                        top: "0px",
                                                                        flexDirection: "column",
                                                                        justifyContent: "space-between"
                                                                    },
                                                                    children: [{
                                                                        type: "text",
                                                                        attr: {
                                                                            value: function () {
                                                                                return this.curMiddleConfig.commonStyle.isCover && this.curMiddleConfig.descStyle.text ? this.curMiddleConfig.descStyle.text : this.nativeAdvObj.desc ? this.nativeAdvObj.desc : this.nativeAdvObj.title ? this.nativeAdvObj.title : "热门应用"
                                                                            }
                                                                        },
                                                                        style: {
                                                                            lines: 1,
                                                                            textOverflow: "ellipsis",
                                                                            color: function () {
                                                                                return this.curMiddleConfig.descStyle.color
                                                                            },
                                                                            fontSize: function () {
                                                                                return (this.nativeIsShowPop && "middle" === this.popType ? this.curMiddleConfig.descStyle.size : 0) + "px"
                                                                            }
                                                                        }
                                                                    }, {
                                                                        type: "div",
                                                                        attr: {},
                                                                        style: {
                                                                            alignItems: "center",
                                                                            marginTop: "10px"
                                                                        },
                                                                        children: [{
                                                                            type: "image",
                                                                            attr: {
                                                                                width: "80px",
                                                                                height: "80px",
                                                                                src: function () {
                                                                                    return this.nativeAdvObj.icon || this.curMiddleConfig.meterialStyle.image || this.nativeAdvObj.materialUrl
                                                                                }
                                                                            },
                                                                            style: {
                                                                                marginRight: "20px",
                                                                                borderRadius: "12px"
                                                                            }
                                                                        }, {
                                                                            type: "text", attr: {
                                                                                value: function () {
                                                                                    return this.nativeAdvObj.title || "热门应用"
                                                                                }
                                                                            }, classList: ["middle-ad-desc"]
                                                                        }]
                                                                    }]
                                                                }]
                                                            }]
                                                        }, {
                                                            type: "image",
                                                            attr: {
                                                                poptype: "emptyarea", src: function () {
                                                                    return this.curMiddleConfig.guideStyle.image
                                                                }
                                                            },
                                                            shown: function () {
                                                                return this.curMiddleConfig.guideStyle.isShow
                                                            },
                                                            style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.guideStyle.width + "px"
                                                                }, height: function () {
                                                                    return this.curMiddleConfig.guideStyle.height + "px"
                                                                }, position: "absolute", left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.guideStyle.width) / 2 + "px"
                                                                }, top: function () {
                                                                    return this.curMiddleConfig.guideStyle.top + "px"
                                                                }, objectFit: "fill"
                                                            }
                                                        }, {
                                                            type: "ad",
                                                            attr: {
                                                                adid: function () {
                                                                    return this.nativeAdvObj.advDetail.adId
                                                                }
                                                            },
                                                            events: {adclick: "adClickForBtn"},
                                                            classList: function () {
                                                                return [this.curMiddleConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                            },
                                                            style: {
                                                                width: function () {
                                                                    return this.curMiddleConfig.btnStyle.width + "px"
                                                                },
                                                                height: function () {
                                                                    return this.curMiddleConfig.btnStyle.height + (this.curMiddleConfig.btnStyle.oppoMistakeRange ? this.curMiddleConfig.btnStyle.oppoMistakeRange : 0) + "px"
                                                                },
                                                                position: "absolute",
                                                                top: function () {
                                                                    return this.curMiddleConfig.btnStyle.top + "px"
                                                                },
                                                                left: function () {
                                                                    return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.btnStyle.width) / 2 + "px"
                                                                },
                                                                justifyContent: "center",
                                                                alignItems: "center",
                                                                flexDirection: "column"
                                                            },
                                                            children: [{
                                                                type: "ad-clickable-area",
                                                                attr: {},
                                                                style: {flex: 1, width: "100%", height: "100%"},
                                                                children: [{
                                                                    type: "image", attr: {
                                                                        src: function () {
                                                                            return this.curMiddleConfig.btnStyle.image
                                                                        }
                                                                    }, shown: function () {
                                                                        return 2 == this.curMiddleConfig.btnStyle.type
                                                                    }, style: {
                                                                        width: function () {
                                                                            return this.curMiddleConfig.btnStyle.width + "px"
                                                                        },
                                                                        height: function () {
                                                                            return this.curMiddleConfig.btnStyle.height + "px"
                                                                        },
                                                                        borderRadius: function () {
                                                                            return this.curMiddleConfig.btnStyle.radio + "px"
                                                                        },
                                                                        position: "absolute",
                                                                        left: "0px",
                                                                        top: "0px",
                                                                        objectFit: "fill"
                                                                    }
                                                                }, {
                                                                    type: "div",
                                                                    attr: {},
                                                                    classList: ["middle-ad-button"],
                                                                    events: {
                                                                        click: function (t) {
                                                                            return this.adClickForBtn(this.nativeAdvObj.isUsedAdButton, t)
                                                                        }
                                                                    },
                                                                    style: {
                                                                        width: function () {
                                                                            return this.curMiddleConfig.btnStyle.width + "px"
                                                                        },
                                                                        height: function () {
                                                                            return this.curMiddleConfig.btnStyle.height + "px"
                                                                        },
                                                                        borderRadius: function () {
                                                                            return this.curMiddleConfig.btnStyle.radio + "px"
                                                                        },
                                                                        backgroundColor: function () {
                                                                            return 1 == this.curMiddleConfig.btnStyle.type ? this.curMiddleConfig.btnStyle.bgColor : "rgba(255,255,255,0)"
                                                                        },
                                                                        position: "absolute",
                                                                        left: "0px",
                                                                        top: "0px",
                                                                        justifyContent: "center",
                                                                        alignItems: "center",
                                                                        flexDirection: "column"
                                                                    },
                                                                    children: [{
                                                                        type: "text",
                                                                        attr: {
                                                                            value: function () {
                                                                                return this.curMiddleConfig.commonStyle.isCover ? this.curMiddleConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                                            }
                                                                        },
                                                                        style: {
                                                                            fontSize: function () {
                                                                                return this.curMiddleConfig.btnStyle.size + "px"
                                                                            }, color: function () {
                                                                                return this.curMiddleConfig.btnStyle.color
                                                                            }
                                                                        }
                                                                    }]
                                                                }]
                                                            }]
                                                        }]
                                                    }]
                                                }]
                                            }]
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        events: {click: "bottomWatchVideo4Free"},
                                        shown: function () {
                                            return this.nativeIsShowPop && "middle" == this.popType && 2 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.commonStyle.bottomExemptAd
                                        },
                                        classList: ["video-click-free"],
                                        style: {
                                            width: "750px",
                                            height: "60px",
                                            position: "absolute",
                                            top: "174px",
                                            left: "0px",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            backgroundColor: "rgba(255,255,255,0.11)"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return "看视频免" + (this.curMiddleConfig.commonStyle.exemptAdTime ? this.curMiddleConfig.commonStyle.exemptAdTime : 30) + "分钟广告"
                                                }
                                            },
                                            style: {
                                                height: "28px",
                                                fontSize: "28px",
                                                color: "rgba(0,0,0,0.3)",
                                                textAlign: "center"
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "https://ims.readnos.com/image%2F2022-09-29%2Farrow.png"},
                                            style: {width: "24px", height: "24px", marginTop: "4px"}
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.curMiddleConfig.sceneStyle.image
                                            }
                                        }, shown: function () {
                                            return this.isShowBottomScence && this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.sceneStyle && this.curMiddleConfig.sceneStyle.isShow && this.curMiddleConfig.sceneStyle.image && this.customAction.isShowScence
                                        }, style: {
                                            width: function () {
                                                return this.curMiddleConfig.sceneStyle.width + "px"
                                            }, height: function () {
                                                return this.curMiddleConfig.sceneStyle.height + "px"
                                            }, position: "absolute", left: function () {
                                                return (750 - this.curMiddleConfig.sceneStyle.width) / 2 + "px"
                                            }, bottom: function () {
                                                return this.curMiddleConfig.sceneStyle.top + "px"
                                            }
                                        }, events: {click: "bottomScenceClick"}
                                    }, {
                                        type: "div",
                                        attr: {},
                                        events: {click: "bottomWatchVideo4Free"},
                                        shown: function () {
                                            return this.isShowBottomScence && this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.commonStyle.bottomExemptAd && !(this.isShowBottomScence && this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.sceneStyle && this.curMiddleConfig.sceneStyle.isShow && this.curMiddleConfig.sceneStyle.image && this.customAction.isShowScence)
                                        },
                                        classList: ["video-click-free"],
                                        style: {
                                            width: "750px",
                                            height: "60px",
                                            position: "absolute",
                                            bottom: "16px",
                                            left: "0px",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            backgroundColor: "rgba(255,255,255,0.11)"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return "看视频免" + (this.curMiddleConfig.commonStyle.exemptAdTime ? this.curMiddleConfig.commonStyle.exemptAdTime : 30) + "分钟广告"
                                                }
                                            },
                                            style: {
                                                height: "28px",
                                                fontSize: "28px",
                                                color: "rgba(0,0,0,0.3)",
                                                textAlign: "center"
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "https://ims.readnos.com/image%2F2022-09-29%2Farrow.png"},
                                            style: {width: "24px", height: "24px", marginTop: "4px"}
                                        }]
                                    }]
                                }, {
                                    type: "xm2", attr: {
                                        delayConfig: function () {
                                            return this.delayConfig
                                        }, curpopConfig: function () {
                                            return this.curpopConfig
                                        }, curMiddleConfig: function () {
                                            return this.curMiddleConfig
                                        }, defaultStyle: function () {
                                            return this.defaultStyle
                                        }, customAction: function () {
                                            return this.customAction
                                        }, nativeAdvObj: function () {
                                            return this.nativeAdvObj
                                        }, nativeIsShowPop: function () {
                                            return this.nativeIsShowPop
                                        }, popShowGif: function () {
                                            return this.popShowGif
                                        }, popShowGifImg: function () {
                                            return this.popShowGifImg
                                        }, popType: function () {
                                            return this.popType
                                        }, actionCode: function () {
                                            return this.actionCode
                                        }, winHeight: function () {
                                            return this.winHeight
                                        }, preloadVedioReady: function () {
                                            return this.preloadVedioReady
                                        }, isNoAd: function () {
                                            return this.isNoAd
                                        }, positionRight: function () {
                                            return this.positionRight
                                        }, beforeJumpGif: function () {
                                            return this.beforeJumpGif
                                        }, beforeJumpImg: function () {
                                            return this.beforeJumpImg
                                        }, adContentStyle: function () {
                                            return this.adContentStyle
                                        }, index: function () {
                                            return this.index
                                        }
                                    }, shown: function () {
                                        return this.isXM2Show && this.nativeAdvObj && "xiaomi" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod && !this.isXmTemplateAd && 9 !== this.nativeAdvObj.adType && !("middle" == this.popType && this.isShowMiddleMask && 2 == this.curMiddleConfig.popStyle.layoutType) && !(this.nativeAdvObj && "vivo" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod)
                                    }
                                }, {
                                    type: "xm-temp", attr: {
                                        delayConfig: function () {
                                            return this.delayConfig
                                        }, curpopConfig: function () {
                                            return this.curpopConfig
                                        }, curMiddleConfig: function () {
                                            return this.curMiddleConfig
                                        }, defaultStyle: function () {
                                            return this.defaultStyle
                                        }, customAction: function () {
                                            return this.customAction
                                        }, nativeAdvObj: function () {
                                            return this.nativeAdvObj
                                        }, nativeIsShowPop: function () {
                                            return this.nativeIsShowPop
                                        }, popShowGif: function () {
                                            return this.popShowGif
                                        }, popShowGifImg: function () {
                                            return this.popShowGifImg
                                        }, popType: function () {
                                            return this.popType
                                        }, actionCode: function () {
                                            return this.actionCode
                                        }, winHeight: function () {
                                            return this.winHeight
                                        }, preloadVedioReady: function () {
                                            return this.preloadVedioReady
                                        }, isNoAd: function () {
                                            return this.isNoAd
                                        }, positionRight: function () {
                                            return this.positionRight
                                        }, beforeJumpGif: function () {
                                            return this.beforeJumpGif
                                        }, beforeJumpImg: function () {
                                            return this.beforeJumpImg
                                        }, adContentStyle: function () {
                                            return this.adContentStyle
                                        }, index: function () {
                                            return this.index
                                        }
                                    }, shown: function () {
                                        return this.nativeAdvObj && this.isXmTemplateAd && !("middle" == this.popType && this.isShowMiddleMask && 2 == this.curMiddleConfig.popStyle.layoutType) && !(this.nativeAdvObj && "vivo" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod) && !(this.isXM2Show && this.nativeAdvObj && "xiaomi" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod && !this.isXmTemplateAd && 9 !== this.nativeAdvObj.adType)
                                    }
                                }, {
                                    type: "ylh-ad-native", attr: {
                                        delayConfig: function () {
                                            return this.delayConfig
                                        }, curpopConfig: function () {
                                            return this.curpopConfig
                                        }, defaultStyle: function () {
                                            return this.defaultStyle
                                        }, customAction: function () {
                                            return this.customAction
                                        }, nativeAdvObj: function () {
                                            return this.nativeAdvObj
                                        }, nativeIsShowPop: function () {
                                            return this.nativeIsShowPop
                                        }, popShowGif: function () {
                                            return this.popShowGif
                                        }, popShowGifImg: function () {
                                            return this.popShowGifImg
                                        }, popType: function () {
                                            return this.popType
                                        }, actionCode: function () {
                                            return this.actionCode
                                        }, winHeight: function () {
                                            return this.winHeight
                                        }, preloadVedioReady: function () {
                                            return this.preloadVedioReady
                                        }, isNoAd: function () {
                                            return this.isNoAd
                                        }, positionRight: function () {
                                            return this.positionRight
                                        }, beforeJumpGif: function () {
                                            return this.beforeJumpGif
                                        }, beforeJumpImg: function () {
                                            return this.beforeJumpImg
                                        }, adContentStyle: function () {
                                            return this.adContentStyle
                                        }, index: function () {
                                            return this.index
                                        }
                                    }, shown: function () {
                                        return this.nativeAdvObj && 9 === this.nativeAdvObj.adType && !this.isNoAd && !("middle" == this.popType && this.isShowMiddleMask && 2 == this.curMiddleConfig.popStyle.layoutType) && !(this.nativeAdvObj && "vivo" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod) && !(this.isXM2Show && this.nativeAdvObj && "xiaomi" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod && !this.isXmTemplateAd && 9 !== this.nativeAdvObj.adType) && !(this.nativeAdvObj && this.isXmTemplateAd)
                                    }
                                }, {
                                    type: "block", attr: {}, shown: function () {
                                        return this.nativeAdvObj && "0.0" == this.nativeAdvObj.adMethod && this.nativeAdvObj.isUIShow && !("middle" == this.popType && this.isShowMiddleMask && 2 == this.curMiddleConfig.popStyle.layoutType) && !(this.nativeAdvObj && "vivo" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod) && !(this.isXM2Show && this.nativeAdvObj && "xiaomi" == this.nativeAdvObj.brand && "2.0" == this.nativeAdvObj.adMethod && !this.isXmTemplateAd && 9 !== this.nativeAdvObj.adType) && !(this.nativeAdvObj && this.isXmTemplateAd) && !(this.nativeAdvObj && 9 === this.nativeAdvObj.adType && !this.isNoAd)
                                    }, children: [{
                                        type: "div", attr: {}, classList: ["ad-native"], shown: function () {
                                            return "middle" !== this.popType
                                        }, children: [{
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.popShowGif
                                            },
                                            classList: ["before-gif"],
                                            children: [{
                                                type: "image", attr: {
                                                    src: function () {
                                                        return this.popShowGifImg
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return !this.popShowGif
                                            },
                                            classList: ["ad-content"],
                                            children: [{
                                                type: "image", attr: {
                                                    show: function () {
                                                        return this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.curpopConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, opacity: function () {
                                                        return this.curpopConfig.closeStyle.opacity
                                                    }, objectFit: "fill", transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                shown: function () {
                                                    return this.customAction.pop_title
                                                },
                                                style: {
                                                    width: "100%",
                                                    display: "flex",
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    marginBottom: "15px"
                                                },
                                                children: [{
                                                    type: "text",
                                                    attr: {value: "恭喜获得 "},
                                                    style: {color: "#ffffff", fontSize: "50px"}
                                                }, {
                                                    type: "text",
                                                    attr: {
                                                        value: function () {
                                                            return this.customAction.pop_title
                                                        }
                                                    },
                                                    style: {
                                                        fontSize: "50px", fontWeight: "bold", color: function () {
                                                            return "OPEN_RED_MONEY" === this.customAction.task_code ? "#FF4F4F" : "#FF9401"
                                                        }
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: "元 "},
                                                    style: {color: "#ff4f4f", fontSize: "50px"},
                                                    shown: function () {
                                                        return "OPEN_RED_MONEY" === this.customAction.task_code
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: " 水滴 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return "OPEN_WATAR" === this.customAction.task_code && !("OPEN_RED_MONEY" === this.customAction.task_code)
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: " 袋肥料 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return !("OPEN_FERTILIZER" !== this.customAction.task_code || "OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code)
                                                    }
                                                }, {
                                                    type: "text",
                                                    attr: {value: "金币 "},
                                                    style: {color: "#ff9401", fontSize: "50px"},
                                                    shown: function () {
                                                        return !("OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code || "OPEN_FERTILIZER" === this.customAction.task_code)
                                                    }
                                                }]
                                            }, {
                                                type: "div", attr: {
                                                    show: function () {
                                                        return 1 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                                    },
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                                    },
                                                    alignItems: "center",
                                                    justifyContent: "center",
                                                    textAlign: "center",
                                                    marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                                    },
                                                    marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                                    }
                                                }, children: [{
                                                    type: "image",
                                                    attr: {
                                                        src: function () {
                                                            return this.curpopConfig.crowdStyle.image
                                                        }
                                                    },
                                                    style: {
                                                        width: "100%",
                                                        height: "100%",
                                                        position: "absolute",
                                                        left: "0px",
                                                        top: "0px",
                                                        objectFit: "fill"
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.crowdStyle.text
                                                        }
                                                    }, style: {
                                                        fontSize: function () {
                                                            return this.curpopConfig.crowdStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.crowdStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["ad-title"],
                                                style: {
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                                    },
                                                    verticalAlign: "top",
                                                    width: "100%",
                                                    borderLeftWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderBottomWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderRightWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderTopWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderTopLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    },
                                                    borderTopRightRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    }
                                                },
                                                children: [{
                                                    type: "div",
                                                    attr: {},
                                                    style: {flex: 1, width: "100%"},
                                                    events: {click: "adClickForImg"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.nativeAdvObj.title || this.nativeAdvObj.desc || "热门应用"
                                                            }
                                                        }, style: {
                                                            width: "100%", height: "100%", color: function () {
                                                                return this.defaultStyle.titleColor
                                                            }, fontSize: function () {
                                                                return this.defaultStyle.titleFont + "px"
                                                            }, lines: 1, textOverflow: "ellipsis"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-title-close"],
                                                    events: {click: "deleteBtnClick"},
                                                    children: [{
                                                        type: "image",
                                                        attr: {src: "https://ims.readnos.com/image%2F2022-06-28%2F1656399134152_close.png"}
                                                    }]
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {id: "coord"},
                                                id: "coord",
                                                events: {touchend: "adTouchend", touchstart: "adtouchstart"},
                                                style: {
                                                    width: function () {
                                                        return this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : this.defaultStyle.imageWidth + "px"
                                                    }, height: function () {
                                                        return this.nativeIsShowPop ? this.curpopConfig.popStyle.height >= this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top || "fixed" === this.curpopConfig.materialStyle.position && "fixed" === this.curpopConfig.materialStyle.position ? this.curpopConfig.popStyle.height + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.defaultStyle.imageHeight + "px"
                                                    }, flexDirection: "column"
                                                },
                                                children: [{
                                                    type: "div", attr: {}, shown: function () {
                                                        return this.curpopConfig.customTextStyle.canShow
                                                    }, style: function () {
                                                        return this.curpopConfig.customBoxStyle.style
                                                    }
                                                }, {
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.popStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.popStyle.json
                                                        }, imgStyle: function () {
                                                            return "width:" + (this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : "0px") + ";                        height:" + (this.nativeIsShowPop ? this.checkActionCodeIsScreen ? "100%" : this.curpopConfig.popStyle.height + "px" : "0px") + ";                        position:absolute;                        left:0;                        top:0;                        object-fit:fill;"
                                                        }
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill", left: function () {
                                                            return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    }, events: {click: "closeClick"}
                                                }, {
                                                    type: "image", attr: {
                                                        show: function () {
                                                            return this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                        }, src: function () {
                                                            return this.curpopConfig.closeStyle.image
                                                        }
                                                    }, style: {
                                                        position: "absolute", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                        }, opacity: function () {
                                                            return this.curpopConfig.closeStyle.opacity
                                                        }, objectFit: "fill", right: function () {
                                                            return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.closeStyle.top + 10 + "px"
                                                        }
                                                    }, events: {click: "closeClick"}
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    shown: function () {
                                                        return this.nativeIsShowPop
                                                    },
                                                    classList: function () {
                                                        return ["ad-btn", this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                    },
                                                    events: {
                                                        click: function (t) {
                                                            return this.adClickForBtn(this.nativeAdvObj.isUsedAdButton, t)
                                                        }
                                                    },
                                                    style: {
                                                        justifyContent: "center",
                                                        position: "absolute",
                                                        alignItems: "center",
                                                        top: function () {
                                                            return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                        },
                                                        left: function () {
                                                            return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                        },
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        paddingLeft: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingRight: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingTop: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                        },
                                                        paddingBottom: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "div",
                                                        attr: {},
                                                        shown: function () {
                                                            return 2 !== this.nativeAdvObj.isUsedAdButton
                                                        },
                                                        style: {
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            width: function () {
                                                                return this.curpopConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curpopConfig.btnStyle.height + "px"
                                                            },
                                                            backgroundColor: function () {
                                                                return this.curpopConfig.btnStyle.bgColor
                                                            },
                                                            borderRadius: function () {
                                                                return this.curpopConfig.btnStyle.radio + "px"
                                                            }
                                                        },
                                                        children: [{
                                                            type: "lottie-image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.image
                                                                }, source: function () {
                                                                    return this.curpopConfig.btnStyle.json
                                                                }, imgStyle: function () {
                                                                    return "position: absolute;                        left: 0;                        top: 0;                        width: " + this.curpopConfig.btnStyle.width + "px;                        height: " + this.curpopConfig.btnStyle.height + "px;                        object-fit:fill;"
                                                                }
                                                            }
                                                        }, {
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.icon
                                                                }
                                                            }, shown: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton || !this.nativeAdvObj.isUsedAdButton
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, marginTop: function () {
                                                                    return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                                }
                                                            }, shown: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton || !this.nativeAdvObj.isUsedAdButton
                                                            }, style: {
                                                                textAlign: "center", fontSize: function () {
                                                                    return this.curpopConfig.btnStyle.font + "px"
                                                                }, color: function () {
                                                                    return this.curpopConfig.btnStyle.color
                                                                }, height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                }
                                                            }
                                                        }]
                                                    }, {
                                                        type: "ad-button", attr: {
                                                            valuetype: function () {
                                                                return this.curpopConfig.btnStyle.huaweiValueType || this.curMiddleConfig.btnStyle.huaweiValueType
                                                            }, openType: function () {
                                                                return this.curpopConfig.btnStyle.huaweiOpenType || this.curMiddleConfig.btnStyle.huaweiOpenType
                                                            }, adunitid: function () {
                                                                return this.nativeAdvObj.id
                                                            }, adid: function () {
                                                                return this.nativeAdvObj.advDetail.adId
                                                            }, installTextValue: function () {
                                                                return this.curMiddleConfig.btnStyle.hwInstallText || this.curpopConfig.btnStyle.hwInstallText
                                                            }, openTextValue: function () {
                                                                return this.curMiddleConfig.btnStyle.hwOpenText || this.curpopConfig.btnStyle.hwOpenText
                                                            }
                                                        }, shown: function () {
                                                            return this.nativeAdvObj.isUsedAdButton
                                                        }, events: {click: "adButtonClickForBtn"}, style: {
                                                            position: "absolute",
                                                            left: function () {
                                                                return (3 == this.nativeAdvObj.isUsedAdButton ? -10 : 0) + "px"
                                                            },
                                                            top: function () {
                                                                return (3 == this.nativeAdvObj.isUsedAdButton ? -10 : 0) + "px"
                                                            },
                                                            opacity: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton ? 0 : 1
                                                            },
                                                            width: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout + (3 == this.nativeAdvObj.isUsedAdButton ? 20 : 0) : 0) + "px"
                                                            },
                                                            height: function () {
                                                                return (3 == this.nativeAdvObj.isUsedAdButton ? 180 : this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                            },
                                                            fontSize: function () {
                                                                return this.curpopConfig.btnStyle.font + "px"
                                                            },
                                                            color: function () {
                                                                return this.curpopConfig.btnStyle.hwBtnColor
                                                            },
                                                            backgroundColor: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton ? "transparent" : this.curpopConfig.btnStyle.hwBtnBgColor
                                                            },
                                                            backgroundImage: function () {
                                                                return this.curpopConfig.btnStyle.hwBtnBgImage
                                                            },
                                                            progressbarColor: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton ? "transparent" : ""
                                                            },
                                                            progressbarBackgroundColor: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton ? "transparent" : ""
                                                            },
                                                            borderRadius: function () {
                                                                return this.curpopConfig.btnStyle.radio + "px"
                                                            },
                                                            backgroundSize: "cover",
                                                            backgroundPosition: "center center",
                                                            backgroundRepeat: "no-repeat"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    shown: function () {
                                                        return this.nativeIsShowPop && (!this.curpopConfig.btnStyle.isBindingAd || this.isNoAd)
                                                    },
                                                    classList: function () {
                                                        return ["ad-btn", this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                    },
                                                    events: {
                                                        click: function (t) {
                                                            return this.noAdClickForBtn(this.nativeAdvObj.isUsedAdButton, t)
                                                        }
                                                    },
                                                    style: {
                                                        justifyContent: "center",
                                                        position: "absolute",
                                                        alignItems: "center",
                                                        top: function () {
                                                            return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                        },
                                                        left: function () {
                                                            return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                        },
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        paddingLeft: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingRight: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                        },
                                                        paddingTop: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                        },
                                                        paddingBottom: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "div",
                                                        attr: {},
                                                        shown: function () {
                                                            return 2 !== this.nativeAdvObj.isUsedAdButton
                                                        },
                                                        style: {
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            width: function () {
                                                                return this.curpopConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curpopConfig.btnStyle.height + "px"
                                                            },
                                                            backgroundColor: function () {
                                                                return this.curpopConfig.btnStyle.bgColor
                                                            },
                                                            borderRadius: function () {
                                                                return this.curpopConfig.btnStyle.radio + "px"
                                                            }
                                                        },
                                                        children: [{
                                                            type: "lottie-image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.image
                                                                }, source: function () {
                                                                    return this.curpopConfig.btnStyle.json
                                                                }, imgStyle: function () {
                                                                    return "position: absolute;                        left: 0;                        top: 0;                        width: " + this.curpopConfig.btnStyle.width + "px;                        height: " + this.curpopConfig.btnStyle.height + "px;                        object-fit:fill;"
                                                                }
                                                            }
                                                        }, {
                                                            type: "image", attr: {
                                                                src: function () {
                                                                    return this.curpopConfig.btnStyle.icon
                                                                }
                                                            }, shown: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton || !this.nativeAdvObj.isUsedAdButton
                                                            }, style: {
                                                                width: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, height: function () {
                                                                    return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                                }, marginTop: function () {
                                                                    return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.nativeAdvObj.clickBtnTxt || "打开"
                                                                }
                                                            }, shown: function () {
                                                                return 1 == this.nativeAdvObj.isUsedAdButton || 2 == this.nativeAdvObj.isUsedAdButton
                                                            }, style: {
                                                                textAlign: "center", fontSize: function () {
                                                                    return this.curpopConfig.btnStyle.font + "px"
                                                                }, color: function () {
                                                                    return this.curpopConfig.btnStyle.color
                                                                }, height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                }
                                                            }
                                                        }, {
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                                }
                                                            }, shown: function () {
                                                                return !(3 != this.nativeAdvObj.isUsedAdButton && this.nativeAdvObj.isUsedAdButton || 1 == this.nativeAdvObj.isUsedAdButton || 2 == this.nativeAdvObj.isUsedAdButton)
                                                            }, style: {
                                                                textAlign: "center", fontSize: function () {
                                                                    return this.curpopConfig.btnStyle.font + "px"
                                                                }, color: function () {
                                                                    return this.curpopConfig.btnStyle.color
                                                                }, height: function () {
                                                                    return this.curpopConfig.btnStyle.height + "px"
                                                                }
                                                            }
                                                        }]
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {
                                                        show: function () {
                                                            return this.curpopConfig.negStyle.isShow
                                                        }
                                                    },
                                                    classList: ["cancel_btn"],
                                                    style: {
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        position: "absolute",
                                                        top: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.negStyle.top : 0) + "px"
                                                        },
                                                        left: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.negStyle.left : 0) + "px"
                                                        },
                                                        width: function () {
                                                            return this.nativeIsShowPop ? this.curpopConfig.negStyle.width ? this.curpopConfig.negStyle.width + "px" : "auto" : "0px"
                                                        },
                                                        height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.negStyle.height ? this.curpopConfig.negStyle.height : this.curpopConfig.negStyle.font : "0px") + "px"
                                                        },
                                                        backgroundImage: function () {
                                                            return this.curpopConfig.negStyle.icon
                                                        },
                                                        backgroundPosition: "center center",
                                                        backgroundSize: function () {
                                                            return this.curpopConfig.negStyle.width + "px " + this.curpopConfig.negStyle.height + "px"
                                                        },
                                                        backgroundRepeat: "no-repeat",
                                                        borderRadius: function () {
                                                            return this.curpopConfig.negStyle.radio + "px"
                                                        },
                                                        marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image",
                                                        attr: {
                                                            src: function () {
                                                                return this.curpopConfig.negStyle.icon
                                                            }
                                                        },
                                                        style: {
                                                            width: "100%",
                                                            height: "100%",
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px"
                                                        }
                                                    }, {
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.curpopConfig.negStyle.text
                                                            }
                                                        }, events: {click: "negClick"}, style: {
                                                            fontSize: function () {
                                                                return this.curpopConfig.negStyle.font + "px"
                                                            }, color: function () {
                                                                return this.curpopConfig.negStyle.color
                                                            }, width: "100%", textAlign: "center"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-btn"],
                                                    events: {click: "adClickForImg"},
                                                    style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                        }, top: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.top : 0) + "px"
                                                        }, left: function () {
                                                            return (this.nativeIsShowPop ? (this.curpopConfig.popStyle.width - this.curpopConfig.materialStyle.width) / 2 : 0) + "px"
                                                        }, position: "absolute", marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    shown: function () {
                                                        return "fixed" !== this.curpopConfig.materialStyle.position
                                                    },
                                                    children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.nativeAdvObj && this.nativeAdvObj.materialUrl
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                            }, height: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                            }, objectFit: "fill", borderTopLeftRadius: function () {
                                                                return this.nativeIsShowPop ? "8px" : "0px"
                                                            }, borderTopRightRadius: function () {
                                                                return this.nativeIsShowPop ? "8px" : "0px"
                                                            }, borderBottomRightRadius: function () {
                                                                return this.nativeIsShowPop ? "8px" : "0px"
                                                            }, borderBottomLeftRadius: function () {
                                                                return this.nativeIsShowPop ? "8px" : "0px"
                                                            }
                                                        }
                                                    }, {
                                                        type: "div",
                                                        attr: {
                                                            show: function () {
                                                                return this.nativeIsShowPop && !this.isNoAd
                                                            }
                                                        },
                                                        classList: ["ad-mask"],
                                                        children: [{type: "text", attr: {value: "广告"}}]
                                                    }, {
                                                        type: "div",
                                                        attr: {
                                                            show: function () {
                                                                return !this.nativeIsShowPop
                                                            }
                                                        },
                                                        classList: ["ad-mask-normal"],
                                                        children: [{type: "text", attr: {value: "广告"}}]
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    shown: function () {
                                                        return this.nativeAdvObj && "middle" !== this.popType && this.nativeIsShowPop && "fixed" === this.curpopConfig.materialStyle.position
                                                    },
                                                    classList: ["ad-btn"],
                                                    events: {click: "adClickForImg"},
                                                    style: {
                                                        width: function () {
                                                            return this.curpopConfig.materialStyle.width + "px"
                                                        }, height: function () {
                                                            return this.curpopConfig.materialStyle.height + "px"
                                                        }, top: function () {
                                                            return this.curpopConfig.materialStyle.top + "px"
                                                        }, left: function () {
                                                            return this.curpopConfig.materialStyle.left + "px"
                                                        }, position: "fixed", marginTop: function () {
                                                            return this.curpopConfig.customBoxStyle.style.height
                                                        }
                                                    },
                                                    children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.nativeAdvObj && this.nativeAdvObj.materialUrl
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return this.curpopConfig.materialStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curpopConfig.materialStyle.height + "px"
                                                            },
                                                            objectFit: "fill",
                                                            borderTopLeftRadius: "8px",
                                                            borderTopRightRadius: "8px",
                                                            borderBottomRightRadius: "8px",
                                                            borderBottomLeftRadius: "8px"
                                                        }
                                                    }, {
                                                        type: "div",
                                                        attr: {
                                                            show: function () {
                                                                return !this.isNoAd
                                                            }
                                                        },
                                                        classList: ["ad-mask"],
                                                        children: [{type: "text", attr: {value: "广告"}}]
                                                    }]
                                                }, {
                                                    type: "div", attr: {}, shown: function () {
                                                        return this.nativeIsShowPop && this.curpopConfig.customTextStyle.canShow
                                                    }, style: function () {
                                                        return this.curpopConfig.customTextStyle.style
                                                    }, children: [{
                                                        type: "text", attr: {
                                                            id: function () {
                                                                return "@" == this.item.text ? "anTran" : ""
                                                            }, value: function () {
                                                                return "@" != this.item.text ? this.item.text : this.changeable
                                                            }
                                                        }, repeat: {
                                                            exp: function () {
                                                                return this.curpopConfig.customTextStyle.text
                                                            }, value: "item"
                                                        }, style: function () {
                                                            return this.item.style
                                                        }, id: function () {
                                                            return "@" == this.item.text ? "anTran" : ""
                                                        }, classList: function () {
                                                            return ["@" == this.item.text ? this.transAn : ""]
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "div", attr: {
                                                    show: function () {
                                                        return 2 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                                    }, justifyContent: "center", marginBottom: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                                    }, marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                                    }
                                                }, children: [{
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.crowdStyle.text
                                                        }
                                                    }, style: {
                                                        fontSize: function () {
                                                            return this.curpopConfig.crowdStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.crowdStyle.color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "image", attr: {
                                                    show: function () {
                                                        return this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                                    }, src: function () {
                                                        return this.curpopConfig.closeStyle.image
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                    }, marginTop: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                                    }, opacity: function () {
                                                        return this.curpopConfig.closeStyle.opacity
                                                    }, objectFit: "fill", transform: function () {
                                                        return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                                    }
                                                }, events: {click: "closeClick"}
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["ad-title"],
                                                style: {
                                                    height: function () {
                                                        return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                                    },
                                                    verticalAlign: "top",
                                                    width: "100%",
                                                    borderLeftWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderBottomWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderRightWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderTopWidth: function () {
                                                        return this.nativeIsShowPop ? "0px" : "1px"
                                                    },
                                                    borderBottomLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    },
                                                    borderBottomRightRadius: function () {
                                                        return this.nativeIsShowPop ? "0px" : "6px"
                                                    }
                                                },
                                                children: [{
                                                    type: "div",
                                                    attr: {},
                                                    style: {flex: 1, width: "100%"},
                                                    events: {click: "adClickForImg"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.nativeAdvObj.source || this.nativeAdvObj.title
                                                            }
                                                        }, style: {
                                                            width: "100%", height: "100%", color: function () {
                                                                return this.defaultStyle.titleColor
                                                            }, fontSize: function () {
                                                                return this.defaultStyle.titleFont + "px"
                                                            }, lines: 1, textOverflow: "ellipsis"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["ad-title-icon"],
                                                    events: {click: "adClickForBtnNormal"},
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.adData.clickBtnTxt ? this.adData.clickBtnTxt : 2 == this.adData.interactionType ? "安装" : "打开"
                                                            }
                                                        }
                                                    }]
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                shown: function () {
                                                    return this.nativeAdvObj && this.nativeIsShowPop && "middle" !== this.popType && this.curpopConfig.iconStyle && this.curpopConfig.iconStyle.isShow
                                                },
                                                classList: ["pop-ad-icon"],
                                                style: {
                                                    position: "fixed", left: function () {
                                                        return this.curpopConfig.iconStyle.left + "px"
                                                    }, top: function () {
                                                        return this.curpopConfig.iconStyle.top + "px"
                                                    }, flexDirection: "column"
                                                },
                                                children: [{
                                                    type: "div", attr: {}, style: {
                                                        marginBottom: function () {
                                                            return this.curpopConfig.iconStyle.marginBottom + "px"
                                                        }
                                                    }, children: [{
                                                        type: "image", attr: {
                                                            width: function () {
                                                                return this.curpopConfig.iconStyle.width + "px"
                                                            }, height: function () {
                                                                return this.curpopConfig.iconStyle.width + "px"
                                                            }, src: function () {
                                                                return this.nativeAdvObj.icon || this.nativeAdvObj.materialUrl
                                                            }
                                                        }, style: {
                                                            marginRight: function () {
                                                                return this.curpopConfig.iconStyle.marginRight + "px"
                                                            }, borderRadius: function () {
                                                                return this.curpopConfig.iconStyle.radius + "px"
                                                            }, flexShrink: 0
                                                        }
                                                    }, {
                                                        type: "text",
                                                        attr: {
                                                            value: function () {
                                                                return this.nativeAdvObj.title || this.curpopConfig.iconStyle.title
                                                            }
                                                        },
                                                        style: {
                                                            lines: 1,
                                                            textOverflow: "ellipsis",
                                                            fontSize: function () {
                                                                return this.curpopConfig.iconStyle.titleFontsize + "px"
                                                            },
                                                            color: function () {
                                                                return this.curpopConfig.iconStyle.titleColor
                                                            },
                                                            width: function () {
                                                                return this.curpopConfig.iconStyle.titleWidth + "px"
                                                            }
                                                        }
                                                    }]
                                                }, {
                                                    type: "text",
                                                    attr: {
                                                        value: function () {
                                                            return this.nativeAdvObj.source ? this.nativeAdvObj.source : this.curpopConfig.iconStyle.desc
                                                        }
                                                    },
                                                    style: {
                                                        lines: 1, textOverflow: "ellipsis", fontSize: function () {
                                                            return this.curpopConfig.iconStyle.descFontsize + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.iconStyle.descColor
                                                        }, width: function () {
                                                            return this.curpopConfig.iconStyle.descWidth + "px"
                                                        }
                                                    }
                                                }]
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-native"], shown: function () {
                                            return !("middle" !== this.popType)
                                        }, children: [{
                                            type: "div",
                                            attr: {poptype: "emptyarea"},
                                            style: {
                                                justifyContent: function () {
                                                    return "middle" == this.popType && 2 == this.curMiddleConfig.popStyle.layoutType ? "flex-end" : "center"
                                                },
                                                alignItems: "center",
                                                flexDirection: "column",
                                                width: "100%",
                                                height: "100%"
                                            },
                                            events: {
                                                click: "middleAdContentClick",
                                                swipe: "middleXiaomiAdContentSwiperHandler"
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {poptype: "emptyarea"},
                                                classList: ["middle-empty-tip"],
                                                style: {
                                                    width: "100%", height: function () {
                                                        return this.curMiddleConfig.tipStyle.height + "px"
                                                    }, marginBottom: function () {
                                                        return this.curMiddleConfig.tipStyle.distance + "px"
                                                    }
                                                }
                                            }, {
                                                type: "div",
                                                attr: {id: "coord"},
                                                id: "coord",
                                                events: {
                                                    touchend: "adTouchend",
                                                    touchstart: "adtouchstart",
                                                    swipe: "middleAdContentSwiperHandler"
                                                },
                                                classList: ["middle-ad-content"],
                                                style: {
                                                    width: function () {
                                                        return this.curMiddleConfig.popStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curMiddleConfig.popStyle.height + "px"
                                                    },
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    flexDirection: "column"
                                                },
                                                children: [{
                                                    type: "div", attr: {}, shown: function () {
                                                        return 1 == this.curMiddleConfig.popStyle.bgType
                                                    }, style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.popStyle.bgWidth + "px"
                                                        }, height: function () {
                                                            return this.curMiddleConfig.popStyle.bgHeight + "px"
                                                        }, backgroundColor: function () {
                                                            return this.curMiddleConfig.popStyle.bgColor
                                                        }, borderRadius: function () {
                                                            return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                        }, position: "absolute", top: "0px", left: function () {
                                                            return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.popStyle.bgWidth) / 2 + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "div", attr: {}, shown: function () {
                                                        return 2 == this.curMiddleConfig.popStyle.bgType
                                                    }, style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.popStyle.bgWidth + "px"
                                                        }, height: function () {
                                                            return this.curMiddleConfig.popStyle.bgHeight + "px"
                                                        }, borderRadius: function () {
                                                            return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                        }, position: "absolute", top: "0px", left: function () {
                                                            return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.popStyle.bgWidth) / 2 + "px"
                                                        }
                                                    }, children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.curMiddleConfig.popStyle.bgImage
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return this.curMiddleConfig.popStyle.bgWidth + "px"
                                                            }, height: function () {
                                                                return this.curMiddleConfig.popStyle.bgHeight + "px"
                                                            }, borderRadius: function () {
                                                                return this.curMiddleConfig.popStyle.bgRadio + "px"
                                                            }, objectFit: "fill"
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["middle-ad-meterial"],
                                                    style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.meterialStyle.width + "px"
                                                        }, height: function () {
                                                            return this.curMiddleConfig.meterialStyle.height + "px"
                                                        }, borderRadius: function () {
                                                            return this.curMiddleConfig.meterialStyle.radio + "px"
                                                        }, top: function () {
                                                            return this.curMiddleConfig.meterialStyle.top + "px"
                                                        }, left: function () {
                                                            return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.meterialStyle.width) / 2 + "px"
                                                        }, position: "absolute", objectFit: "fill"
                                                    },
                                                    children: [{
                                                        type: "image",
                                                        attr: {
                                                            src: function () {
                                                                return this.curMiddleConfig.commonStyle.isCover && this.curMiddleConfig.meterialStyle.image ? this.curMiddleConfig.meterialStyle.image : this.nativeAdvObj.materialUrl
                                                            }
                                                        },
                                                        events: {click: "adClickForImg"},
                                                        style: {
                                                            width: function () {
                                                                return this.curMiddleConfig.meterialStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curMiddleConfig.meterialStyle.height + "px"
                                                            },
                                                            borderRadius: function () {
                                                                return this.curMiddleConfig.meterialStyle.radio + "px"
                                                            },
                                                            top: "0px",
                                                            left: "0px",
                                                            position: "absolute",
                                                            objectFit: "contain"
                                                        }
                                                    }, {
                                                        type: "text",
                                                        attr: {value: "去广告"},
                                                        shown: function () {
                                                            return this.nativeIsShowPop && "middle" == this.popType
                                                        },
                                                        events: {click: "removeMiddleAd"},
                                                        classList: ["middle-clear-ad-tag"]
                                                    }, {
                                                        type: "text",
                                                        attr: {value: "▼"},
                                                        classList: ["graph"]
                                                    }, {
                                                        type: "text",
                                                        attr: {value: "看视频免广告"},
                                                        classList: ["video-ad-tag"],
                                                        events: {
                                                            click: function (t) {
                                                                return this.topWatchVideo4Free(t)
                                                            }
                                                        },
                                                        shown: function () {
                                                            return this.nativeIsShowPop && "middle" == this.popType && this.curMiddleConfig.commonStyle.materialExemptAd
                                                        },
                                                        style: {
                                                            width: "200px",
                                                            height: "44px",
                                                            lineHeight: "42px",
                                                            backgroundColor: "rgba(0,0,0,0.15)",
                                                            borderRadius: "22px",
                                                            textAlign: "center",
                                                            color: "rgba(255,255,255,0.5)",
                                                            fontSize: "28px",
                                                            position: "absolute",
                                                            top: "10px",
                                                            right: "162px"
                                                        }
                                                    }, {
                                                        type: "text",
                                                        attr: {value: "广告"},
                                                        classList: ["middle-ad-tag"],
                                                        events: {click: "adClickForImg"}
                                                    }, {
                                                        type: "image",
                                                        attr: {
                                                            src: function () {
                                                                return this.nativeAdvObj.icon
                                                            }
                                                        },
                                                        events: {click: "adClickForImg"},
                                                        classList: ["middle-ad-icon"],
                                                        shown: function () {
                                                            return this.nativeAdvObj.icon
                                                        }
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["middle-ad-desc"],
                                                    events: {click: "adClickForImg"},
                                                    style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.descStyle.width + "px"
                                                        }, height: function () {
                                                            return this.curMiddleConfig.descStyle.height + "px"
                                                        }, fontSize: function () {
                                                            return this.curMiddleConfig.descStyle.size + "px"
                                                        }, lineHeight: function () {
                                                            return this.curMiddleConfig.descStyle.height / 2 + "px"
                                                        }, color: function () {
                                                            return this.curMiddleConfig.descStyle.color
                                                        }, backgroundColor: function () {
                                                            return this.curMiddleConfig.descStyle.bgColor || ""
                                                        }, position: "absolute", left: function () {
                                                            return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.descStyle.width) / 2 + "px"
                                                        }, top: function () {
                                                            return this.curMiddleConfig.descStyle.top + "px"
                                                        }, flexDirection: "column", justifyContent: "space-between"
                                                    },
                                                    children: [{
                                                        type: "text",
                                                        attr: {
                                                            value: function () {
                                                                return this.curMiddleConfig.commonStyle.isCover && this.curMiddleConfig.descStyle.text ? this.curMiddleConfig.descStyle.text : this.nativeAdvObj.desc ? this.nativeAdvObj.desc : this.nativeAdvObj.title ? this.nativeAdvObj.title : "热门应用"
                                                            }
                                                        },
                                                        style: {
                                                            lines: 1, textOverflow: "ellipsis", color: function () {
                                                                return this.curMiddleConfig.descStyle.color
                                                            }, fontSize: function () {
                                                                return this.curMiddleConfig.descStyle.size + "px"
                                                            }
                                                        }
                                                    }, {
                                                        type: "div",
                                                        attr: {},
                                                        style: {alignItems: "center", marginTop: "10px"},
                                                        children: [{
                                                            type: "image",
                                                            attr: {
                                                                width: "80px", height: "80px", src: function () {
                                                                    return this.nativeAdvObj.icon || this.curMiddleConfig.meterialStyle.image || this.nativeAdvObj.materialUrl
                                                                }
                                                            },
                                                            style: {marginRight: "20px", borderRadius: "12px"}
                                                        }, {
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.nativeAdvObj.title || "热门应用"
                                                                }
                                                            }, classList: ["middle-ad-desc"]
                                                        }]
                                                    }]
                                                }, {
                                                    type: "image", attr: {
                                                        poptype: "emptyarea", src: function () {
                                                            return this.curMiddleConfig.guideStyle.image
                                                        }
                                                    }, shown: function () {
                                                        return this.curMiddleConfig.guideStyle.isShow
                                                    }, style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.guideStyle.width + "px"
                                                        }, height: function () {
                                                            return this.curMiddleConfig.guideStyle.height + "px"
                                                        }, position: "absolute", left: function () {
                                                            return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.guideStyle.width) / 2 + "px"
                                                        }, top: function () {
                                                            return this.curMiddleConfig.guideStyle.top + "px"
                                                        }, objectFit: "fill"
                                                    }
                                                }, {
                                                    type: "div", attr: {}, style: {
                                                        width: function () {
                                                            return this.curMiddleConfig.btnStyle.width + "px"
                                                        },
                                                        height: function () {
                                                            return this.curMiddleConfig.btnStyle.height + "px"
                                                        },
                                                        borderRadius: function () {
                                                            return this.curMiddleConfig.btnStyle.radio + "px"
                                                        },
                                                        position: "absolute",
                                                        top: function () {
                                                            return this.curMiddleConfig.btnStyle.top + "px"
                                                        },
                                                        left: function () {
                                                            return (this.curMiddleConfig.popStyle.width - this.curMiddleConfig.btnStyle.width) / 2 + "px"
                                                        },
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        flexDirection: "column"
                                                    }, classList: function () {
                                                        return ["middle-ad-button", this.curMiddleConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                    }, children: [{
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.curMiddleConfig.btnStyle.image
                                                            }
                                                        }, shown: function () {
                                                            return 2 == this.curMiddleConfig.btnStyle.type
                                                        }, events: {
                                                            click: function (t) {
                                                                return this.adClickForBtn(this.nativeAdvObj.isUsedAdButton, t)
                                                            }
                                                        }, style: {
                                                            width: function () {
                                                                return this.curMiddleConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curMiddleConfig.btnStyle.height + "px"
                                                            },
                                                            borderRadius: function () {
                                                                return this.curMiddleConfig.btnStyle.radio + "px"
                                                            },
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px",
                                                            objectFit: "fill"
                                                        }
                                                    }, {
                                                        type: "div",
                                                        attr: {},
                                                        classList: ["middle-ad-button"],
                                                        shown: function () {
                                                            return 2 !== this.nativeAdvObj.isUsedAdButton && 1 == this.curMiddleConfig.btnStyle.type
                                                        },
                                                        events: {
                                                            click: function (t) {
                                                                return this.adClickForBtn(this.nativeAdvObj.isUsedAdButton, t)
                                                            }
                                                        },
                                                        style: {
                                                            width: function () {
                                                                return this.curMiddleConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curMiddleConfig.btnStyle.height + "px"
                                                            },
                                                            borderRadius: function () {
                                                                return this.curMiddleConfig.btnStyle.radio + "px"
                                                            },
                                                            backgroundColor: function () {
                                                                return 1 == this.curMiddleConfig.btnStyle.type ? this.curMiddleConfig.btnStyle.bgColor : "rgba(255,255,255,0)"
                                                            },
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px",
                                                            justifyContent: "center",
                                                            alignItems: "center",
                                                            flexDirection: "column"
                                                        },
                                                        children: [{
                                                            type: "text", attr: {
                                                                value: function () {
                                                                    return this.curMiddleConfig.commonStyle.isCover ? this.curMiddleConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                                }
                                                            }, style: {
                                                                fontSize: function () {
                                                                    return this.curMiddleConfig.btnStyle.size + "px"
                                                                }, color: function () {
                                                                    return this.curMiddleConfig.btnStyle.color
                                                                }
                                                            }
                                                        }]
                                                    }, {
                                                        type: "ad-button",
                                                        attr: {
                                                            valuetype: function () {
                                                                return this.curMiddleConfig.btnStyle.huaweiValueType || this.curpopConfig.btnStyle.huaweiValueType
                                                            }, openType: function () {
                                                                return this.curMiddleConfig.btnStyle.huaweiOpenType || this.curpopConfig.btnStyle.huaweiOpenType
                                                            }, adunitid: function () {
                                                                return this.nativeAdvObj.id
                                                            }, adid: function () {
                                                                return this.nativeAdvObj.advDetail.adId
                                                            }, installTextValue: function () {
                                                                return this.curMiddleConfig.btnStyle.hwInstallText || this.curpopConfig.btnStyle.hwInstallText
                                                            }, openTextValue: function () {
                                                                return this.curMiddleConfig.btnStyle.hwOpenText || this.curpopConfig.btnStyle.hwOpenText
                                                            }
                                                        },
                                                        shown: function () {
                                                            return this.nativeAdvObj.isUsedAdButton
                                                        },
                                                        events: {click: "adButtonClickForBtn"},
                                                        style: {
                                                            opacity: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton && this.$app.$def.deviceInfo.platformVersionCode < 1103 ? 0 : 1
                                                            },
                                                            position: "absolute",
                                                            left: "0px",
                                                            top: "0px",
                                                            width: function () {
                                                                return this.curMiddleConfig.btnStyle.width + "px"
                                                            },
                                                            height: function () {
                                                                return this.curMiddleConfig.btnStyle.height + "px"
                                                            },
                                                            fontSize: function () {
                                                                return this.curpopConfig.btnStyle.size + "px"
                                                            },
                                                            color: function () {
                                                                return this.curMiddleConfig.btnStyle.color
                                                            },
                                                            backgroundColor: function () {
                                                                return this.curMiddleConfig.btnStyle.bgColor
                                                            },
                                                            backgroundImage: function () {
                                                                return this.curpopConfig.btnStyle.hwBtnBgImage
                                                            },
                                                            progressbarColor: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton ? "transparent" : ""
                                                            },
                                                            progressbarBackgroundColor: function () {
                                                                return 3 == this.nativeAdvObj.isUsedAdButton ? "transparent" : ""
                                                            },
                                                            borderRadius: function () {
                                                                return this.curpopConfig.btnStyle.radio + "px"
                                                            },
                                                            backgroundSize: "cover",
                                                            backgroundPosition: "center center",
                                                            backgroundRepeat: "no-repeat"
                                                        }
                                                    }]
                                                }]
                                            }]
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        events: {click: "bottomWatchVideo4Free"},
                                        shown: function () {
                                            return this.nativeIsShowPop && "middle" == this.popType && 2 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.commonStyle.bottomExemptAd
                                        },
                                        classList: ["video-click-free"],
                                        style: {
                                            width: "750px",
                                            height: "60px",
                                            position: "absolute",
                                            top: "174px",
                                            left: "0px",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            backgroundColor: "rgba(255,255,255,0.11)"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return "看视频免" + (this.curMiddleConfig.commonStyle.exemptAdTime ? this.curMiddleConfig.commonStyle.exemptAdTime : 30) + "分钟广告"
                                                }
                                            },
                                            style: {
                                                height: "28px",
                                                fontSize: "28px",
                                                color: "rgba(0,0,0,0.3)",
                                                textAlign: "center"
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "https://ims.readnos.com/image%2F2022-09-29%2Farrow.png"},
                                            style: {width: "24px", height: "24px", marginTop: "4px"}
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.curMiddleConfig.sceneStyle.image
                                            }
                                        }, shown: function () {
                                            return this.isShowBottomScence && this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.sceneStyle && this.curMiddleConfig.sceneStyle.isShow && this.curMiddleConfig.sceneStyle.image && this.customAction.isShowScence
                                        }, style: {
                                            width: function () {
                                                return this.curMiddleConfig.sceneStyle.width + "px"
                                            }, height: function () {
                                                return this.curMiddleConfig.sceneStyle.height + "px"
                                            }, position: "absolute", left: function () {
                                                return (750 - this.curMiddleConfig.sceneStyle.width) / 2 + "px"
                                            }, bottom: function () {
                                                return this.curMiddleConfig.sceneStyle.top + "px"
                                            }
                                        }, events: {click: "bottomScenceClick"}
                                    }, {
                                        type: "div",
                                        attr: {},
                                        events: {click: "bottomWatchVideo4Free"},
                                        shown: function () {
                                            return this.isShowBottomScence && this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.commonStyle.bottomExemptAd && !(this.isShowBottomScence && this.nativeIsShowPop && "middle" == this.popType && 1 == this.curMiddleConfig.popStyle.layoutType && this.curMiddleConfig.sceneStyle && this.curMiddleConfig.sceneStyle.isShow && this.curMiddleConfig.sceneStyle.image && this.customAction.isShowScence)
                                        },
                                        classList: ["video-click-free"],
                                        style: {
                                            width: "750px",
                                            height: "60px",
                                            position: "absolute",
                                            bottom: "16px",
                                            left: "0px",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            backgroundColor: "rgba(255,255,255,0.11)"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return "看视频免" + (this.curMiddleConfig.commonStyle.exemptAdTime ? this.curMiddleConfig.commonStyle.exemptAdTime : 30) + "分钟广告"
                                                }
                                            },
                                            style: {
                                                height: "28px",
                                                fontSize: "28px",
                                                color: "rgba(0,0,0,0.3)",
                                                textAlign: "center"
                                            }
                                        }, {
                                            type: "image",
                                            attr: {src: "https://ims.readnos.com/image%2F2022-09-29%2Farrow.png"},
                                            style: {width: "24px", height: "24px", marginTop: "4px"}
                                        }]
                                    }]
                                }]
                            }, {
                                type: "div",
                                attr: {},
                                shown: function () {
                                    return this.isApplyShake && this.nativeIsShowPop && this.curpopConfig.commonStyle.isOpenShake && this.isShakeLayer && ("SECOND_SCREEN_TOUCH" !== this.actionCode || !this.positionRight)
                                },
                                classList: ["shake-warp"],
                                style: {
                                    bottom: function () {
                                        return this.curpopConfig.commonStyle.shakePositionBottom ? this.curpopConfig.commonStyle.shakePositionBottom + "px" : "middle" != this.popType ? "100px" : "200px"
                                    }, right: function () {
                                        return ("SECOND_SCREEN_TOUCH" === this.actionCode ? this.positionRight : 0) + "px"
                                    }
                                },
                                children: [{
                                    type: "image",
                                    attr: {src: "https://tacticsclusters.oss-cn-beijing.aliyuncs.com/image%2F2023-01-13%2F1673590737887_shake1.gif"},
                                    shown: function () {
                                        return 4 !== this.readViewConfigSeleteIndex && "middle" == this.popType
                                    },
                                    style: {width: "220px"}
                                }, {
                                    type: "image",
                                    attr: {src: "https://tacticsclusters.oss-cn-beijing.aliyuncs.com/image%2F2023-01-13%2F1673590764837_shake2.gif"},
                                    shown: function () {
                                        return 4 === this.readViewConfigSeleteIndex || "middle" != this.popType
                                    },
                                    style: {width: "300px"}
                                }]
                            }, {
                                type: "lottie",
                                attr: {
                                    source: "/lottie/lottie-coin.json", id: "lottieCoin", autoplay: function () {
                                        return !1
                                    }, loop: function () {
                                        return !1
                                    }
                                },
                                classList: ["lottie-coin"],
                                shown: function () {
                                    return this.lottieCoinShow
                                },
                                id: "lottieCoin",
                                events: {error: "errorFunction", complete: "animationCoinFinished"}
                            }, {
                                type: "close-ad-pop", attr: {
                                    appType: function () {
                                        return this.customAction.appType
                                    }
                                }, shown: function () {
                                    return this.isShowCloseAdPop && this.customAction.appType
                                }, events: {"event-click": "closeAdPopClickHandler"}
                            }, {
                                type: "image", attr: {
                                    src: function () {
                                        return this.complaintIcon
                                    }
                                }, shown: function () {
                                    return this.complaintShow && this.nativeIsShowPop
                                }, style: {
                                    width: "50px", objectFit: "contain", position: "fixed", top: function () {
                                        return this.complaintTop + "px"
                                    }, left: function () {
                                        return this.complaintLeft + "px"
                                    }
                                }, events: {click: "showComplaintClick"}
                            }, {
                                type: "complaint-pop",
                                attr: {},
                                shown: function () {
                                    return this.isShowComplaintPop
                                },
                                events: {
                                    "cancel-click": "complaintPopCancelClickHandler",
                                    "sure-click": "complaintPopSureClickHandler"
                                }
                            }, {
                                type: "complaint-last-pop", attr: {
                                    isShowLastComplaintPop: function () {
                                        return this.isShowLastComplaintPop
                                    }
                                }, shown: function () {
                                    return this.isShowLastComplaintPop
                                }, events: {"cancel-click": "lastPopCancelHandler"}
                            }]
                        }]
                    }
                }, 3629: t => {
                    t.exports = {
                        type: "block", attr: {}, children: [{
                            type: "ad",
                            attr: {
                                adid: function () {
                                    return this.nativeAdvObj.advDetail.adId
                                }, type: "native"
                            },
                            events: {adclick: "adClickHandle", adshow: "adShow", adclose: "xiaomiAdClose"},
                            classList: ["ad-native"],
                            children: [{
                                type: "div", attr: {
                                    show: function () {
                                        return "middle" !== this.popType
                                    }
                                }, classList: ["ad-native"], children: [{
                                    type: "div", attr: {
                                        show: function () {
                                            return this.popShowGif
                                        }
                                    }, classList: ["before-gif"], children: [{
                                        type: "div",
                                        attr: {
                                            show: function () {
                                                return this.popShowGifImg.url
                                            }
                                        },
                                        classList: ["gif-img"],
                                        children: [{
                                            type: "div", attr: {}, style: {
                                                height: function () {
                                                    return this.popShowGifImg.height + "px"
                                                }, width: function () {
                                                    return this.popShowGifImg.width + "px"
                                                }
                                            }, children: [{
                                                type: "lottie-image", attr: {
                                                    source: function () {
                                                        return this.popShowGifImg.url
                                                    },
                                                    imgStyle: " position:absolute;left:0;top:0;\n                  height:100%;\n                  width:100%; "
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.popShowGifImg
                                            }
                                        }, classList: ["gif-img"]
                                    }]
                                }, {
                                    type: "div", attr: {
                                        show: function () {
                                            return !this.popShowGif
                                        }
                                    }, classList: ["ad-content"], style: function () {
                                        return this.adContentStyle
                                    }, children: [{
                                        type: "image", attr: {
                                            show: function () {
                                                return this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                            }, src: function () {
                                                return this.curpopConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                            }, marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                            }, opacity: function () {
                                                return this.curpopConfig.closeStyle.opacity
                                            }, objectFit: "fill", transform: function () {
                                                return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return this.customAction.pop_title
                                        },
                                        style: {
                                            width: "100%",
                                            display: "flex",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            marginBottom: "15px"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {value: "恭喜获得 "},
                                            style: {color: "#ffffff", fontSize: "50px"}
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.customAction.pop_title
                                                }
                                            }, style: {
                                                fontSize: "50px", fontWeight: "bold", color: function () {
                                                    return "OPEN_RED_MONEY" === this.customAction.task_code ? "#FF4F4F" : "#FF9401"
                                                }
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: "元 "},
                                            style: {color: "#ff4f4f", fontSize: "50px"},
                                            shown: function () {
                                                return "OPEN_RED_MONEY" === this.customAction.task_code
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: " 水滴 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return "OPEN_WATAR" === this.customAction.task_code && !("OPEN_RED_MONEY" === this.customAction.task_code)
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: " 袋肥料 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return !("OPEN_FERTILIZER" !== this.customAction.task_code || "OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code)
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: "金币 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return !("OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code || "OPEN_FERTILIZER" === this.customAction.task_code)
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 1 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                            },
                                            height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                            },
                                            alignItems: "center",
                                            justifyContent: "center",
                                            textAlign: "center",
                                            marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                            },
                                            marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                            }
                                        }, children: [{
                                            type: "image",
                                            attr: {
                                                src: function () {
                                                    return this.curpopConfig.crowdStyle.image
                                                }
                                            },
                                            style: {
                                                width: "100%",
                                                height: "100%",
                                                position: "absolute",
                                                left: "0px",
                                                top: "0px",
                                                objectFit: "fill"
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.crowdStyle.text
                                                }
                                            }, style: {
                                                fontSize: function () {
                                                    return this.curpopConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-title"], style: {
                                            height: function () {
                                                return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                            }, verticalAlign: "top", width: "100%", borderLeftWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderRightWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopLeftRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }, borderTopRightRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.title || this.nativeAdvObj.desc || "热门应用"
                                                }
                                            }, style: {
                                                width: "100%", height: "100%", color: function () {
                                                    return this.defaultStyle.titleColor
                                                }, fontSize: function () {
                                                    return this.defaultStyle.titleFont + "px"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: ["ad-title-close"],
                                            events: {click: "deleteBtnClick"},
                                            children: [{
                                                type: "image",
                                                attr: {src: "https://ims.readnos.com/image%2F2022-06-28%2F1656399134152_close.png"}
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {id: "coord"}, id: "coord", style: {
                                            width: function () {
                                                return this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : this.defaultStyle.imageWidth + "px"
                                            }, height: function () {
                                                return this.nativeIsShowPop ? this.curpopConfig.popStyle.height >= this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top || "fixed" === this.curpopConfig.materialStyle.position ? this.curpopConfig.popStyle.height + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.defaultStyle.imageHeight + "px"
                                            }, flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, shown: function () {
                                                return this.curpopConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.curpopConfig.customBoxStyle.style
                                            }
                                        }, {
                                            type: "lottie-image", attr: {
                                                src: function () {
                                                    return this.curpopConfig.popStyle.image
                                                }, source: function () {
                                                    return this.curpopConfig.popStyle.json
                                                }, imgStyle: function () {
                                                    return "width:" + (this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : "0px") + ";                        height:" + (this.nativeIsShowPop ? this.checkActionCodeIsScreen ? "100%" : this.curpopConfig.popStyle.height + "px" : "0px") + ";                        position:absolute;                        left:0;                        top:0;                        object-fit:fill;"
                                                }
                                            }
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.curpopConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                }, opacity: function () {
                                                    return this.curpopConfig.closeStyle.opacity
                                                }, objectFit: "fill", left: function () {
                                                    return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                }, top: function () {
                                                    return this.curpopConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.curpopConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                }, opacity: function () {
                                                    return this.curpopConfig.closeStyle.opacity
                                                }, objectFit: "fill", right: function () {
                                                    return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                }, top: function () {
                                                    return this.curpopConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return this.curpopConfig.negStyle.isShow
                                                }
                                            },
                                            classList: ["cancel_btn"],
                                            style: {
                                                justifyContent: "center",
                                                alignItems: "center",
                                                position: "absolute",
                                                top: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.top : 0) + "px"
                                                },
                                                left: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.left : 0) + "px"
                                                },
                                                width: function () {
                                                    return this.nativeIsShowPop ? this.curpopConfig.negStyle.width ? this.curpopConfig.negStyle.width + "px" : "auto" : "0px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.height ? this.curpopConfig.negStyle.height : this.curpopConfig.negStyle.font : "0px") + "px"
                                                },
                                                backgroundImage: function () {
                                                    return this.curpopConfig.negStyle.icon
                                                },
                                                backgroundPosition: "center center",
                                                backgroundSize: function () {
                                                    return this.curpopConfig.negStyle.width + "px " + this.curpopConfig.negStyle.height + "px"
                                                },
                                                backgroundRepeat: "no-repeat",
                                                borderRadius: function () {
                                                    return this.curpopConfig.negStyle.radio + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "image",
                                                attr: {
                                                    src: function () {
                                                        return this.curpopConfig.negStyle.icon
                                                    }
                                                },
                                                style: {
                                                    width: "100%",
                                                    height: "100%",
                                                    position: "absolute",
                                                    left: "0px",
                                                    top: "0px"
                                                }
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.curpopConfig.negStyle.text
                                                    }
                                                }, events: {click: "negClick"}, style: {
                                                    fontSize: function () {
                                                        return this.curpopConfig.negStyle.font + "px"
                                                    }, color: function () {
                                                        return this.curpopConfig.negStyle.color
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return this.nativeIsShowPop
                                                }, id: "adButton"
                                            },
                                            id: "adButton",
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                shown: function () {
                                                    return 2 !== this.nativeAdvObj.isUsedXiaomiButton
                                                },
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    width: function () {
                                                        return this.curpopConfig.btnStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curpopConfig.btnStyle.height + "px"
                                                    },
                                                    backgroundColor: function () {
                                                        return 1 == this.curpopConfig.btnStyle.styleType ? this.curpopConfig.btnStyle.bgColor : ""
                                                    },
                                                    borderRadius: function () {
                                                        return this.curpopConfig.btnStyle.radio + "px"
                                                    },
                                                    position: "absolute",
                                                    top: "0px"
                                                },
                                                children: [{
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.btnStyle.json
                                                        }, imgStyle: function () {
                                                            return "position: absolute;                        left: 0;                        top: 0;                        width: " + this.curpopConfig.btnStyle.width + "px;                        height: " + this.curpopConfig.btnStyle.height + "px;                        object-fit:fill;"
                                                        }
                                                    }, shown: function () {
                                                        return 2 == this.curpopConfig.btnStyle.styleType
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.icon
                                                        }
                                                    }, shown: function () {
                                                        return 3 == this.nativeAdvObj.isUsedXiaomiButton || 5 == this.nativeAdvObj.isUsedXiaomiButton || !this.nativeAdvObj.isUsedXiaomiButton
                                                    }, style: {
                                                        width: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch && this.curpopConfig.btnStyle.icon ? 48 : 0) + "px"
                                                        }, height: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, marginTop: function () {
                                                            return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                        }
                                                    }, shown: function () {
                                                        return 3 == this.nativeAdvObj.isUsedXiaomiButton || 5 == this.nativeAdvObj.isUsedXiaomiButton || !this.nativeAdvObj.isUsedXiaomiButton
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.curpopConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.nativeAdvObj.clickBtnTxt
                                                        }
                                                    }, classList: ["xiaomi-btn-text"], shown: function () {
                                                        return this.curpopConfig.customStyle && this.curpopConfig.customStyle.is_open_xiaomi_button_text && 5 === this.nativeAdvObj.isUsedXiaomiButton
                                                    }, style: {
                                                        position: "absolute", top: function () {
                                                            return this.curpopConfig.customStyle.xiaomi_button_text_top + "px"
                                                        }, right: function () {
                                                            return this.curpopConfig.customStyle.xiaomi_button_text_right + "px"
                                                        }, height: function () {
                                                            return this.curpopConfig.customStyle.xiaomi_button_text_font_size + 2 + "px"
                                                        }, width: function () {
                                                            return this.nativeAdvObj.clickBtnTxt.length * (this.curpopConfig.customStyle.xiaomi_button_text_font_size + 2) + "px"
                                                        }, fontSize: function () {
                                                            return this.curpopConfig.customStyle.xiaomi_button_text_font_size + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.customStyle.xiaomi_button_text_color
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "ad-clickable-area", attr: {
                                                    show: function () {
                                                        return !this.isNoAd
                                                    }, type: "click"
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width : 0) + "px"
                                                    }, height: "100%"
                                                }, children: [{
                                                    type: "div", attr: {}, classList: function () {
                                                        return [5 === this.nativeAdvObj.isUsedXiaomiButton ? this.xmBtnClass : ""]
                                                    }, style: {
                                                        borderRadius: function () {
                                                            return this.curpopConfig.btnStyle.radio + "px"
                                                        }, backgroundColor: function () {
                                                            return this.isSupportAdButton ? this.curpopConfig.btnStyle.bgColor : ""
                                                        }, justifyContent: "center", width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width : 0) + "px"
                                                        }, height: "100%"
                                                    }, children: [{
                                                        type: "div", attr: {}, style: {
                                                            width: function () {
                                                                return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width - (this.offsetX ? this.curpopConfig.btnStyle.radio + 15 : 0) : 0) + "px"
                                                            }, height: "100%"
                                                        }, children: [{
                                                            type: "div",
                                                            attr: {},
                                                            style: {position: "absolute", left: "0px"},
                                                            children: [{
                                                                type: "ad-clickable-area", attr: {
                                                                    show: function () {
                                                                        return !this.isNoAd
                                                                    }, type: function () {
                                                                        return this.isButton ? "button" : "click"
                                                                    }
                                                                }, style: {
                                                                    width: function () {
                                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.width < 110 ? 110 : this.curpopConfig.btnStyle.width + (this.offsetX ? this.offsetX - this.curpopConfig.btnStyle.radio - 15 : 0) : 0) + "px"
                                                                    }, height: function () {
                                                                        return (this.nativeIsShowPop && "middle" != this.popType ? this.curpopConfig.btnStyle.height > 180 ? 180 : this.curpopConfig.btnStyle.height : 0) + "px"
                                                                    }, color: function () {
                                                                        return this.curpopConfig.btnStyle.color
                                                                    }, backgroundColor: function () {
                                                                        return this.isSupportAdButton ? this.curpopConfig.btnStyle.bgColor : ""
                                                                    }, borderRadius: function () {
                                                                        return this.curpopConfig.btnStyle.radio + "px"
                                                                    }, fontSize: function () {
                                                                        return this.curpopConfig.btnStyle.font + "px"
                                                                    }
                                                                }, children: [{
                                                                    type: "text", attr: {
                                                                        value: function () {
                                                                            return this.isSupportAdButton ? this.nativeAdvObj.clickBtnTxt : ""
                                                                        }
                                                                    }, shown: function () {
                                                                        return !this.isButton
                                                                    }, style: {
                                                                        color: function () {
                                                                            return this.curpopConfig.btnStyle.color || "#ffffff"
                                                                        },
                                                                        width: "100%",
                                                                        height: "100%",
                                                                        textAlign: "center",
                                                                        fontSize: function () {
                                                                            return this.curpopConfig.btnStyle.font + "px"
                                                                        }
                                                                    }
                                                                }]
                                                            }]
                                                        }]
                                                    }]
                                                }]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                children: [{
                                                    type: "div", attr: {}, shown: function () {
                                                        return !this.isNoAd && this.latticeData.length > 0 && this.nativeIsShowPop && (3 === this.nativeAdvObj.isUsedXiaomiButton || 4 === this.nativeAdvObj.isUsedXiaomiButton) && this.btnLeft && this.btnTop
                                                    }, children: [{
                                                        type: "text", attr: {}, repeat: {
                                                            exp: function () {
                                                                return this.latticeData
                                                            }, key: "index", value: "item"
                                                        }, shown: function () {
                                                            return this.item
                                                        }, style: {
                                                            width: function () {
                                                                return 2 * this.scale + "px"
                                                            }, height: function () {
                                                                return 2 * this.scale + "px"
                                                            }, backgroundColor: function () {
                                                                return this.btnColor || "#fff"
                                                            }, position: "fixed", left: function () {
                                                                return this.btnLeft + this.offsetBtnLeft + this.index % (16 * this.textNumber) * 2 * this.scale + "px"
                                                            }, top: function () {
                                                                return this.btnTop + this.offsetBtnTop + this.index / (16 * this.textNumber) * 2 * this.scale + "px"
                                                            }
                                                        }, events: {click: "dotClickHandle"}
                                                    }]
                                                }]
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.nativeIsShowPop && (!this.curpopConfig.btnStyle.isBindingAd || this.isNoAd)
                                            },
                                            classList: function () {
                                                return ["ad-btn", this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                            },
                                            events: {click: "noAdClickForBtn"},
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                paddingLeft: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingRight: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingTop: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                },
                                                paddingBottom: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                shown: function () {
                                                    return 2 !== this.nativeAdvObj.isUsedXiaomiButton
                                                },
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    width: function () {
                                                        return this.curpopConfig.btnStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curpopConfig.btnStyle.height + "px"
                                                    },
                                                    backgroundColor: function () {
                                                        return 1 == this.curpopConfig.btnStyle.styleType ? this.curpopConfig.btnStyle.bgColor : ""
                                                    },
                                                    borderRadius: function () {
                                                        return this.curpopConfig.btnStyle.radio + "px"
                                                    }
                                                },
                                                children: [{
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.btnStyle.json
                                                        }, imgStyle: function () {
                                                            return "position: absolute;                        left: 0;                        top: 0;                        width: " + this.curpopConfig.btnStyle.width + "px;                        height: " + this.curpopConfig.btnStyle.height + "px;                        object-fit:fill;"
                                                        }
                                                    }, shown: function () {
                                                        return 2 == this.curpopConfig.btnStyle.styleType
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.icon
                                                        }
                                                    }, shown: function () {
                                                        return 3 == this.nativeAdvObj.isUsedXiaomiButton || 5 == this.nativeAdvObj.isUsedXiaomiButton || !this.nativeAdvObj.isUsedXiaomiButton
                                                    }, style: {
                                                        width: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, height: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, marginTop: function () {
                                                            return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.nativeAdvObj.clickBtnTxt || "打开"
                                                        }
                                                    }, shown: function () {
                                                        return 1 == this.nativeAdvObj.isUsedXiaomiButton || 2 == this.nativeAdvObj.isUsedXiaomiButton
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.curpopConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                        }
                                                    }, shown: function () {
                                                        return !(3 != this.nativeAdvObj.isUsedXiaomiButton && 5 != this.nativeAdvObj.isUsedXiaomiButton && this.nativeAdvObj.isUsedXiaomiButton || 1 == this.nativeAdvObj.isUsedXiaomiButton || 2 == this.nativeAdvObj.isUsedXiaomiButton)
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.curpopConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "ad-clickable-area", attr: {
                                                type: "click", show: function () {
                                                    return "fixed" !== this.curpopConfig.materialStyle.position && !this.isNoAd
                                                }
                                            }, classList: ["ad-btn"], style: {
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                }, top: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.top : 0) + "px"
                                                }, left: function () {
                                                    return (this.nativeIsShowPop ? (this.curpopConfig.popStyle.width - this.curpopConfig.materialStyle.width) / 2 : 0) + "px"
                                                }, position: "absolute", marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            }, children: [{
                                                type: "image", attr: {
                                                    src: function () {
                                                        return this.nativeAdvObj && this.nativeAdvObj.materialUrl
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                    }, objectFit: "fill", borderTopLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }, borderTopRightRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }, borderBottomRightRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }, borderBottomLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }
                                                }
                                            }, {
                                                type: "div",
                                                attr: {
                                                    show: function () {
                                                        return this.nativeIsShowPop && !this.isNoAd
                                                    }
                                                },
                                                classList: ["ad-mask"],
                                                children: [{type: "text", attr: {value: "广告"}}]
                                            }, {
                                                type: "div",
                                                attr: {
                                                    show: function () {
                                                        return !this.nativeIsShowPop
                                                    }
                                                },
                                                classList: ["ad-mask-normal"],
                                                children: [{type: "text", attr: {value: "广告"}}]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: ["app-info-warp"],
                                                style: {
                                                    height: "50px", width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                    }
                                                },
                                                shown: function () {
                                                    return this.appInfo && !this.isNoAd && "fixed" !== this.curpopConfig.materialStyle.position
                                                },
                                                children: [{
                                                    type: "app-info", attr: {
                                                        rows: function () {
                                                            return 2
                                                        }, appInfo: function () {
                                                            return this.appInfo
                                                        }, materialWidth: function () {
                                                            return this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth
                                                        }
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "ad-clickable-area", attr: {type: "logo"}, shown: function () {
                                                return !this.isNoAd && this.appInfo
                                            }, style: {position: "absolute", top: "0px", left: "0px", width: "100%"}
                                        }, {
                                            type: "div",
                                            attr: {},
                                            style: {height: "0px"},
                                            children: [{
                                                type: "ad-clickable-area", attr: {
                                                    show: function () {
                                                        return this.nativeIsShowPop && !this.isNoAd && this.nativeAdvObj.advDetail.hasPrivacy
                                                    }, type: "privacy"
                                                }
                                            }]
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return this.nativeIsShowPop && this.curpopConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.curpopConfig.customTextStyle.style
                                            }, children: [{
                                                type: "text", attr: {
                                                    id: function () {
                                                        return "@" == this.item.text ? "anTran" : ""
                                                    }, value: function () {
                                                        return "@" != this.item.text ? this.item.text : this.changeable
                                                    }
                                                }, repeat: {
                                                    exp: function () {
                                                        return this.curpopConfig.customTextStyle.text
                                                    }, value: "item"
                                                }, style: function () {
                                                    return this.item.style
                                                }, id: function () {
                                                    return "@" == this.item.text ? "anTran" : ""
                                                }, classList: function () {
                                                    return ["@" == this.item.text ? this.transAn : ""]
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "ad-clickable-area", attr: {
                                            type: "click", show: function () {
                                                return this.nativeAdvObj && "middle" !== this.popType && this.nativeIsShowPop && "fixed" === this.curpopConfig.materialStyle.position && !this.isNoAd
                                            }
                                        }, classList: ["ad-btn1"], style: {
                                            width: function () {
                                                return this.curpopConfig.materialStyle.width + "px"
                                            }, height: function () {
                                                return this.curpopConfig.materialStyle.height + "px"
                                            }, top: function () {
                                                return this.curpopConfig.materialStyle.top + "px"
                                            }, left: function () {
                                                return this.curpopConfig.materialStyle.left + "px"
                                            }, position: "absolute", marginTop: function () {
                                                return this.curpopConfig.customBoxStyle.style.height
                                            }
                                        }, children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.nativeAdvObj && this.nativeAdvObj.materialUrl
                                                }
                                            }, style: {
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                }, objectFit: "fill", borderTopLeftRadius: function () {
                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                }, borderTopRightRadius: function () {
                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                }, borderBottomRightRadius: function () {
                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                }, borderBottomLeftRadius: function () {
                                                    return this.nativeIsShowPop ? "8px" : "0px"
                                                }
                                            }
                                        }, {
                                            type: "div", attr: {
                                                show: function () {
                                                    return this.nativeIsShowPop && !this.isNoAd
                                                }
                                            }, classList: ["ad-mask"], children: [{type: "text", attr: {value: "广告"}}]
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return !this.nativeIsShowPop
                                                }
                                            },
                                            classList: ["ad-mask-normal"],
                                            children: [{type: "text", attr: {value: "广告"}}]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: ["app-info-warp"],
                                            style: {
                                                height: "50px", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                }
                                            },
                                            shown: function () {
                                                return this.appInfo && !this.isNoAd && this.nativeAdvObj && "middle" !== this.popType && this.nativeIsShowPop && "fixed" === this.curpopConfig.materialStyle.position
                                            },
                                            children: [{
                                                type: "app-info", attr: {
                                                    rows: function () {
                                                        return 2
                                                    }, appInfo: function () {
                                                        return this.appInfo
                                                    }, materialWidth: function () {
                                                        return this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth
                                                    }
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 2 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                            }, justifyContent: "center", marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                            }, marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.crowdStyle.text
                                                }
                                            }, style: {
                                                fontSize: function () {
                                                    return this.curpopConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            show: function () {
                                                return this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                            }, src: function () {
                                                return this.curpopConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                            }, marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                            }, opacity: function () {
                                                return this.curpopConfig.closeStyle.opacity
                                            }, objectFit: "fill", transform: function () {
                                                return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-title"], style: {
                                            height: function () {
                                                return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                            }, verticalAlign: "top", width: "100%", borderLeftWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderRightWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomLeftRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }, borderBottomRightRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.source || this.nativeAdvObj.title
                                                }
                                            }, style: {
                                                width: "100%", height: "100%", color: function () {
                                                    return this.defaultStyle.titleColor
                                                }, fontSize: function () {
                                                    return this.defaultStyle.titleFont + "px"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, shown: function () {
                                            return this.nativeIsShowPop && "middle" !== this.popType && this.curpopConfig.iconStyle && this.curpopConfig.iconStyle.isShow && !this.isNoAd
                                        }, classList: ["pop-ad-icon"], style: {
                                            position: "absolute", left: function () {
                                                return this.curpopConfig.iconStyle.left + "px"
                                            }, top: function () {
                                                return this.curpopConfig.iconStyle.top + "px"
                                            }, flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, style: {
                                                marginBottom: function () {
                                                    return this.curpopConfig.iconStyle.marginBottom + "px"
                                                }
                                            }, children: [{
                                                type: "image", attr: {
                                                    width: function () {
                                                        return this.curpopConfig.iconStyle.width + "px"
                                                    }, height: function () {
                                                        return this.curpopConfig.iconStyle.width + "px"
                                                    }, src: function () {
                                                        return this.nativeAdvObj.icon || this.nativeAdvObj.materialUrl
                                                    }
                                                }, style: {
                                                    marginRight: function () {
                                                        return this.curpopConfig.iconStyle.marginRight + "px"
                                                    }, borderRadius: function () {
                                                        return this.curpopConfig.iconStyle.radius + "px"
                                                    }, flexShrink: 0
                                                }
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.nativeAdvObj.title || this.curpopConfig.iconStyle.title
                                                    }
                                                }, style: {
                                                    lines: 1, textOverflow: "ellipsis", fontSize: function () {
                                                        return this.curpopConfig.iconStyle.titleFontsize + "px"
                                                    }, color: function () {
                                                        return this.curpopConfig.iconStyle.titleColor
                                                    }, width: function () {
                                                        return this.curpopConfig.iconStyle.titleWidth + "px"
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.source ? this.nativeAdvObj.source : this.curpopConfig.iconStyle.desc
                                                }
                                            }, style: {
                                                lines: 1, textOverflow: "ellipsis", fontSize: function () {
                                                    return this.curpopConfig.iconStyle.descFontsize + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.iconStyle.descColor
                                                }, width: function () {
                                                    return this.curpopConfig.iconStyle.descWidth + "px"
                                                }
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {
                                        show: function () {
                                            return this.beforeJumpGif
                                        }
                                    },
                                    classList: ["before-jump-gif"],
                                    children: [{
                                        type: "div", attr: {
                                            show: function () {
                                                return this.beforeJumpImg.url
                                            }
                                        }, classList: ["gif-img"], style: {
                                            top: function () {
                                                return this.curpopConfig.commonStyle.transitionBeforeJumpTop + "px"
                                            }
                                        }, children: [{
                                            type: "div", attr: {}, style: {
                                                height: function () {
                                                    return this.beforeJumpImg.height + "px"
                                                }, width: function () {
                                                    return this.beforeJumpImg.width + "px"
                                                }
                                            }, children: [{
                                                type: "lottie-image", attr: {
                                                    source: function () {
                                                        return this.beforeJumpImg.url
                                                    },
                                                    imgStyle: " position:absolute;left:0;top:0;\n                  height:100%;\n                  width:100%; "
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.beforeJumpImg
                                            }
                                        }, classList: ["gif-img"], style: {
                                            top: function () {
                                                return this.curpopConfig.commonStyle.transitionBeforeJumpTop + "px"
                                            }
                                        }
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 6529: t => {
                    t.exports = {
                        type: "block", attr: {}, children: [{
                            type: "div", attr: {}, classList: ["ad-native"], children: [{
                                type: "div", attr: {
                                    show: function () {
                                        return "middle" !== this.popType
                                    }
                                }, classList: ["ad-native"], children: [{
                                    type: "div", attr: {
                                        show: function () {
                                            return this.popShowGif
                                        }
                                    }, classList: ["before-gif"], children: [{
                                        type: "div",
                                        attr: {
                                            show: function () {
                                                return this.popShowGifImg.url
                                            }
                                        },
                                        classList: ["gif-img"],
                                        children: [{
                                            type: "div", attr: {}, style: {
                                                height: function () {
                                                    return this.popShowGifImg.height + "px"
                                                }, width: function () {
                                                    return this.popShowGifImg.width + "px"
                                                }
                                            }, children: [{
                                                type: "lottie-image", attr: {
                                                    source: function () {
                                                        return this.popShowGifImg.url
                                                    },
                                                    imgStyle: " position:absolute;left:0;top:0;\n                  height:100%;\n                  width:100%; "
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.popShowGifImg
                                            }
                                        }, classList: ["gif-img"]
                                    }]
                                }, {
                                    type: "div", attr: {
                                        show: function () {
                                            return !this.popShowGif
                                        }
                                    }, classList: ["ad-content"], style: function () {
                                        return this.adContentStyle
                                    }, children: [{
                                        type: "image", attr: {
                                            show: function () {
                                                return this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                            }, src: function () {
                                                return this.curpopConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                            }, marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                            }, opacity: function () {
                                                return this.curpopConfig.closeStyle.opacity
                                            }, objectFit: "fill", transform: function () {
                                                return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return this.customAction.pop_title
                                        },
                                        style: {
                                            width: "100%",
                                            display: "flex",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            marginBottom: "15px"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {value: "恭喜获得 "},
                                            style: {color: "#ffffff", fontSize: "50px"}
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.customAction.pop_title
                                                }
                                            }, style: {
                                                fontSize: "50px", fontWeight: "bold", color: function () {
                                                    return "OPEN_RED_MONEY" === this.customAction.task_code ? "#FF4F4F" : "#FF9401"
                                                }
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: "元 "},
                                            style: {color: "#ff4f4f", fontSize: "50px"},
                                            shown: function () {
                                                return "OPEN_RED_MONEY" === this.customAction.task_code
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: " 水滴 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return "OPEN_WATAR" === this.customAction.task_code && !("OPEN_RED_MONEY" === this.customAction.task_code)
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: " 袋肥料 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return !("OPEN_FERTILIZER" !== this.customAction.task_code || "OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code)
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: "金币 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return !("OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code || "OPEN_FERTILIZER" === this.customAction.task_code)
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 1 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                            },
                                            height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                            },
                                            alignItems: "center",
                                            justifyContent: "center",
                                            textAlign: "center",
                                            marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                            },
                                            marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                            }
                                        }, children: [{
                                            type: "image",
                                            attr: {
                                                src: function () {
                                                    return this.curpopConfig.crowdStyle.image
                                                }
                                            },
                                            style: {
                                                width: "100%",
                                                height: "100%",
                                                position: "absolute",
                                                left: "0px",
                                                top: "0px",
                                                objectFit: "fill"
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.crowdStyle.text
                                                }
                                            }, style: {
                                                fontSize: function () {
                                                    return this.curpopConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-title"], style: {
                                            height: function () {
                                                return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                            }, verticalAlign: "top", width: "100%", borderLeftWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderRightWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopLeftRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }, borderTopRightRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.title || this.nativeAdvObj.desc || "热门应用"
                                                }
                                            }, style: {
                                                width: "100%", height: "100%", color: function () {
                                                    return this.defaultStyle.titleColor
                                                }, fontSize: function () {
                                                    return this.defaultStyle.titleFont + "px"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: ["ad-title-close"],
                                            events: {click: "deleteBtnClick"},
                                            children: [{
                                                type: "image",
                                                attr: {src: "https://ims.readnos.com/image%2F2022-06-28%2F1656399134152_close.png"}
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {id: "coord"}, id: "coord", style: {
                                            width: function () {
                                                return this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : this.defaultStyle.imageWidth + "px"
                                            }, height: function () {
                                                return this.nativeIsShowPop ? this.curpopConfig.popStyle.height >= this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top || "fixed" === this.curpopConfig.materialStyle.position ? this.curpopConfig.popStyle.height + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.defaultStyle.imageHeight + "px"
                                            }, flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, shown: function () {
                                                return this.curpopConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.curpopConfig.customBoxStyle.style
                                            }
                                        }, {
                                            type: "lottie-image", attr: {
                                                src: function () {
                                                    return this.curpopConfig.popStyle.image
                                                }, source: function () {
                                                    return this.curpopConfig.popStyle.json
                                                }, imgStyle: function () {
                                                    return "width:" + (this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : "0px") + ";                height:" + (this.nativeIsShowPop ? this.checkActionCodeIsScreen ? "100%" : this.curpopConfig.popStyle.height + "px" : "0px") + ";                position:absolute;                left:0;                top:0;                object-fit:fill;"
                                                }
                                            }
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.curpopConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                }, opacity: function () {
                                                    return this.curpopConfig.closeStyle.opacity
                                                }, objectFit: "fill", left: function () {
                                                    return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                }, top: function () {
                                                    return this.curpopConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.curpopConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                }, opacity: function () {
                                                    return this.curpopConfig.closeStyle.opacity
                                                }, objectFit: "fill", right: function () {
                                                    return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                }, top: function () {
                                                    return this.curpopConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return this.curpopConfig.negStyle.isShow
                                                }
                                            },
                                            classList: ["cancel_btn"],
                                            style: {
                                                justifyContent: "center",
                                                alignItems: "center",
                                                position: "absolute",
                                                top: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.top : 0) + "px"
                                                },
                                                left: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.left : 0) + "px"
                                                },
                                                width: function () {
                                                    return this.nativeIsShowPop ? this.curpopConfig.negStyle.width ? this.curpopConfig.negStyle.width + "px" : "auto" : "0px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.height ? this.curpopConfig.negStyle.height : this.curpopConfig.negStyle.font : "0px") + "px"
                                                },
                                                backgroundImage: function () {
                                                    return this.curpopConfig.negStyle.icon
                                                },
                                                backgroundPosition: "center center",
                                                backgroundSize: function () {
                                                    return this.curpopConfig.negStyle.width + "px " + this.curpopConfig.negStyle.height + "px"
                                                },
                                                backgroundRepeat: "no-repeat",
                                                borderRadius: function () {
                                                    return this.curpopConfig.negStyle.radio + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "image",
                                                attr: {
                                                    src: function () {
                                                        return this.curpopConfig.negStyle.icon
                                                    }
                                                },
                                                style: {
                                                    width: "100%",
                                                    height: "100%",
                                                    position: "absolute",
                                                    left: "0px",
                                                    top: "0px"
                                                }
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.curpopConfig.negStyle.text
                                                    }
                                                }, events: {click: "negClick"}, style: {
                                                    fontSize: function () {
                                                        return this.curpopConfig.negStyle.font + "px"
                                                    }, color: function () {
                                                        return this.curpopConfig.negStyle.color
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.nativeIsShowPop && !this.isNoAd
                                            },
                                            classList: function () {
                                                return ["ad-btn", this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                            },
                                            events: {click: "noAdClickForBtn"},
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                paddingLeft: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingRight: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingTop: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                },
                                                paddingBottom: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    width: function () {
                                                        return this.curpopConfig.btnStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curpopConfig.btnStyle.height + "px"
                                                    },
                                                    backgroundColor: function () {
                                                        return 1 == this.curpopConfig.btnStyle.styleType ? this.curpopConfig.btnStyle.bgColor : ""
                                                    },
                                                    borderRadius: function () {
                                                        return this.curpopConfig.btnStyle.radio + "px"
                                                    }
                                                },
                                                children: [{
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.btnStyle.json
                                                        }, imgStyle: function () {
                                                            return "position: absolute;                    left: 0;                    top: 0;                    width: " + this.curpopConfig.btnStyle.width + "px;                    height: " + this.curpopConfig.btnStyle.height + "px;                    object-fit:fill;"
                                                        }
                                                    }, shown: function () {
                                                        return 2 == this.curpopConfig.btnStyle.styleType
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.icon
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, height: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, marginTop: function () {
                                                            return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                        }
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.curpopConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return !this.isNoAd && this.nativeAdvObj && this.nativeAdvObj.id && "冷却" !== this.nativeAdvObj.id && !this.isLoadFull
                                            }, classList: function () {
                                                return ["ad-btn", this.nativeIsShowPop && this.adCustomClass]
                                            }, style: {
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.popStyle.width : this.defaultStyle.imageWidth) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? .7 * this.curpopConfig.popStyle.width : this.defaultStyle.imageHeight) + "px"
                                                }, top: function () {
                                                    return (this.nativeIsShowPop ? this.templateTop : 0) + "px"
                                                }, left: function () {
                                                    return this.nativeIsShowPop, "0px"
                                                }, position: "absolute", transformOrigin: function () {
                                                    return this.tamplateOrigin
                                                }, transform: function () {
                                                    return "scaleX(" + this.tamplateScaleX + ")"
                                                }
                                            }, children: [{
                                                type: "ad-custom",
                                                attr: {
                                                    adunitid: function () {
                                                        return this.nativeAdvObj.id
                                                    }
                                                },
                                                style: {width: "100%", height: "100%"},
                                                events: {
                                                    click: "adClickXiaomi",
                                                    show: "adShowXiaomi",
                                                    close: "xiaomiAdClose"
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.nativeIsShowPop && (!this.curpopConfig.btnStyle.isBindingAd || this.isNoAd)
                                            },
                                            classList: function () {
                                                return ["ad-btn", this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                            },
                                            events: {click: "noAdClickForBtn"},
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                paddingLeft: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingRight: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingTop: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                },
                                                paddingBottom: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    width: function () {
                                                        return this.curpopConfig.btnStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curpopConfig.btnStyle.height + "px"
                                                    },
                                                    backgroundColor: function () {
                                                        return 1 == this.curpopConfig.btnStyle.styleType ? this.curpopConfig.btnStyle.bgColor : ""
                                                    },
                                                    borderRadius: function () {
                                                        return this.curpopConfig.btnStyle.radio + "px"
                                                    }
                                                },
                                                children: [{
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.btnStyle.json
                                                        }, imgStyle: function () {
                                                            return "position: absolute;                    left: 0;                    top: 0;                    width: " + this.curpopConfig.btnStyle.width + "px;                    height: " + this.curpopConfig.btnStyle.height + "px;                    object-fit:fill;"
                                                        }
                                                    }, shown: function () {
                                                        return 2 == this.curpopConfig.btnStyle.styleType
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.icon
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, height: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, marginTop: function () {
                                                            return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                        }
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.curpopConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return this.nativeIsShowPop && this.curpopConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.curpopConfig.customTextStyle.style
                                            }, children: [{
                                                type: "text", attr: {
                                                    id: function () {
                                                        return "@" == this.item.text ? "anTran" : ""
                                                    }, value: function () {
                                                        return "@" != this.item.text ? this.item.text : this.changeable
                                                    }
                                                }, repeat: {
                                                    exp: function () {
                                                        return this.curpopConfig.customTextStyle.text
                                                    }, value: "item"
                                                }, style: function () {
                                                    return this.item.style
                                                }, id: function () {
                                                    return "@" == this.item.text ? "anTran" : ""
                                                }, classList: function () {
                                                    return ["@" == this.item.text ? this.transAn : ""]
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 2 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                            }, justifyContent: "center", marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                            }, marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.crowdStyle.text
                                                }
                                            }, style: {
                                                fontSize: function () {
                                                    return this.curpopConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            show: function () {
                                                return this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                            }, src: function () {
                                                return this.curpopConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                            }, marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                            }, opacity: function () {
                                                return this.curpopConfig.closeStyle.opacity
                                            }, objectFit: "fill", transform: function () {
                                                return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-title"], style: {
                                            height: function () {
                                                return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                            }, verticalAlign: "top", width: "100%", borderLeftWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderRightWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomLeftRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }, borderBottomRightRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.source || this.nativeAdvObj.title
                                                }
                                            }, style: {
                                                width: "100%", height: "100%", color: function () {
                                                    return this.defaultStyle.titleColor
                                                }, fontSize: function () {
                                                    return this.defaultStyle.titleFont + "px"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {
                                        show: function () {
                                            return this.beforeJumpGif
                                        }
                                    },
                                    classList: ["before-jump-gif"],
                                    children: [{
                                        type: "div", attr: {
                                            show: function () {
                                                return this.beforeJumpImg.url
                                            }
                                        }, classList: ["gif-img"], style: {
                                            top: function () {
                                                return this.curpopConfig.commonStyle.transitionBeforeJumpTop + "px"
                                            }
                                        }, children: [{
                                            type: "div", attr: {}, style: {
                                                height: function () {
                                                    return this.beforeJumpImg.height + "px"
                                                }, width: function () {
                                                    return this.beforeJumpImg.width + "px"
                                                }
                                            }, children: [{
                                                type: "lottie-image", attr: {
                                                    source: function () {
                                                        return this.beforeJumpImg.url
                                                    },
                                                    imgStyle: " position:absolute;left:0;top:0;\n                  height:100%;\n                  width:100%; "
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.beforeJumpImg
                                            }
                                        }, classList: ["gif-img"], style: {
                                            top: function () {
                                                return this.curpopConfig.commonStyle.transitionBeforeJumpTop + "px"
                                            }
                                        }
                                    }]
                                }, {
                                    type: "ad-custom", attr: {
                                        adunitid: function () {
                                            return this.nativeAdvObj.id
                                        }
                                    }, shown: function () {
                                        return !this.isNoAd && this.nativeAdvObj && this.nativeAdvObj.id && "冷却" !== this.nativeAdvObj.id && this.isLoadFull
                                    }, classList: function () {
                                        return ["full-touch-btn1", this.isLoadFull ? this.adCustomClass : ""]
                                    }, events: {click: "adClickXiaomi", show: "adShowXiaomi", close: "xiaomiAdClose"}
                                }]
                            }]
                        }]
                    }
                }, 5716: t => {
                    t.exports = {
                        type: "block", attr: {}, children: [{
                            type: "div", attr: {
                                show: function () {
                                    return "middle" !== this.popType
                                }
                            }, classList: ["ad-native"], children: [{
                                type: "ylh-ad",
                                attr: {
                                    adId: function () {
                                        return this.nativeAdvObj.adId
                                    }
                                },
                                shown: function () {
                                    return this.nativeAdvObj.adId && this.isUIShow
                                },
                                events: {"-ad-click": "onAdClick", "-ad-expose": "onAdExpose"},
                                children: [{
                                    type: "div", attr: {
                                        show: function () {
                                            return this.popShowGif
                                        }
                                    }, classList: ["before-gif"], children: [{
                                        type: "div",
                                        attr: {
                                            show: function () {
                                                return this.popShowGifImg.url
                                            }
                                        },
                                        classList: ["gif-img"],
                                        children: [{
                                            type: "div", attr: {}, style: {
                                                height: function () {
                                                    return this.popShowGifImg.height + "px"
                                                }, width: function () {
                                                    return this.popShowGifImg.width + "px"
                                                }
                                            }, children: [{
                                                type: "lottie-image", attr: {
                                                    source: function () {
                                                        return this.popShowGifImg.url
                                                    },
                                                    imgStyle: " position:absolute;left:0;top:0;\n                  height:100%;\n                  width:100%; "
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.popShowGifImg
                                            }
                                        }, classList: ["gif-img"]
                                    }]
                                }, {
                                    type: "div", attr: {
                                        show: function () {
                                            return !this.popShowGif
                                        }
                                    }, classList: ["ad-content"], style: function () {
                                        return this.adContentStyle
                                    }, children: [{
                                        type: "image", attr: {
                                            show: function () {
                                                return this.curpopConfig.closeStyle.isShow && 1 == this.curpopConfig.closeStyle.position
                                            }, src: function () {
                                                return this.curpopConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                            }, marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                            }, opacity: function () {
                                                return this.curpopConfig.closeStyle.opacity
                                            }, objectFit: "fill", transform: function () {
                                                return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div",
                                        attr: {},
                                        shown: function () {
                                            return this.customAction.pop_title
                                        },
                                        style: {
                                            width: "100%",
                                            display: "flex",
                                            alignItems: "center",
                                            justifyContent: "center",
                                            marginBottom: "15px"
                                        },
                                        children: [{
                                            type: "text",
                                            attr: {value: "恭喜获得 "},
                                            style: {color: "#ffffff", fontSize: "50px"}
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.customAction.pop_title
                                                }
                                            }, style: {
                                                fontSize: "50px", fontWeight: "bold", color: function () {
                                                    return "OPEN_RED_MONEY" === this.customAction.task_code ? "#FF4F4F" : "#FF9401"
                                                }
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: "元 "},
                                            style: {color: "#ff4f4f", fontSize: "50px"},
                                            shown: function () {
                                                return "OPEN_RED_MONEY" === this.customAction.task_code
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: " 水滴 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return "OPEN_WATAR" === this.customAction.task_code && !("OPEN_RED_MONEY" === this.customAction.task_code)
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: " 袋肥料 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return !("OPEN_FERTILIZER" !== this.customAction.task_code || "OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code)
                                            }
                                        }, {
                                            type: "text",
                                            attr: {value: "金币 "},
                                            style: {color: "#ff9401", fontSize: "50px"},
                                            shown: function () {
                                                return !("OPEN_RED_MONEY" === this.customAction.task_code || "OPEN_WATAR" === this.customAction.task_code || "OPEN_FERTILIZER" === this.customAction.task_code)
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 1 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                            },
                                            height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                            },
                                            alignItems: "center",
                                            justifyContent: "center",
                                            textAlign: "center",
                                            marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                            },
                                            marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                            }
                                        }, children: [{
                                            type: "image",
                                            attr: {
                                                src: function () {
                                                    return this.curpopConfig.crowdStyle.image
                                                }
                                            },
                                            style: {
                                                width: "100%",
                                                height: "100%",
                                                position: "absolute",
                                                left: "0px",
                                                top: "0px",
                                                objectFit: "fill"
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.crowdStyle.text
                                                }
                                            }, style: {
                                                fontSize: function () {
                                                    return this.curpopConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-title"], style: {
                                            height: function () {
                                                return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                            }, verticalAlign: "top", width: "100%", borderLeftWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderRightWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopLeftRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }, borderTopRightRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.title || this.nativeAdvObj.desc || "热门应用"
                                                }
                                            }, style: {
                                                width: "100%", height: "100%", color: function () {
                                                    return this.defaultStyle.titleColor
                                                }, fontSize: function () {
                                                    return this.defaultStyle.titleFont + "px"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: ["ad-title-close"],
                                            events: {click: "deleteBtnClick"},
                                            children: [{
                                                type: "image",
                                                attr: {src: "https://ims.readnos.com/image%2F2022-06-28%2F1656399134152_close.png"}
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {id: "coord"}, id: "coord", style: {
                                            width: function () {
                                                return this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : this.defaultStyle.imageWidth + "px"
                                            }, height: function () {
                                                return this.nativeIsShowPop ? this.curpopConfig.popStyle.height >= this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top || "fixed" === this.curpopConfig.materialStyle.position ? this.curpopConfig.popStyle.height + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.curpopConfig.materialStyle.height + this.curpopConfig.materialStyle.top + Number(this.curpopConfig.customBoxStyle.style.height.split("px")[0]) + "px" : this.defaultStyle.imageHeight + "px"
                                            }, flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, shown: function () {
                                                return this.curpopConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.curpopConfig.customBoxStyle.style
                                            }
                                        }, {
                                            type: "lottie-image", attr: {
                                                src: function () {
                                                    return this.curpopConfig.popStyle.image
                                                }, source: function () {
                                                    return this.curpopConfig.popStyle.json
                                                }, imgStyle: function () {
                                                    return "width:" + (this.nativeIsShowPop ? this.curpopConfig.popStyle.width + "px" : "0px") + ";                        height:" + (this.nativeIsShowPop ? this.checkActionCodeIsScreen ? "100%" : this.curpopConfig.popStyle.height + "px" : "0px") + ";                        position:absolute;                        left:0;                        top:0;                        object-fit:fill;"
                                                }
                                            }
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.curpopConfig.closeStyle.isShow && 3 == this.curpopConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.curpopConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                }, opacity: function () {
                                                    return this.curpopConfig.closeStyle.opacity
                                                }, objectFit: "fill", left: function () {
                                                    return 26 + this.curpopConfig.closeStyle.translateX + "px"
                                                }, top: function () {
                                                    return this.curpopConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.curpopConfig.closeStyle.isShow && 4 == this.curpopConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.curpopConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                                }, opacity: function () {
                                                    return this.curpopConfig.closeStyle.opacity
                                                }, objectFit: "fill", right: function () {
                                                    return 26 - this.curpopConfig.closeStyle.translateX + "px"
                                                }, top: function () {
                                                    return this.curpopConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return this.curpopConfig.negStyle.isShow
                                                }
                                            },
                                            classList: ["cancel_btn"],
                                            style: {
                                                justifyContent: "center",
                                                alignItems: "center",
                                                position: "absolute",
                                                top: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.top : 0) + "px"
                                                },
                                                left: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.left : 0) + "px"
                                                },
                                                width: function () {
                                                    return this.nativeIsShowPop ? this.curpopConfig.negStyle.width ? this.curpopConfig.negStyle.width + "px" : "auto" : "0px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.negStyle.height ? this.curpopConfig.negStyle.height : this.curpopConfig.negStyle.font : "0px") + "px"
                                                },
                                                backgroundImage: function () {
                                                    return this.curpopConfig.negStyle.icon
                                                },
                                                backgroundPosition: "center center",
                                                backgroundSize: function () {
                                                    return this.curpopConfig.negStyle.width + "px " + this.curpopConfig.negStyle.height + "px"
                                                },
                                                backgroundRepeat: "no-repeat",
                                                borderRadius: function () {
                                                    return this.curpopConfig.negStyle.radio + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "image",
                                                attr: {
                                                    src: function () {
                                                        return this.curpopConfig.negStyle.icon
                                                    }
                                                },
                                                style: {
                                                    width: "100%",
                                                    height: "100%",
                                                    position: "absolute",
                                                    left: "0px",
                                                    top: "0px"
                                                }
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.curpopConfig.negStyle.text
                                                    }
                                                }, events: {click: "negClick"}, style: {
                                                    fontSize: function () {
                                                        return this.curpopConfig.negStyle.font + "px"
                                                    }, color: function () {
                                                        return this.curpopConfig.negStyle.color
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return this.nativeIsShowPop
                                                }, id: "adButton"
                                            },
                                            id: "adButton",
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            events: {click: "clickBtn"},
                                            children: [{
                                                type: "ylh-ad-clickable-area", attr: {
                                                    adId: function () {
                                                        return this.nativeAdvObj.adId
                                                    }
                                                }, children: [{
                                                    type: "div",
                                                    attr: {},
                                                    classList: function () {
                                                        return [this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                                    },
                                                    style: {
                                                        justifyContent: "center",
                                                        alignItems: "center",
                                                        width: function () {
                                                            return this.curpopConfig.btnStyle.width + "px"
                                                        },
                                                        height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        },
                                                        backgroundColor: function () {
                                                            return 1 == this.curpopConfig.btnStyle.styleType ? this.curpopConfig.btnStyle.bgColor : ""
                                                        },
                                                        borderRadius: function () {
                                                            return this.curpopConfig.btnStyle.radio + "px"
                                                        }
                                                    },
                                                    children: [{
                                                        type: "lottie-image", attr: {
                                                            src: function () {
                                                                return this.curpopConfig.btnStyle.image
                                                            }, source: function () {
                                                                return this.curpopConfig.btnStyle.json
                                                            }, imgStyle: function () {
                                                                return "position: absolute;                        left: 0;                        top: 0;                        width: " + this.curpopConfig.btnStyle.width + "px;                        height: " + this.curpopConfig.btnStyle.height + "px;                        object-fit:fill;"
                                                            }
                                                        }, shown: function () {
                                                            return 2 == this.curpopConfig.btnStyle.styleType
                                                        }
                                                    }, {
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.curpopConfig.btnStyle.icon
                                                            }
                                                        }, shown: function () {
                                                            return this.curpopConfig.btnStyle.icon
                                                        }, style: {
                                                            width: function () {
                                                                return (this.curpopConfig.btnStyle.iconSwitch && this.curpopConfig.btnStyle.icon ? 48 : 0) + "px"
                                                            }, height: function () {
                                                                return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                            }, marginTop: function () {
                                                                return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                            }
                                                        }
                                                    }, {
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                            }
                                                        }, style: {
                                                            textAlign: "center", fontSize: function () {
                                                                return this.curpopConfig.btnStyle.font + "px"
                                                            }, color: function () {
                                                                return this.curpopConfig.btnStyle.color
                                                            }, height: function () {
                                                                return this.curpopConfig.btnStyle.height + "px"
                                                            }
                                                        }
                                                    }]
                                                }]
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            shown: function () {
                                                return this.nativeIsShowPop && (!this.curpopConfig.btnStyle.isBindingAd || this.isNoAd)
                                            },
                                            classList: function () {
                                                return ["ad-btn", this.curpopConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                            },
                                            events: {click: "noAdClickForBtn"},
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.curpopConfig.btnStyle.top - this.curpopConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.curpopConfig.btnStyle.left - this.curpopConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.width + 2 * this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.height + this.curpopConfig.btnStyle.hotTop + this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                paddingLeft: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingRight: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotAbout : 0) + "px"
                                                },
                                                paddingTop: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotTop : 0) + "px"
                                                },
                                                paddingBottom: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.btnStyle.hotBottom : 0) + "px"
                                                },
                                                marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    width: function () {
                                                        return this.curpopConfig.btnStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.curpopConfig.btnStyle.height + "px"
                                                    },
                                                    backgroundColor: function () {
                                                        return 1 == this.curpopConfig.btnStyle.styleType ? this.curpopConfig.btnStyle.bgColor : ""
                                                    },
                                                    borderRadius: function () {
                                                        return this.curpopConfig.btnStyle.radio + "px"
                                                    }
                                                },
                                                children: [{
                                                    type: "lottie-image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.image
                                                        }, source: function () {
                                                            return this.curpopConfig.btnStyle.json
                                                        }, imgStyle: function () {
                                                            return "position: absolute;                        left: 0;                        top: 0;                        width: " + this.curpopConfig.btnStyle.width + "px;                        height: " + this.curpopConfig.btnStyle.height + "px;                        object-fit:fill;"
                                                        }
                                                    }, shown: function () {
                                                        return 2 == this.curpopConfig.btnStyle.styleType
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.curpopConfig.btnStyle.icon
                                                        }
                                                    }, shown: function () {
                                                        return this.curpopConfig.btnStyle.icon
                                                    }, style: {
                                                        width: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, height: function () {
                                                            return (this.curpopConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, marginTop: function () {
                                                            return (this.curpopConfig.btnStyle.height - 48) / 2 + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.curpopConfig.btnStyle.text ? this.curpopConfig.btnStyle.text : this.nativeAdvObj.clickBtnTxt ? this.nativeAdvObj.clickBtnTxt : "查看广告"
                                                        }
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.curpopConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.curpopConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.curpopConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "div", attr: {
                                                show: function () {
                                                    return "fixed" !== this.curpopConfig.materialStyle.position && !this.isNoAd
                                                }
                                            }, classList: ["ad-btn"], style: {
                                                width: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                }, height: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                }, top: function () {
                                                    return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.top : 0) + "px"
                                                }, left: function () {
                                                    return (this.nativeIsShowPop ? (this.curpopConfig.popStyle.width - this.curpopConfig.materialStyle.width) / 2 : 0) + "px"
                                                }, position: "absolute", marginTop: function () {
                                                    return this.curpopConfig.customBoxStyle.style.height
                                                }
                                            }, children: [{
                                                type: "ylh-ad-clickable-area", attr: {
                                                    adId: function () {
                                                        return this.nativeAdvObj.adId
                                                    }
                                                }, children: [{
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.nativeAdvObj && this.nativeAdvObj.materialUrl
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                        }, height: function () {
                                                            return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                        }, objectFit: "fill", borderTopLeftRadius: function () {
                                                            return this.nativeIsShowPop ? "8px" : "0px"
                                                        }, borderTopRightRadius: function () {
                                                            return this.nativeIsShowPop ? "8px" : "0px"
                                                        }, borderBottomRightRadius: function () {
                                                            return this.nativeIsShowPop ? "8px" : "0px"
                                                        }, borderBottomLeftRadius: function () {
                                                            return this.nativeIsShowPop ? "8px" : "0px"
                                                        }
                                                    }
                                                }, {
                                                    type: "div",
                                                    attr: {
                                                        show: function () {
                                                            return this.nativeIsShowPop && !this.isNoAd
                                                        }
                                                    },
                                                    classList: ["ad-mask"],
                                                    children: [{type: "text", attr: {value: "广告"}}]
                                                }, {
                                                    type: "div",
                                                    attr: {
                                                        show: function () {
                                                            return !this.nativeIsShowPop
                                                        }
                                                    },
                                                    classList: ["ad-mask-normal"],
                                                    children: [{type: "text", attr: {value: "广告"}}]
                                                }]
                                            }]
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return this.nativeIsShowPop && this.curpopConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.curpopConfig.customTextStyle.style
                                            }, children: [{
                                                type: "text", attr: {
                                                    id: function () {
                                                        return "@" == this.item.text ? "anTran" : ""
                                                    }, value: function () {
                                                        return "@" != this.item.text ? this.item.text : this.changeable
                                                    }
                                                }, repeat: {
                                                    exp: function () {
                                                        return this.curpopConfig.customTextStyle.text
                                                    }, value: "item"
                                                }, style: function () {
                                                    return this.item.style
                                                }, id: function () {
                                                    return "@" == this.item.text ? "anTran" : ""
                                                }, classList: function () {
                                                    return ["@" == this.item.text ? this.transAn : ""]
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return this.nativeAdvObj && "middle" !== this.popType && this.nativeIsShowPop && "fixed" === this.curpopConfig.materialStyle.position && !this.isNoAd
                                            }
                                        }, classList: ["ad-btn1"], style: {
                                            width: function () {
                                                return this.curpopConfig.materialStyle.width + "px"
                                            }, height: function () {
                                                return this.curpopConfig.materialStyle.height + "px"
                                            }, top: function () {
                                                return this.curpopConfig.materialStyle.top + "px"
                                            }, left: function () {
                                                return this.curpopConfig.materialStyle.left + "px"
                                            }, position: "absolute", marginTop: function () {
                                                return this.curpopConfig.customBoxStyle.style.height
                                            }
                                        }, children: [{
                                            type: "ylh-ad-clickable-area", attr: {
                                                adId: function () {
                                                    return this.nativeAdvObj.adId
                                                }
                                            }, children: [{
                                                type: "image", attr: {
                                                    src: function () {
                                                        return this.nativeAdvObj && this.nativeAdvObj.materialUrl
                                                    }
                                                }, style: {
                                                    width: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.width : this.defaultStyle.imageWidth) + "px"
                                                    }, height: function () {
                                                        return (this.nativeIsShowPop ? this.curpopConfig.materialStyle.height : this.defaultStyle.imageHeight) + "px"
                                                    }, objectFit: "fill", borderTopLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }, borderTopRightRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }, borderBottomRightRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }, borderBottomLeftRadius: function () {
                                                        return this.nativeIsShowPop ? "8px" : "0px"
                                                    }
                                                }
                                            }, {
                                                type: "div",
                                                attr: {
                                                    show: function () {
                                                        return this.nativeIsShowPop && !this.isNoAd
                                                    }
                                                },
                                                classList: ["ad-mask"],
                                                children: [{type: "text", attr: {value: "广告"}}]
                                            }, {
                                                type: "div",
                                                attr: {
                                                    show: function () {
                                                        return !this.nativeIsShowPop
                                                    }
                                                },
                                                classList: ["ad-mask-normal"],
                                                children: [{type: "text", attr: {value: "广告"}}]
                                            }]
                                        }]
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 2 == this.curpopConfig.crowdStyle.position && this.curpopConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.height : 0) + "px"
                                            }, justifyContent: "center", marginBottom: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance : 0) + "px"
                                            }, marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.crowdStyle.distance + this.curpopConfig.crowdStyle.between : 0) + "px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.curpopConfig.crowdStyle.text
                                                }
                                            }, style: {
                                                fontSize: function () {
                                                    return this.curpopConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            show: function () {
                                                return this.curpopConfig.closeStyle.isShow && 2 == this.curpopConfig.closeStyle.position
                                            }, src: function () {
                                                return this.curpopConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.width : 0) + "px"
                                            }, height: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.height : 0) + "px"
                                            }, marginTop: function () {
                                                return (this.nativeIsShowPop ? this.curpopConfig.closeStyle.distance : 0) + "px"
                                            }, opacity: function () {
                                                return this.curpopConfig.closeStyle.opacity
                                            }, objectFit: "fill", transform: function () {
                                                return "translateX(" + this.curpopConfig.closeStyle.translateX + "px)"
                                            }
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div", attr: {}, classList: ["ad-title"], style: {
                                            height: function () {
                                                return (this.nativeIsShowPop ? 0 : this.defaultStyle.titleHeight) + "px"
                                            }, verticalAlign: "top", width: "100%", borderLeftWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderRightWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderTopWidth: function () {
                                                return this.nativeIsShowPop ? "0px" : "1px"
                                            }, borderBottomLeftRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }, borderBottomRightRadius: function () {
                                                return this.nativeIsShowPop ? "0px" : "6px"
                                            }
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.source || this.nativeAdvObj.title
                                                }
                                            }, style: {
                                                width: "100%", height: "100%", color: function () {
                                                    return this.defaultStyle.titleColor
                                                }, fontSize: function () {
                                                    return this.defaultStyle.titleFont + "px"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, shown: function () {
                                            return this.nativeIsShowPop && "middle" !== this.popType && this.curpopConfig.iconStyle && this.curpopConfig.iconStyle.isShow && !this.isNoAd
                                        }, classList: ["pop-ad-icon"], style: {
                                            position: "absolute", left: function () {
                                                return this.curpopConfig.iconStyle.left + "px"
                                            }, top: function () {
                                                return this.curpopConfig.iconStyle.top + "px"
                                            }, flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, style: {
                                                marginBottom: function () {
                                                    return this.curpopConfig.iconStyle.marginBottom + "px"
                                                }
                                            }, children: [{
                                                type: "image", attr: {
                                                    width: function () {
                                                        return this.curpopConfig.iconStyle.width + "px"
                                                    }, height: function () {
                                                        return this.curpopConfig.iconStyle.width + "px"
                                                    }, src: function () {
                                                        return this.nativeAdvObj.icon || this.nativeAdvObj.materialUrl
                                                    }
                                                }, style: {
                                                    marginRight: function () {
                                                        return this.curpopConfig.iconStyle.marginRight + "px"
                                                    }, borderRadius: function () {
                                                        return this.curpopConfig.iconStyle.radius + "px"
                                                    }, flexShrink: 0
                                                }
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.nativeAdvObj.title || this.curpopConfig.iconStyle.title
                                                    }
                                                }, style: {
                                                    lines: 1, textOverflow: "ellipsis", fontSize: function () {
                                                        return this.curpopConfig.iconStyle.titleFontsize + "px"
                                                    }, color: function () {
                                                        return this.curpopConfig.iconStyle.titleColor
                                                    }, width: function () {
                                                        return this.curpopConfig.iconStyle.titleWidth + "px"
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.nativeAdvObj.source ? this.nativeAdvObj.source : this.curpopConfig.iconStyle.desc
                                                }
                                            }, style: {
                                                lines: 1, textOverflow: "ellipsis", fontSize: function () {
                                                    return this.curpopConfig.iconStyle.descFontsize + "px"
                                                }, color: function () {
                                                    return this.curpopConfig.iconStyle.descColor
                                                }, width: function () {
                                                    return this.curpopConfig.iconStyle.descWidth + "px"
                                                }
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {
                                        show: function () {
                                            return this.beforeJumpGif
                                        }
                                    },
                                    classList: ["before-jump-gif"],
                                    children: [{
                                        type: "div", attr: {
                                            show: function () {
                                                return this.beforeJumpImg.url
                                            }
                                        }, classList: ["gif-img"], style: {
                                            top: function () {
                                                return this.curpopConfig.commonStyle.transitionBeforeJumpTop + "px"
                                            }
                                        }, children: [{
                                            type: "div", attr: {}, style: {
                                                height: function () {
                                                    return this.beforeJumpImg.height + "px"
                                                }, width: function () {
                                                    return this.beforeJumpImg.width + "px"
                                                }
                                            }, children: [{
                                                type: "lottie-image", attr: {
                                                    source: function () {
                                                        return this.beforeJumpImg.url
                                                    },
                                                    imgStyle: " position:absolute;left:0;top:0;\n                  height:100%;\n                  width:100%; "
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            src: function () {
                                                return this.beforeJumpImg
                                            }
                                        }, classList: ["gif-img"], style: {
                                            top: function () {
                                                return this.curpopConfig.commonStyle.transitionBeforeJumpTop + "px"
                                            }
                                        }
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 9455: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        children: [{
                            type: "bqt-insert-view", attr: {
                                advConfig: function () {
                                    return this.bqtConfig.advConfig
                                }, popConfig: function () {
                                    return this.bqtConfig.popConfig
                                }, actionCode: function () {
                                    return this.actionCode
                                }, backPressTimes: function () {
                                    return this.backPressTimes
                                }, pageName: function () {
                                    return this.pageName
                                }, customAction: function () {
                                    return this.bqtConfig.customAction
                                }
                            }, shown: function () {
                                return this.bqtConfig.isShow
                            }, events: {"event-watch": "bqtEvnetWatchHandle"}
                        }]
                    }
                }, 424: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["skeleton-pop"],
                        events: {click: "popClick"},
                        children: [{
                            type: "image", attr: {
                                src: function () {
                                    return this.skeletonImg
                                }
                            }, style: {width: "300px"}
                        }]
                    }
                }, 8464: t => {
                    t.exports = {
                        type: "div", attr: {}, children: [{
                            type: "div",
                            attr: {},
                            classList: ["video-wrapper"],
                            style: {
                                width: "100%",
                                height: "100%",
                                position: "fixed",
                                alignItems: "center",
                                textAlign: "center",
                                flexDirection: "column",
                                justifyContent: function () {
                                    return this.curpopConfig.flexOverall
                                }
                            },
                            children: [{
                                type: "image",
                                attr: {src: "https://imgs.syreads.com/quick_static/-e-back_white@2x.png"},
                                shown: function () {
                                    return this.popConfig.btnBackIsDisplay
                                },
                                classList: ["back-close-icon"],
                                events: {click: "backIconClick"}
                            }, {
                                type: "image", attr: {
                                    src: function () {
                                        return this.popConfig.maskStyle.image
                                    }
                                }, style: {width: "100%", height: "100%", objectFit: "fill", position: "absolute"}
                            }, {
                                type: "div", attr: {}, classList: ["mask"], style: {
                                    opacity: function () {
                                        return this.popConfig.maskStyle.opacity
                                    }, backgroundColor: "#000000"
                                }
                            }, {
                                type: "div", attr: {}, shown: function () {
                                    return this.popShowGif
                                }, classList: ["before-gif"], children: [{
                                    type: "image", attr: {
                                        src: function () {
                                            return this.popShowGifImg
                                        }
                                    }
                                }]
                            }, {
                                type: "block", attr: {}, shown: function () {
                                    return !this.popShowGif
                                }, children: [{
                                    type: "block",
                                    attr: {},
                                    shown: function () {
                                        return this.popConfig.menubarStyle.isShow
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["menu-bar-wrapper"],
                                        shown: function () {
                                            return 2 == this.popConfig.menubarStyle.showType
                                        },
                                        style: {
                                            width: function () {
                                                return this.popConfig.menubarStyle.width + "px"
                                            }, height: function () {
                                                return this.popConfig.menubarStyle.height + "px"
                                            }, borderRadius: function () {
                                                return this.popConfig.menubarStyle.radio + "px"
                                            }, position: "fixed", left: function () {
                                                return (750 - this.popConfig.menubarStyle.width) / 2 + "px"
                                            }, top: "0px"
                                        },
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.popConfig.menubarStyle.image
                                                }
                                            }, style: {
                                                width: function () {
                                                    return this.popConfig.menubarStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.menubarStyle.height + "px"
                                                }, objectFit: "fill"
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, shown: function () {
                                            return 1 == this.popConfig.menubarStyle.showType && !(2 == this.popConfig.menubarStyle.showType)
                                        }, style: {
                                            position: "fixed",
                                            backgroundColor: "#ffffff",
                                            top: function () {
                                                return this.menuBarTop + "px"
                                            },
                                            height: function () {
                                                return ("huawei" == this.brand ? 66 : 52) + "px"
                                            },
                                            width: function () {
                                                return 750 - 2 * this.menuBarRight + "px"
                                            },
                                            left: function () {
                                                return this.menuBarRight + "px"
                                            },
                                            justifyContent: "flex-start",
                                            alignItems: "center",
                                            textAlign: "center",
                                            borderRadius: function () {
                                                return ("huawei" == this.brand ? 33 : 26) + "px"
                                            },
                                            paddingTop: "0px",
                                            paddingRight: "24px",
                                            paddingBottom: "0px",
                                            paddingLeft: "24px"
                                        }, children: [{
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.popConfig.menubarStyle.text
                                                }
                                            }, style: {
                                                fontSize: "24px", fontWeight: "400", color: function () {
                                                    return this.popConfig.menubarStyle.color ? this.popConfig.menubarStyle.color : "#333333"
                                                }, lines: 1, textOverflow: "ellipsis"
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "div", attr: {}, classList: ["bqt-content"], style: {
                                        transform: function () {
                                            return "scaleX(" + this.popConfig.commonStyle.scale + ") scaleY(" + this.popConfig.commonStyle.scale + ")"
                                        }
                                    }, children: [{
                                        type: "image", attr: {
                                            show: function () {
                                                return this.popConfig.closeStyle.isShow && 1 == this.popConfig.closeStyle.position
                                            }, src: function () {
                                                return this.popConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return this.popConfig.closeStyle.width * this.popConfig.commonStyle.scale + "px"
                                            }, height: function () {
                                                return this.popConfig.closeStyle.height * this.popConfig.commonStyle.scale + "px"
                                            }, marginBottom: function () {
                                                return this.popConfig.closeStyle.distance * this.popConfig.commonStyle.scale + "px"
                                            }, opacity: function () {
                                                return this.popConfig.closeStyle.opacity
                                            }, objectFit: "fill"
                                        }, events: {click: "closeClick"}
                                    }, {
                                        type: "div", attr: {
                                            show: function () {
                                                return 1 == this.popConfig.crowdStyle.position && this.popConfig.crowdStyle.isShow && this.delayConfig.crowd.type
                                            }
                                        }, style: {
                                            width: function () {
                                                return this.popConfig.crowdStyle.width + "px"
                                            },
                                            height: function () {
                                                return this.popConfig.crowdStyle.height + "px"
                                            },
                                            alignItems: "center",
                                            justifyContent: "center",
                                            textAlign: "center",
                                            marginBottom: function () {
                                                return this.popConfig.crowdStyle.distance + this.popConfig.crowdStyle.between + "px"
                                            },
                                            marginTop: function () {
                                                return this.popConfig.crowdStyle.distance + "px"
                                            }
                                        }, children: [{
                                            type: "image",
                                            attr: {
                                                src: function () {
                                                    return this.popConfig.crowdStyle.image
                                                }
                                            },
                                            style: {
                                                width: "100%",
                                                height: "100%",
                                                position: "absolute",
                                                left: "0px",
                                                top: "0px",
                                                objectFit: "fill"
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.popConfig.crowdStyle.text
                                                }
                                            }, shown: function () {
                                                return this.popConfig.crowdStyle.supportType
                                            }, style: {
                                                fontSize: function () {
                                                    return this.popConfig.crowdStyle.font + "px"
                                                }, color: function () {
                                                    return this.popConfig.crowdStyle.color
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div", attr: {}, style: {
                                            width: function () {
                                                return this.popConfig.popStyle.width + "px"
                                            },
                                            height: function () {
                                                return this.popConfig.popStyle.height + "px"
                                            },
                                            justifyContent: "center",
                                            alignItems: "center",
                                            textAlign: "center",
                                            flexDirection: "column"
                                        }, children: [{
                                            type: "div", attr: {}, shown: function () {
                                                return this.popConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.popConfig.customBoxStyle.style
                                            }
                                        }, {
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.popConfig.popStyle.image
                                                }
                                            }, style: {width: "100%", height: "100%", objectFit: "fill"}
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.popConfig.closeStyle.isShow && 3 == this.popConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.popConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return this.popConfig.closeStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.closeStyle.height + "px"
                                                }, opacity: function () {
                                                    return this.popConfig.closeStyle.opacity
                                                }, objectFit: "fill", left: "10px", top: function () {
                                                    return this.popConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "image", attr: {
                                                show: function () {
                                                    return this.popConfig.closeStyle.isShow && 4 == this.popConfig.closeStyle.position
                                                }, src: function () {
                                                    return this.popConfig.closeStyle.image
                                                }
                                            }, style: {
                                                position: "absolute", width: function () {
                                                    return this.popConfig.closeStyle.width + "px"
                                                }, height: function () {
                                                    return this.popConfig.closeStyle.height + "px"
                                                }, opacity: function () {
                                                    return this.popConfig.closeStyle.opacity
                                                }, objectFit: "fill", right: "10px", top: function () {
                                                    return this.popConfig.closeStyle.top + 10 + "px"
                                                }
                                            }, events: {click: "closeClick"}
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: function () {
                                                return ["ad-btn", this.popConfig.btnStyle.breath ? "btnScaleAni" : ""]
                                            },
                                            events: {click: "adButtonClickHandle"},
                                            style: {
                                                justifyContent: "center",
                                                position: "absolute",
                                                alignItems: "center",
                                                top: function () {
                                                    return this.popConfig.btnStyle.top - this.popConfig.btnStyle.hotTop + "px"
                                                },
                                                left: function () {
                                                    return this.popConfig.btnStyle.left - this.popConfig.btnStyle.hotAbout + "px"
                                                },
                                                width: function () {
                                                    return this.popConfig.btnStyle.width + 2 * this.popConfig.btnStyle.hotAbout + "px"
                                                },
                                                height: function () {
                                                    return this.popConfig.btnStyle.height + this.popConfig.btnStyle.hotTop + this.popConfig.btnStyle.hotBottom + "px"
                                                },
                                                paddingLeft: function () {
                                                    return this.popConfig.btnStyle.hotAbout + "px"
                                                },
                                                paddingRight: function () {
                                                    return this.popConfig.btnStyle.hotAbout + "px"
                                                },
                                                paddingTop: function () {
                                                    return this.popConfig.btnStyle.hotTop + "px"
                                                },
                                                paddingBottom: function () {
                                                    return this.popConfig.btnStyle.hotBottom + "px"
                                                },
                                                marginTop: function () {
                                                    return this.popConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                style: {
                                                    justifyContent: "center",
                                                    alignItems: "center",
                                                    width: function () {
                                                        return this.popConfig.btnStyle.width + "px"
                                                    },
                                                    height: function () {
                                                        return this.popConfig.btnStyle.height + "px"
                                                    },
                                                    backgroundColor: function () {
                                                        return this.popConfig.btnStyle.bgColor
                                                    },
                                                    borderRadius: function () {
                                                        return this.popConfig.btnStyle.radio + "px"
                                                    }
                                                },
                                                shown: function () {
                                                    return "add_desktop" !== this.popConfig.configBaseFormData.function_type
                                                },
                                                children: [{
                                                    type: "image",
                                                    attr: {
                                                        src: function () {
                                                            return this.popConfig.btnStyle.image
                                                        }
                                                    },
                                                    style: {
                                                        position: "absolute",
                                                        left: "0px",
                                                        top: "0px",
                                                        width: function () {
                                                            return this.popConfig.btnStyle.width + "px"
                                                        },
                                                        height: function () {
                                                            return this.popConfig.btnStyle.height + "px"
                                                        },
                                                        objectFit: "fill"
                                                    }
                                                }, {
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.popConfig.btnStyle.icon
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return (this.popConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, height: function () {
                                                            return (this.popConfig.btnStyle.iconSwitch ? 48 : 0) + "px"
                                                        }, marginRight: function () {
                                                            return (this.popConfig.btnStyle.iconSwitch ? 6 : 0) + "px"
                                                        }
                                                    }
                                                }, {
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.popConfig.btnStyle.text ? this.popConfig.btnStyle.text : "查看广告"
                                                        }
                                                    }, style: {
                                                        textAlign: "center", fontSize: function () {
                                                            return this.popConfig.btnStyle.font + "px"
                                                        }, color: function () {
                                                            return this.popConfig.btnStyle.color
                                                        }, height: function () {
                                                            return this.popConfig.btnStyle.height + "px"
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "add-desktop-button", attr: {
                                                    buttonStyle: function () {
                                                        return this.popConfig.btnStyle
                                                    }
                                                }, shown: function () {
                                                    return !("add_desktop" !== this.popConfig.configBaseFormData.function_type)
                                                }, events: {"event-watch": "addButtonClickHandler"}
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {
                                                show: function () {
                                                    return this.popConfig.negStyle.isShow
                                                }
                                            },
                                            classList: ["cancel_btn"],
                                            events: {click: "negClick"},
                                            style: {
                                                justifyContent: "center",
                                                alignItems: "center",
                                                width: function () {
                                                    return this.popConfig.negStyle.width + "px"
                                                },
                                                height: function () {
                                                    return this.popConfig.negStyle.height + "px"
                                                },
                                                borderRadius: function () {
                                                    return this.popConfig.negStyle.radio + "px"
                                                },
                                                position: "absolute",
                                                left: function () {
                                                    return this.popConfig.negStyle.left + "px"
                                                },
                                                top: function () {
                                                    return this.popConfig.negStyle.top + "px"
                                                },
                                                backgroundImage: function () {
                                                    return this.popConfig.negStyle.icon
                                                },
                                                backgroundSize: "cover",
                                                backgroundRepeat: "no-repeat",
                                                backgroundPosition: "center center",
                                                marginTop: function () {
                                                    return this.popConfig.customBoxStyle.style.height
                                                }
                                            },
                                            children: [{
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.popConfig.negStyle.text
                                                    }
                                                }, style: {
                                                    fontSize: function () {
                                                        return this.popConfig.negStyle.font + "px"
                                                    }, color: function () {
                                                        return this.popConfig.negStyle.color
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div", attr: {}, shown: function () {
                                                return this.popConfig.customTextStyle.canShow
                                            }, style: function () {
                                                return this.popConfig.customTextStyle.style
                                            }, children: [{
                                                type: "text", attr: {
                                                    id: function () {
                                                        return "@" == this.item.text ? "anTran" : ""
                                                    }, value: function () {
                                                        return "@" != this.item.text ? this.item.text : this.changeable
                                                    }
                                                }, repeat: {
                                                    exp: function () {
                                                        return this.popConfig.customTextStyle.text
                                                    }, value: "item"
                                                }, style: function () {
                                                    return this.item.style
                                                }, id: function () {
                                                    return "@" == this.item.text ? "anTran" : ""
                                                }, classList: function () {
                                                    return ["@" == this.item.text ? this.transAn : ""]
                                                }
                                            }]
                                        }]
                                    }, {
                                        type: "image", attr: {
                                            show: function () {
                                                return this.popConfig.closeStyle.isShow && 2 == this.popConfig.closeStyle.position
                                            }, src: function () {
                                                return this.popConfig.closeStyle.image
                                            }
                                        }, style: {
                                            width: function () {
                                                return this.popConfig.closeStyle.width * this.popConfig.commonStyle.scale + "px"
                                            }, height: function () {
                                                return this.popConfig.closeStyle.height * this.popConfig.commonStyle.scale + "px"
                                            }, marginTop: function () {
                                                return this.popConfig.closeStyle.distance * this.popConfig.commonStyle.scale + "px"
                                            }, opacity: function () {
                                                return this.popConfig.closeStyle.opacity
                                            }, objectFit: "fill"
                                        }, events: {click: "closeClick"}
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 3082: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["common-back-header-wrapper"],
                            style: {
                                backgroundColor: function () {
                                    return this.backgroudColor
                                }
                            },
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["common-back-header"],
                                style: {
                                    paddingTop: function () {
                                        return this.deviceInfo.statusBarHeight + "px"
                                    }, height: function () {
                                        return this.deviceInfo.statusBarHeight + 88 + "px"
                                    }
                                },
                                children: [{
                                    type: "div",
                                    attr: {},
                                    events: {click: "backClick"},
                                    classList: ["common-back-icon-qd"],
                                    children: [{type: "image", attr: {src: "/assets/star-detail/back-icon.png"}}]
                                }, {
                                    type: "div", attr: {}, children: [{
                                        type: "text", attr: {
                                            value: function () {
                                                return this.title
                                            }
                                        }, classList: ["common-title"], style: {
                                            color: function () {
                                                return this.textColor
                                            }, fontSize: function () {
                                                return this.fontSize + "px"
                                            }, fontWeight: function () {
                                                return this.textWeight
                                            }, textAlign: function () {
                                                return this.textCenter ? "center" : "left"
                                            }
                                        }
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 1401: t => {
                    t.exports = {
                        type: "div", attr: {}, classList: ["member-box"], style: {
                            bottom: function () {
                                return "large" == this.size ? "38px" : "18px"
                            }, right: function () {
                                return "large" == this.size ? "30px" : "5px"
                            }, justifyContent: function () {
                                return "large" == this.size ? "flex-end" : "space-between"
                            }
                        }, children: [{
                            type: "div", attr: {}, classList: ["head-box"], style: {
                                width: function () {
                                    return "large" == this.size ? "200px" : "120px"
                                }
                            }, children: [{
                                type: "image", attr: {
                                    src: function () {
                                        return this.item.headImg
                                    }
                                }, repeat: {
                                    exp: function () {
                                        return this.marqueeList
                                    }, key: "index", value: "item"
                                }, style: {
                                    right: function () {
                                        return 30 * this.index + 10 + "px"
                                    }
                                }
                            }]
                        }, {
                            type: "text", attr: {
                                value: function () {
                                    return this.nums + "人测过"
                                }
                            }, style: {
                                marginRight: function () {
                                    return "large" == this.size ? "20px" : "25px"
                                }, marginLeft: function () {
                                    return "large" == this.size ? "15px" : "5px"
                                }, color: function () {
                                    return this.textColor
                                }
                            }
                        }]
                    }
                }, 1759: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["common-back-header-wrapper"],
                            style: {
                                backgroundColor: function () {
                                    return this.backgroudColor
                                }
                            },
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["common-back-header"],
                                style: {
                                    paddingTop: function () {
                                        return this.deviceInfo.statusBarHeight + "px"
                                    }, height: function () {
                                        return this.deviceInfo.statusBarHeight + 88 + "px"
                                    }
                                },
                                children: [{
                                    type: "div",
                                    attr: {},
                                    events: {click: "backClick"},
                                    classList: ["common-back"],
                                    children: [{type: "image", attr: {src: "/assets/common/back-icon.png"}}]
                                }, {
                                    type: "text", attr: {
                                        value: function () {
                                            return this.title
                                        }
                                    }, classList: ["title"]
                                }]
                            }]
                        }]
                    }
                }, 9978: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["store-wrapper"],
                        children: [{
                            type: "div", attr: {}, shown: function () {
                                return this.title
                            }, classList: ["main-common-header"], style: {
                                paddingTop: function () {
                                    return this.deviceInfo.statusBarHeight + "px"
                                }, height: function () {
                                    return this.deviceInfo.statusBarHeight + 88 + "px"
                                }
                            }, children: [{
                                type: "text", attr: {
                                    value: function () {
                                        return this.title
                                    }
                                }, classList: ["main-common-name"]
                            }]
                        }, {
                            type: "div", attr: {}, shown: function () {
                                return !this.title
                            }, classList: ["main-common-header"], style: {
                                paddingTop: function () {
                                    return this.deviceInfo.statusBarHeight + "px"
                                }, height: function () {
                                    return this.deviceInfo.statusBarHeight + "px"
                                }
                            }
                        }]
                    }
                }, 8031: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["prompt-pop-modal"],
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["prompt-pop"],
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["content"],
                                children: [{
                                    type: "text",
                                    attr: {value: "温馨提示"},
                                    classList: ["prompt-title"]
                                }, {
                                    type: "text",
                                    attr: {},
                                    classList: ["prompt-cxt"],
                                    children: [{
                                        type: "span",
                                        attr: {value: " 是否要注销账号？"},
                                        classList: ["text"],
                                        shown: function () {
                                            return 1 == this.typeShow
                                        }
                                    }, {
                                        type: "span",
                                        attr: {value: " 是否要退出账号？"},
                                        classList: ["text"],
                                        shown: function () {
                                            return 2 == this.typeShow
                                        }
                                    }]
                                }, {
                                    type: "text",
                                    attr: {value: "确认"},
                                    classList: ["prompt-btn"],
                                    events: {click: "handle"}
                                }, {
                                    type: "text",
                                    attr: {value: "取消"},
                                    classList: ["prompt-not"],
                                    events: {click: "notHandle"}
                                }]
                            }]
                        }]
                    }
                }, 9966: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["knowledge"],
                        children: [{
                            type: "div", attr: {}, classList: ["top_box", "cardbox"], shown: function () {
                                return this.topData.length > 0
                            }, children: [{
                                type: "text", attr: {
                                    value: function () {
                                        return this.topData[0].subtitle
                                    }
                                }, classList: ["title"]
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return this.topData[0].notes
                                    }
                                }, classList: ["title_small"]
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["item_box"],
                                children: [{
                                    type: "div",
                                    attr: {tid: "item.id"},
                                    events: {
                                        click: function (t) {
                                            return this.goAssessPage(this.item, t)
                                        }
                                    },
                                    repeat: {
                                        exp: function () {
                                            return this.topData
                                        }, value: "item"
                                    },
                                    classList: ["small_item_box"],
                                    children: [{
                                        type: "image", attr: {
                                            src: function () {
                                                return this.item.background
                                            }, alt: ""
                                        }, classList: ["backgroundImg"]
                                    }, {
                                        type: "image",
                                        attr: {src: "/assets/home/mask.png"},
                                        classList: ["mask"]
                                    }, {
                                        type: "text", attr: {
                                            value: function () {
                                                return this.item.view + "人闯关"
                                            }
                                        }, classList: ["num"]
                                    }, {
                                        type: "text", attr: {
                                            value: function () {
                                                return this.item.title
                                            }
                                        }, classList: ["tit"]
                                    }]
                                }]
                            }]
                        }, {
                            type: "div", attr: {}, classList: ["bottom_box", "cardbox"], shown: function () {
                                return this.centerData.length > 0
                            }, children: [{
                                type: "text", attr: {
                                    value: function () {
                                        return this.centerData[0].subtitle
                                    }
                                }, classList: ["title"]
                            }, {
                                type: "text", attr: {
                                    value: function () {
                                        return this.centerData[0].notes
                                    }
                                }, classList: ["title_small"]
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["item_box_top"],
                                children: [{
                                    type: "div",
                                    attr: {},
                                    classList: ["big_item"],
                                    events: {
                                        click: function (t) {
                                            return this.goAssessPage(this.centerData[0], t)
                                        }
                                    },
                                    children: [{
                                        type: "image", attr: {
                                            src: function () {
                                                return this.centerData[0].background
                                            }, alt: ""
                                        }, classList: ["backgroundImg"]
                                    }, {
                                        type: "image",
                                        attr: {src: "/assets/home/mask.png"},
                                        classList: ["mask"]
                                    }, {
                                        type: "text", attr: {
                                            value: function () {
                                                return this.centerData[0].view + "人闯关"
                                            }
                                        }, classList: ["num"]
                                    }, {
                                        type: "text", attr: {
                                            value: function () {
                                                return this.centerData[0].title
                                            }
                                        }, classList: ["tit"]
                                    }]
                                }, {
                                    type: "div",
                                    attr: {},
                                    classList: ["small_item"],
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["small_item_box"],
                                        events: {
                                            click: function (t) {
                                                return this.goAssessPage(this.centerData[1], t)
                                            }
                                        },
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.centerData[1].background
                                                }, alt: ""
                                            }, classList: ["backgroundImg"]
                                        }, {type: "text", attr: {}, classList: ["num"]}, {
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return this.centerData[1].title
                                                }
                                            },
                                            classList: ["tit"]
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["small_item_box"],
                                        events: {
                                            click: function (t) {
                                                return this.goAssessPage(this.centerData[2], t)
                                            }
                                        },
                                        children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return this.centerData[2].background
                                                }, alt: ""
                                            }, classList: ["backgroundImg"]
                                        }, {type: "text", attr: {}, classList: ["num"]}, {
                                            type: "text",
                                            attr: {
                                                value: function () {
                                                    return this.centerData[2].title
                                                }
                                            },
                                            classList: ["tit"]
                                        }]
                                    }]
                                }]
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["item_box_bottom"],
                                shown: function () {
                                    return this.bottomData.length > 0
                                },
                                children: [{
                                    type: "div",
                                    attr: {tid: "item.id"},
                                    classList: ["small_item_box"],
                                    repeat: {
                                        exp: function () {
                                            return this.bottomData
                                        }, value: "item"
                                    },
                                    events: {
                                        click: function (t) {
                                            return this.goAssessPage(this.item, t)
                                        }
                                    },
                                    children: [{
                                        type: "image", attr: {
                                            src: function () {
                                                return this.item.background
                                            }
                                        }, classList: ["backgroundImg"]
                                    }, {type: "text", attr: {}, classList: ["num"]}, {
                                        type: "text",
                                        attr: {
                                            value: function () {
                                                return this.item.title
                                            }
                                        },
                                        classList: ["tit"]
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 9996: t => {
                    t.exports = {
                        type: "stack", attr: {id: "fStack"}, id: "fStack", children: [{
                            type: "div", attr: {}, classList: ["main-box"], children: [{
                                type: "tabs", attr: {
                                    mode: "scrollable", index: function () {
                                        return this.tabIndex
                                    }
                                }, events: {change: "changeTabs"}, children: [{
                                    type: "tab-content", attr: {}, children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["home-box"],
                                        children: [{type: "div", attr: {}, classList: ["header-box"]}, {
                                            type: "div",
                                            attr: {},
                                            classList: function () {
                                                return [this.enterShow && this.speedShow ? "" : this.enterShow ? "new-top-box" : "", "top-box"]
                                            },
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                classList: ["today-box"],
                                                events: {click: "goAstroDetail"},
                                                shown: function () {
                                                    return this.enterShow
                                                },
                                                children: [{
                                                    type: "text",
                                                    attr: {value: "今日星座"},
                                                    classList: ["title"]
                                                }, {
                                                    type: "div", attr: {}, classList: ["content"], shown: function () {
                                                        return this.astroList.length
                                                    }, children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.astroList[this.nowAstroIndex].name
                                                            }
                                                        }
                                                    }, {
                                                        type: "image", attr: {
                                                            src: function () {
                                                                return this.astroList[this.nowAstroIndex].icon
                                                            }
                                                        }
                                                    }]
                                                }, {type: "text", attr: {value: "查看详情"}, classList: ["footer"]}]
                                            }, {
                                                type: "div",
                                                attr: {},
                                                classList: function () {
                                                    return [this.enterShow && this.speedShow ? "" : "new-right-box", "right-box"]
                                                },
                                                children: [{
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["cp-box"],
                                                    events: {click: "goCpDetail"},
                                                    shown: function () {
                                                        return this.speedShow
                                                    },
                                                    children: [{
                                                        type: "text",
                                                        attr: {value: "星座速配"},
                                                        classList: ["title"]
                                                    }, {
                                                        type: "text",
                                                        attr: {value: "看看与你匹配的星座"},
                                                        classList: ["title2"]
                                                    }]
                                                }, {
                                                    type: "div",
                                                    attr: {},
                                                    classList: ["assess-box-top"],
                                                    repeat: {
                                                        exp: function () {
                                                            return this.topAssess
                                                        }, key: "idx", value: "item"
                                                    },
                                                    events: {
                                                        click: function (t) {
                                                            return this.goAssessPage(this.item.id, this.item.title, t)
                                                        }
                                                    },
                                                    children: [{
                                                        type: "text", attr: {
                                                            value: function () {
                                                                return this.item.title
                                                            }
                                                        }, classList: ["title2"]
                                                    }]
                                                }]
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: ["assess-box"],
                                            repeat: {
                                                exp: function () {
                                                    return this.secondAssess
                                                }, key: "idx", value: "item"
                                            },
                                            events: {
                                                click: function (t) {
                                                    return this.goAssessPage(this.item.id, this.item.title, t)
                                                }
                                            },
                                            children: [{
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.item.title
                                                    }
                                                }, classList: ["title2"]
                                            }, {
                                                type: "assess-member", attr: {
                                                    size: "large", nums: function () {
                                                        return this.item.view
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "div",
                                            attr: {},
                                            classList: ["assess-box-small"],
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                classList: ["small-box"],
                                                repeat: {
                                                    exp: function () {
                                                        return this.smallAssess
                                                    }, key: "idx", value: "item"
                                                },
                                                events: {
                                                    click: function (t) {
                                                        return this.goAssessPage(this.item.id, this.item.title, t)
                                                    }
                                                },
                                                children: [{
                                                    type: "text", attr: {
                                                        value: function () {
                                                            return this.item.title
                                                        }
                                                    }, classList: ["title2"]
                                                }, {
                                                    type: "assess-member", attr: {
                                                        size: "small", nums: function () {
                                                            return this.item.view
                                                        }, textColor: "#44A1F6"
                                                    }
                                                }]
                                            }]
                                        }, {
                                            type: "div", attr: {}, classList: function () {
                                                return ["native-boost-group", 2 == this.isShowBoostAd ? "boots-show" : "boots-hide"]
                                            }, shown: function () {
                                                return this.isShowBoostComp
                                            }, children: [{
                                                type: "native-boost-group", attr: {
                                                    getBoost: function () {
                                                        return this.nativeBoostGroupController.getBoost
                                                    }, backPressTimes: function () {
                                                        return this.nativeBoostGroupController.backPressTimes
                                                    }, popCode: function () {
                                                        return this.nativeBoostGroupController.popCode
                                                    }, loopTimes: function () {
                                                        return this.nativeBoostGroupController.loopTimes
                                                    }, isAuditUser: function () {
                                                        return this.nativeBoostGroupController.isAuditUser
                                                    }, isBoostType: function () {
                                                        return this.nativeBoostGroupController.isBoostType
                                                    }, actionCode: function () {
                                                        return this.nativeBoostGroupController.actionCode
                                                    }, isFullScreen: function () {
                                                        return this.nativeBoostGroupController.isFullScreen
                                                    }, pageCode: function () {
                                                        return this.pageDetail.pageCode
                                                    }, pageName: function () {
                                                        return this.pageDetail.pageName
                                                    }, maxAdCount: function () {
                                                        return this.nativeBoostGroupController.maxAdCount
                                                    }, customAction: function () {
                                                        return this.nativeBoostGroupController.customAction
                                                    }
                                                }, shown: function () {
                                                    return this.isShowNativeBoostGroupComp
                                                }, events: {"event-watch": "nativeBoostGroupEventDispatchHandler"}
                                            }]
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["knowledge-box"],
                                        children: [{
                                            type: "knowledge", attr: {
                                                tabIndex: function () {
                                                    return this.tabIndex
                                                }, refershUser: function () {
                                                    return this.refershUser
                                                }
                                            }
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["my-box"],
                                        children: [{
                                            type: "my", attr: {
                                                tabIndex: function () {
                                                    return this.tabIndex
                                                }, refershUser: function () {
                                                    return this.refershUser
                                                }
                                            }
                                        }]
                                    }]
                                }, {
                                    type: "tab-bar",
                                    attr: {},
                                    classList: ["footer-container"],
                                    children: [{
                                        type: "div", attr: {}, classList: ["tab-item"], repeat: function () {
                                            return this.tabItemList
                                        }, children: [{
                                            type: "image", attr: {
                                                src: function () {
                                                    return "/assets/home/tabs-" + this.$idx + "-" + (this.tabIndex == this.$idx ? "select" : "normal") + ".png"
                                                }
                                            }, classList: function () {
                                                return ["tab-icon", "tab-icon-" + this.$idx]
                                            }
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return this.tabList[this.$idx]
                                                }
                                            }, classList: function () {
                                                return ["tab-title", "tab-title-" + this.$idx, this.tabIndex == this.$idx ? "change-tab-color" : ""]
                                            }
                                        }]
                                    }]
                                }]
                            }, {
                                type: "image",
                                attr: {
                                    src: function () {
                                        return this.complaintIcon
                                    }
                                },
                                shown: function () {
                                    return this.complaintShow
                                },
                                style: {
                                    width: "115px",
                                    height: "115px",
                                    position: "fixed",
                                    objectFit: "contain",
                                    top: function () {
                                        return this.complaintTop + "px"
                                    },
                                    left: function () {
                                        return this.complaintLeft + "px"
                                    }
                                },
                                events: {click: "showComplaintClick"}
                            }, {
                                type: "complaint-pop",
                                attr: {},
                                shown: function () {
                                    return this.isShowComplaintPop
                                },
                                events: {
                                    "cancel-click": "complaintPopCancelClickHandler",
                                    "sure-click": "complaintPopSureClickHandler"
                                }
                            }]
                        }]
                    }
                }, 8285: t => {
                    t.exports = {
                        type: "div",
                        attr: {},
                        classList: ["my-wrapper"],
                        children: [{
                            type: "div",
                            attr: {},
                            classList: ["title-header"],
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["left-cxt"],
                                events: {click: "goLogin"},
                                children: [{
                                    type: "image", attr: {
                                        src: function () {
                                            return this.profileIcon
                                        }
                                    }, classList: ["default"]
                                }]
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["right-cxt"],
                                events: {click: "goLogin"},
                                children: [{
                                    type: "text", attr: {
                                        value: function () {
                                            return this.isLogin ? `${this.userInfo.phone}` : "欢迎登录"
                                        }
                                    }, classList: ["login-welcome"]
                                }, {
                                    type: "text", attr: {
                                        value: function () {
                                            return this.isLogin ? `ID:${this.userInfo.id}` : "未登录账户可能造成数据丢失哦"
                                        }
                                    }, classList: ["login-tips"]
                                }]
                            }]
                        }, {
                            type: "div",
                            attr: {},
                            classList: ["welfare"],
                            shown: function () {
                                return this.isShowFuli
                            },
                            events: {click: "goRevice"},
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["welfare-left"],
                                children: [{
                                    type: "text",
                                    attr: {value: "福利中心"},
                                    classList: ["welfare-text"]
                                }, {type: "text", attr: {value: "最高领取10元现金！"}, classList: ["welfare-text1"]}]
                            }, {
                                type: "div",
                                attr: {},
                                classList: ["get-info"],
                                children: [{type: "text", attr: {value: "领取"}, classList: ["get-info-text"]}]
                            }]
                        }, {
                            type: "div",
                            attr: {},
                            classList: ["menu-cxt"],
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["menu-content"],
                                children: [{
                                    type: "div",
                                    attr: {tid: "item.id"},
                                    classList: ["menu-cxt-item"],
                                    repeat: {
                                        exp: function () {
                                            return this.items
                                        }, value: "item"
                                    },
                                    children: [{
                                        type: "div",
                                        attr: {},
                                        classList: ["menu-cxt-item"],
                                        style: {width: "630px"},
                                        shown: function () {
                                            return this.item.isShow
                                        },
                                        events: {
                                            click: function (t) {
                                                return this.goPage(this.item, t)
                                            }
                                        },
                                        children: [{
                                            type: "div",
                                            attr: {},
                                            classList: ["left-box"],
                                            children: [{
                                                type: "div",
                                                attr: {},
                                                children: [{
                                                    type: "image", attr: {
                                                        src: function () {
                                                            return this.item.icon
                                                        }
                                                    }, style: {
                                                        width: function () {
                                                            return this.item.width
                                                        }, height: function () {
                                                            return this.item.height
                                                        }
                                                    }
                                                }]
                                            }, {
                                                type: "text", attr: {
                                                    value: function () {
                                                        return this.item.name
                                                    }
                                                }
                                            }]
                                        }, {
                                            type: "image",
                                            attr: {src: "/assets/my/right-arrow.png"},
                                            classList: ["arrow"]
                                        }]
                                    }]
                                }]
                            }]
                        }, {
                            type: "div",
                            attr: {},
                            classList: ["filing-text"],
                            children: [{
                                type: "a",
                                attr: {href: "https://beian.miit.gov.cn/", value: "鄂ICP备2023003874号-7K"}
                            }]
                        }, {
                            type: "div",
                            attr: {},
                            classList: ["dialog"],
                            shown: function () {
                                return this.writeOffShow
                            },
                            children: [{
                                type: "div",
                                attr: {},
                                classList: ["dialog-pop"],
                                children: [{
                                    type: "div",
                                    attr: {},
                                    classList: ["content"],
                                    children: [{
                                        type: "text",
                                        attr: {value: "温馨提示"},
                                        classList: ["title"]
                                    }, {
                                        type: "text",
                                        attr: {},
                                        classList: ["desc"],
                                        children: [{
                                            type: "span",
                                            attr: {value: " 是否要注销账号？"},
                                            classList: ["text"],
                                            shown: function () {
                                                return 1 == this.typeShow
                                            }
                                        }, {
                                            type: "span",
                                            attr: {value: " 是否要退出账号？"},
                                            classList: ["text"],
                                            shown: function () {
                                                return 2 == this.typeShow
                                            }
                                        }]
                                    }, {
                                        type: "div",
                                        attr: {},
                                        classList: ["dialog-btn"],
                                        children: [{
                                            type: "text",
                                            attr: {value: "取消"},
                                            classList: ["dialog-cancel"],
                                            events: {click: "disagreeHandle"}
                                        }, {
                                            type: "text", attr: {
                                                value: function () {
                                                    return 1 == this.typeShow ? "确认注销" : "确认退出"
                                                }
                                            }, classList: ["dialog-confirm"], events: {click: "agreeHandle"}
                                        }]
                                    }]
                                }]
                            }]
                        }]
                    }
                }, 336: (t, e, i) => {
                    var o = i(4996);
                    $app_define$("@app-component/skip-circle", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(5230)
                    }))
                }, 8913: (t, e, i) => {
                    var o = i(5813);
                    $app_define$("@app-component/close-btn", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(93)
                    }))
                }, 519: (t, e, i) => {
                    i(519), i(4093), i(8913), i(336);
                    var o = i(3241), n = i(1063);
                    $app_define$("@app-component/union-custom", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(7891), a.exports.style = o
                    }))
                }, 4337: (t, e, i) => {
                    var o = i(2121), n = i(4845);
                    $app_define$("@app-component/download-panel", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(1325), a.exports.style = o
                    }))
                }, 2871: (t, e, i) => {
                    i(519);
                    var o = i(3960), n = i(4936);
                    $app_define$("@app-component/native-ad", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(2681), a.exports.style = o
                    }))
                }, 8776: (t, e, i) => {
                    i(519);
                    var o = i(9237), n = i(1194);
                    $app_define$("@app-component/int-ad", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(2104), a.exports.style = o
                    }))
                }, 4093: (t, e, i) => {
                    var o = i(4028);
                    $app_define$("@app-component/ad-logo", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(6754)
                    }))
                }, 5916: (t, e, i) => {
                    i(2871), i(3425), i(8776), i(3797), i(4337);
                    var o = i(821);
                    $app_define$("@app-component/mobads-ad", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(9669)
                    }))
                }, 3425: (t, e, i) => {
                    i(4093), i(336);
                    var o = i(4419), n = i(3984);
                    $app_define$("@app-component/open-ad", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(9574), a.exports.style = o
                    }))
                }, 3797: (t, e, i) => {
                    i(519);
                    var o = i(4995), n = i(1424);
                    $app_define$("@app-component/reward-ad", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(6245), a.exports.style = o
                    }))
                }, 8432: (t, e, i) => {
                    var o = i(4410);
                    $app_define$("@app-component/ylh-ad", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(5515)
                    }))
                }, 2659: (t, e, i) => {
                    var o = i(9835);
                    $app_define$("@app-component/ylh-ad-clickable-area", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(1770)
                    }))
                }, 541: (t, e, i) => {
                    var o = i(9677), n = i(8744);
                    $app_define$("@app-component/ad-count-down", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(4652), a.exports.style = o
                    }))
                }, 783: (t, e, i) => {
                    var o = i(8136), n = i(298);
                    $app_define$("@app-component/add-desktop-button", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(9474), a.exports.style = o
                    }))
                }, 3732: (t, e, i) => {
                    var o = i(1873), n = i(3720);
                    $app_define$("@app-component/app-ad-view", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(1669), a.exports.style = o
                    }))
                }, 118: (t, e, i) => {
                    var o = i(1489), n = i(5197);
                    $app_define$("@app-component/app-info", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(6478), a.exports.style = o
                    }))
                }, 9936: (t, e, i) => {
                    i(5916), i(541);
                    var o = i(1379), n = i(8976);
                    $app_define$("@app-component/bqt-ad-view", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(3671), a.exports.style = o
                    }))
                }, 5441: (t, e, i) => {
                    i(5916);
                    var o = i(4353);
                    $app_define$("@app-component/bqt-insert-view", [], (function (t, e, n) {
                        o(n, e, t), e.__esModule && e.default && (n.exports = e.default), n.exports.template = i(658)
                    }))
                }, 3678: (t, e, i) => {
                    i(9936), i(5770), i(3732);
                    var o = i(4090), n = i(6057);
                    $app_define$("@app-component/bqt-video-ad-controller", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(2662), a.exports.style = o
                    }))
                }, 3428: (t, e, i) => {
                    i(5860);
                    var o = i(8105), n = i(8438);
                    $app_define$("@app-component/close-ad-pop", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(1257), a.exports.style = o
                    }))
                }, 3791: (t, e, i) => {
                    var o = i(7112), n = i(730);
                    $app_define$("@app-component/complaint-last-pop", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(9294), a.exports.style = o
                    }))
                }, 5860: (t, e, i) => {
                    var o = i(3116), n = i(4327);
                    $app_define$("@app-component/complaint-pop", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(6670), a.exports.style = o
                    }))
                }, 6135: (t, e, i) => {
                    var o = i(4328), n = i(75);
                    $app_define$("@app-component/lottie-image", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(1022), a.exports.style = o
                    }))
                }, 5102: (t, e, i) => {
                    var o = i(230), n = i(317);
                    $app_define$("@app-component/marquee-list", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(164), a.exports.style = o
                    }))
                }, 5100: (t, e, i) => {
                    i(8654);
                    var o = i(5893), n = i(6453);
                    $app_define$("@app-component/exposure-pool", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(429), a.exports.style = o
                    }))
                }, 3853: (t, e, i) => {
                    i(8654), i(3174), i(5100);
                    var o = i(2128), n = i(7804);
                    $app_define$("@app-component/native-boost-group", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(4596), a.exports.style = o
                    }))
                }, 8654: (t, e, i) => {
                    i(6135), i(3428), i(9910), i(9536), i(5102), i(118), i(3791), i(7649);
                    var o = i(2801), n = i(8184);
                    $app_define$("@app-component/native-boost", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(5700), a.exports.style = o
                    }))
                }, 9910: (t, e, i) => {
                    var o = i(886), n = i(567);
                    $app_define$("@app-component/xm2", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(3629), a.exports.style = o
                    }))
                }, 9536: (t, e, i) => {
                    var o = i(3066), n = i(9009);
                    $app_define$("@app-component/xm-temp", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(6529), a.exports.style = o
                    }))
                }, 7649: (t, e, i) => {
                    i(8432), i(2659);
                    var o = i(1577), n = i(6820);
                    $app_define$("@app-component/ylh-ad-native", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(5716), a.exports.style = o
                    }))
                }, 4290: (t, e, i) => {
                    i(5441);
                    var o = i(8604), n = i(9744);
                    $app_define$("@app-component/screen-insert-controller", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(9455), a.exports.style = o
                    }))
                }, 3174: (t, e, i) => {
                    var o = i(4500), n = i(4173);
                    $app_define$("@app-component/skeleton-pop", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(424), a.exports.style = o
                    }))
                }, 5770: (t, e, i) => {
                    i(783);
                    var o = i(353), n = i(8196);
                    $app_define$("@app-component/video-ad-view", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(8464), a.exports.style = o
                    }))
                }, 4457: (t, e, i) => {
                    var o = i(3273), n = i(5539);
                    $app_define$("@app-component/common-header", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(3082), a.exports.style = o
                    }))
                }, 742: (t, e, i) => {
                    var o = i(5998), n = i(8126);
                    $app_define$("@app-component/assess-member", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(1401), a.exports.style = o
                    }))
                }, 4883: (t, e, i) => {
                    var o = i(6883), n = i(9551);
                    $app_define$("@app-component/back", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(1759), a.exports.style = o
                    }))
                }, 903: (t, e, i) => {
                    i(4883);
                    var o = i(7396), n = i(167);
                    $app_define$("@app-component/header", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(9978), a.exports.style = o
                    }))
                }, 1137: (t, e, i) => {
                    var o = i(7425), n = i(6271);
                    $app_define$("@app-component/writeoffmodal", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(8031), a.exports.style = o
                    }))
                }, 2230: (t, e, i) => {
                    var o = i(7324), n = i(1582);
                    $app_define$("@app-component/knowledge", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(9966), a.exports.style = o
                    }))
                }, 5288: (t, e, i) => {
                    i(1137);
                    var o = i(3185), n = i(6751);
                    $app_define$("@app-component/my", [], (function (t, e, a) {
                        n(a, e, t), e.__esModule && e.default && (a.exports = e.default), a.exports.template = i(8285), a.exports.style = o
                    }))
                }, 4078: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {value: !0}), e.validateAdstyle = e.dispatchAdEvent = e.defineAdComponent = void 0;
                    const i = function (t, e) {
                        try {
                            this.isAdDestroyed || this.adEvent && this.adEvent[t] && this.adEvent[t].call(this, e)
                        } catch (t) {
                        }
                    };
                    e.validateAdstyle = function (t) {
                        var e,
                            i = ["containerStyle", "titleStyle", "imgStyle", "buttonStyle", "iconStyle", "descStyle", "brandStyle", "closeBtnStyle", "downloadStyle", "downloadBrandStyle", "downloadIconStyle", "downloadButtonStyle", "downloadTextStyle", "openAdBtnStyle"];
                        let o = !1;
                        for (e in t = JSON.parse(JSON.stringify(t))) ~i.indexOf(e) || (console.log(`百度网盟广告组件adStyle属性：${e}校验不通过，仅支持以下自定义样式属性:` + [...i]), o = !0);
                        return !o
                    }, e.defineAdComponent = function (t) {
                        try {
                            this.adTimer && clearInterval(this.adTimer);
                            let e = setInterval((() => {
                                if (this.isAdDestroyed || !this.$app) clearInterval(e); else if (this.$app && this.$app.$def && this.$app.$def.union_quick_app_sdk && this.$app.$def.union_quick_app_sdk.components) {
                                    clearInterval(e);
                                    let o = this.$app.$def.union_quick_app_sdk.components[t];
                                    o && (Object.keys(o).forEach((t => {
                                        this[t] = o[t]
                                    })), i.call(this, "onInit"))
                                }
                            }), 10);
                            this.adTimer = e
                        } catch (t) {
                        }
                    }, e.dispatchAdEvent = i
                }, 5667: (t, e) => {
                    "use strict";

                    function i(t, e) {
                        try {
                            var i, o;
                            if (this.isAdDestroyed) return;
                            this.lifetimes && null !== (i = this.lifetimes) && void 0 !== i && i[t] ? this.lifetimes[t].call(this, e) : this.events && null !== (o = this.events) && void 0 !== o && o[t] && this.events[t].call(this, e)
                        } catch (i) {
                            console.warn("dispatchAdEvent error: ", t, i.message, e)
                        }
                    }

                    function o(t, e) {
                        if (this.$app) {
                            var o, n, a;
                            const s = null === (o = this.$app.$def) || void 0 === o || null === (n = o.ylh_sdk) || void 0 === n || null === (a = n.components) || void 0 === a ? void 0 : a[t];
                            s && (Object.keys(s).forEach((t => {
                                this[t] = s[t]
                            })), i.call(this, "onInit", t), this.onYlhAdSceneReady && this.onYlhAdSceneReady.call(this, 200), e && clearInterval(e))
                        }
                    }

                    function n(t) {
                        try {
                            var e, i, n;
                            if (this.adTimer && clearInterval(this.adTimer), null !== (e = this.$app) && void 0 !== e && null !== (i = e.$def) && void 0 !== i && null !== (n = i.ylh_sdk) && void 0 !== n && n.components) o.call(this, t, void 0); else {
                                let e = 0;
                                const i = setInterval((() => {
                                    e > 5e3 && clearInterval(i), o.call(this, t, i), e += 10
                                }), 10)
                            }
                        } catch (t) {
                            console.error(t.message), this.onYLHSDKError && this.onYLHSDKError(t.message)
                        }
                    }

                    Object.defineProperty(e, "__esModule", {value: !0}), e.defineAdComponent = n, e.defineAdScene = function (t) {
                        n.call(this, t)
                    }, e.dispatchAdEvent = i, e.initYLHSDK = function (t) {
                        var e;
                        null !== (e = t.$def) && void 0 !== e && e.ylh_sdk || (t.$def.ylh_sdk = {
                            onYlhReady(e) {
                                const {onYlhReadyCallback: i = []} = t.$def.ylh_sdk;
                                if ("function" != typeof e) console.warn("onYlhReady: then回调必须传递一个方法"); else {
                                    if (t.$def.ylh_sdk.SDK_CORE_READY) return e();
                                    t.$def.ylh_sdk.onYlhReadyCallback = [...i, e]
                                }
                            }
                        })
                    }
                }, 4415: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                    var o = a($app_require$("@app-module/system.fetch")), n = a(i(9121));

                    function a(t) {
                        return t && t.__esModule ? t : {default: t}
                    }

                    function s(t, e) {
                        console.log("请求信息", JSON.stringify(t)), console.log("请求信息page_name==>", e);
                        let i = t.url.split("?")[0];
                        return i || (i = t.url), console.log("请求接口前缀", i), new Promise(((e, a) => {
                            n.default.getStorage("token").then((s => {
                                let r = (new Date).getTime();
                                o.default.fetch({
                                    url: t.url,
                                    method: t.method,
                                    data: JSON.stringify(t.data),
                                    header: {authorization: "Bearer " + s}
                                }).then((t => {
                                    try {
                                        COMMON_REPORT_UTILS.error_log_report(`${i}`, `${t.data.code}`, "" + ((new Date).getTime() - r), "请求成功")
                                    } catch (t) {
                                    }
                                    if ((new Date).getTime() - r > 1e3) try {
                                        COMMON_REPORT_UTILS.error_log_report(`${i}`, "响应超过1000ms上报", "接口请求", "响应超时")
                                    } catch (t) {
                                    }
                                    if (t.data.code < 500) {
                                        console.log("🐛 response:", JSON.parse(t.data.data));
                                        let o = JSON.parse(t.data.data);
                                        if (201 === o.tokenCode && n.default.setStorage("token", o.refreshToken), 404 == o.code) try {
                                            let e = JSON.stringify(t.data);
                                            COMMON_REPORT_UTILS.error_log_report(`${i}`, `${e.substring(0, 1024).trim()}`, "接口请求", "找不到接口")
                                        } catch (t) {
                                        }
                                        e(o)
                                    } else {
                                        try {
                                            let e = JSON.stringify(t.data);
                                            COMMON_REPORT_UTILS.error_log_report(`${i}`, `${e.substring(0, 1024).trim()}`, "接口请求", "内部错误")
                                        } catch (t) {
                                        }
                                        a(t.data)
                                    }
                                })).catch(((t, e) => {
                                    try {
                                        COMMON_REPORT_UTILS.error_log_report(`${i}`, `${t && t.code && t.code}`, "" + ((new Date).getTime() - r), "请求失败")
                                    } catch (t) {
                                    }
                                    try {
                                        if (t && t.code && 2001 == t.code) return
                                    } catch (t) {
                                    }
                                    try {
                                        let e = t.constructor == Object ? JSON.stringify(t) : `${t}`;
                                        COMMON_REPORT_UTILS.error_log_report(`${i}`, `${e.substring(0, 1024).trim()}`, "接口请求", "响应超时")
                                    } catch (t) {
                                    }
                                    a(t)
                                }))
                            }))
                        }))
                    }

                    function r(t, e) {
                        try {
                            return Promise.race([s(t, e)])
                        } catch (t) {
                            console.log(t)
                        }
                    }

                    Promise.prototype.finally = function (t) {
                        const e = this.constructor;
                        return this.then((i => e.resolve(t()).then((() => i))), (i => e.resolve(t()).then((() => {
                            throw i
                        }))))
                    }, e.default = {
                        post: function (t, e, i) {
                            return r({method: "post", url: t, data: e}, i)
                        }, get: function (t, e, i) {
                            return r({method: "get", url: n.default.queryString(t, e)}, i)
                        }, put: function (t, e, i) {
                            return r({method: "put", url: t, data: e}, i)
                        }, delete: function (t, e, i) {
                            return r({method: "delete", url: t, data: e}, i)
                        }, getExternal: function (t, e, i) {
                            console.log("请求信息page_name==>", i);
                            const a = {method: "get", url: n.default.queryString(t, e)};
                            return new Promise(((t, e) => {
                                o.default.fetch({url: a.url, method: a.method}).then((i => {
                                    try {
                                        if (i.data.code < 500) {
                                            console.log("🐛 response:", JSON.parse(i.data.data));
                                            let e = JSON.parse(i.data.data);
                                            t(e)
                                        } else e(i.data)
                                    } catch (t) {
                                        e(t)
                                    }
                                })).catch((t => {
                                    e(t)
                                }))
                            }))
                        }, postExternal: function (t, e, i) {
                            console.log("请求信息page_name==>", i);
                            const n = {method: "post", url: t, data: e};
                            return new Promise(((t, e) => {
                                const i = setTimeout((() => {
                                    e()
                                }), 3e3);
                                o.default.fetch({
                                    url: n.url,
                                    method: n.method,
                                    data: JSON.stringify(n.data),
                                    header: {"Content-Type": "application/json; charset=UTF-8"}
                                }).then((o => {
                                    try {
                                        if (clearTimeout(i), o.data.code < 500) {
                                            console.log("🐛 response:", JSON.parse(o.data.data));
                                            let e = JSON.parse(o.data.data);
                                            t(e)
                                        } else e(o.data)
                                    } catch (t) {
                                        e(t)
                                    }
                                })).catch((t => {
                                    e(t)
                                }))
                            }))
                        }
                    }
                }, 9121: (t, e) => {
                    "use strict";

                    function i(t, e) {
                        var i = Object.keys(t);
                        if (Object.getOwnPropertySymbols) {
                            var o = Object.getOwnPropertySymbols(t);
                            e && (o = o.filter((function (e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable
                            }))), i.push.apply(i, o)
                        }
                        return i
                    }

                    function o(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var o = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? i(Object(o), !0).forEach((function (e) {
                                var i, n, a, s;
                                i = t, n = e, a = o[e], (n = "symbol" == typeof (s = function (t, e) {
                                    if ("object" != typeof t || !t) return t;
                                    var i = t[Symbol.toPrimitive];
                                    if (void 0 !== i) {
                                        var o = i.call(t, "string");
                                        if ("object" != typeof o) return o;
                                        throw new TypeError("@@toPrimitive must return a primitive value.")
                                    }
                                    return String(t)
                                }(n)) ? s : String(s)) in i ? Object.defineProperty(i, n, {
                                    value: a,
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0
                                }) : i[n] = a
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : i(Object(o)).forEach((function (e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(o, e))
                            }))
                        }
                        return t
                    }

                    Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0;
                    const n = $app_require$("@app-module/system.prompt"),
                        a = $app_require$("@app-module/system.storage"), s = $app_require$("@app-module/system.router"),
                        r = $app_require$("@app-module/system.fetch");

                    function p(t) {
                        var e = 0;
                        if (!t) return e;
                        for (var i = 0; i < t.length; i++) t[i] && (null != t[i].match(/[^\x00-\xff]/gi) ? e += 2 : e += 1);
                        return e
                    }

                    e.default = {
                        showToast: function (t = "", e = 0) {
                            t && n.showToast({message: t, duration: e})
                        }, queryString: function (t, e) {
                            let i = [];
                            for (let t in e) i.push(t + "=" + e[t]);
                            let o = i.join("&");
                            return o ? `${t}?${o}` : t
                        }, phone: function (t) {
                            if (!/^1[34578]\d{9}$/.test(t)) return !0
                        }, setStorage: function (t, e) {
                            a.set({
                                key: t, value: e, fail(t, e) {
                                    console.log(`setStorage fail, code = ${e}`)
                                }
                            })
                        }, getStorage: function (t) {
                            return new Promise(((e, i) => {
                                a.get({
                                    key: t, success(t) {
                                        e(t || "")
                                    }, fail(t, e) {
                                        console.log(`getStorage fail, code = ${e}`), i({data: t, code: e})
                                    }
                                })
                            }))
                        }, routetheUrl: function (t, e, i = !1) {
                            if (t) {
                                if (t.indexOf("/pagesA/Welfare") > -1) try {
                                    t = 2 === Number(TACTICS_SDK.getGlobalData("configInfo").config.is_open_welfare_menuBar.val) ? "/pagesA/WelfareNew" : "/pagesA/Welfare"
                                } catch (e) {
                                    t = "/pagesA/Welfare"
                                }
                                AD_SDK.clearVideoCallMap(), POP_TOOLS.isFakePage(t) ? POP_TOOLS.handleFakePage(t, e, i) : (POP_TOOLS.setFakePageView(null), REPORT_SDK.set_attr("ext_field_7", ""), s.push({
                                    uri: t,
                                    params: o(o({}, e), {}, {clearRouter: i})
                                }))
                            } else LOG("routetheUrl 参数url不能为空")
                        }, routeReplacetheUrl: function (t, e) {
                            if (t.indexOf("/pagesA/Welfare") > -1) try {
                                t = 2 === Number(TACTICS_SDK.getGlobalData("configInfo").config.is_open_welfare_menuBar.val) ? "/pagesA/WelfareNew" : "/pagesA/Welfare"
                            } catch (e) {
                                t = "/pagesA/Welfare"
                            }
                            s.replace({uri: t, params: e})
                        }, goBack: function () {
                            s.back()
                        }, goBackTo: function (t) {
                            s.back({path: t})
                        }, clear: function () {
                            s.clear()
                        }, deleteStorage: function (t) {
                            a.delete({
                                key: t, success: function (t) {
                                    console.log("handling success")
                                }, fail: function (t, e) {
                                    console.log(`handling fail, code = ${e}`)
                                }
                            })
                        }, pushMessageInfo: function (t) {
                            $apis.example.pushMessage({pushId: t}).then((t => {
                            })).catch((t => {
                            }))
                        }, backTime: function (t, e) {
                            return (new Date).getTime() - t < e.$app.$def.backTime
                        }, backTimeCommon: function (t, e) {
                            return (new Date).getTime() - t < e
                        }, routeCheckUrl: function (t) {
                            let e = s.getPages();
                            return console.log("判断当前要跳转的路由是否为当前页面routeCheckUrl==>", e), e[e.length - 1].path == t
                        }, formatTime: function (t) {
                            let e = Math.floor(t / 3600), i = Math.floor(Math.floor(t % 3600) / 60), o = t % 60;
                            return e = 1 === e.toString().length ? `0${e}` : e, i = 1 === i.toString().length ? `0${i}` : i, o = 1 === o.toString().length ? `0${o}` : o, e + ":" + i + ":" + o
                        }, routeCheckPages: function () {
                            return s.getPages().length > 1
                        }, clearStorage: function () {
                            return new Promise(((t, e) => {
                                a.clear({
                                    success: function (e) {
                                        t()
                                    }, fail: function (t, i) {
                                        e()
                                    }
                                })
                            }))
                        }, showDialog: function (t, e, i, o) {
                            n.showDialog({
                                title: t, message: e, buttons: i, autocancel: !1, success: function (t) {
                                    o(t)
                                }, cancel: function () {
                                    console.log("handling cancel")
                                }, fail: function (t, e) {
                                    console.log(`handling fail, code = ${e}`)
                                }
                            })
                        }, cutStrByte: function (t, e) {
                            if (!t || !e) return {cutStr: "", code: 0};
                            var i, o = "1", n = t.length;
                            if (n <= e / 2) i = t, o = "0"; else for (var a = 0, s = 0; s < n; s++) {
                                if ((a += p(t.charAt(s))) > e) {
                                    i = t.substring(0, s);
                                    break
                                }
                                if (a == e) {
                                    i = t.substring(0, s + 1);
                                    break
                                }
                            }
                            return i || (i = t, o = "0"), {cutStr: i, code: o}
                        }, getByteLen: p, adFreeTimeDifference: function (t) {
                            let e = Date.parse(new Date), i = Math.floor((t - e) / 6e4);
                            return console.log(`剩余看视频免广告时间======>${i}`), t > e
                        }, pageTimeCompute: function (t) {
                            let e = 0, i = (new Date).getTime();
                            return i > t && (e = Math.ceil((i - t) / 1e3)), e
                        }, cutStr: function (t, e) {
                            for (var i = [], o = 0, n = t.length; o < n / e; o++) {
                                var a = t.slice(e * o, e * (o + 1));
                                i.push(a)
                            }
                            return i
                        }, stacksRouter: function (t) {
                            let e = [];
                            return s.getPages().forEach((t => {
                                e.push(t.path)
                            })), -1 != e.indexOf(t)
                        }, uploadHuaweiLaunchData: function (t) {
                            if (!t) return;
                            let e = Object.assign({
                                APIVersion: "0.6.0",
                                rtype: "huawei",
                                pkg: "com.yunshangxiaoshuo.quansheng"
                            }, t);
                            console.log("启动参数===>", e), r.fetch({
                                url: "https://rpclusters.cn-beijing.log.aliyuncs.com/logstores/rpclusters/track.gif",
                                method: "get",
                                data: e,
                                success: t => {
                                    console.log("启动参数上报成功"), LOG("华为站内上报成功=====>", e)
                                },
                                fail: (t, e) => {
                                    console.log("启动参数上报失败", t, e)
                                }
                            })
                        }, checkKeyValueConditionSatisfied: function (t, e, i) {
                            if ("is" != i && "not_is" != i && "less" != i && "greater" != i) return console.error("function checkKeyValueConditionSatisfied’s param(cond) not included is or not_is or less or greater"), !1;
                            let o = !1;
                            switch (i) {
                                case"is":
                                    o = t == e;
                                    break;
                                case"not_is":
                                    o = t != e;
                                    break;
                                case"less":
                                    o = t < e;
                                    break;
                                case"greater":
                                    o = t > e
                            }
                            return "boolean" == typeof o && o
                        }, getExchangeChannelId: function (t) {
                            let e = new Map([["1", "ttzn"], ["5", "ttzw"], ["6", "kszn"], ["3", "kszw"], ["2", "opzn"], ["9", "opzw"], ["11", "vvzn"], ["7", "vvzw"], ["10", "xmzn"], ["4", "xmzw"], ["12", "hwzn"], ["8", "hwzw"], ["13", "iqyzn"], ["14", "iqyzw"], ["15", "gdtzn"], ["16", "gdtzw"], ["17", "xigua"], ["18", "tths"], ["19", "zchc"], ["20", "djhc"], ["21", "qdhc"], ["22", "ceshi"], ["23", "wbzn"]]).get(`${t}`);
                            return LOG("getExchangeChannelId==========>", t, e), e || t
                        }, getSourceType: function () {
                            return LOG("getSourceType==========>", $app_require$("@app-module/system.app").getInfo()), $app_require$("@app-module/system.app").getInfo().source.type
                        }, getExtraScene: function () {
                            return $app_require$("@app-module/system.app").getInfo().source.extra.scene || ""
                        }, dateToString: function () {
                            let t = new Date;
                            var e = t.getFullYear(), i = t.getMonth() + 1, o = t.getDate();
                            return t.getHours(), t.getMinutes(), t.getSeconds(), Math.floor((t.getMonth() + 3) / 3), `${e}${i}${o}`
                        }, setSecure: function (t, e = !1) {
                            const i = t.$app.$def.deviceInfo.platformVersionCode,
                                o = TACTICS_SDK.getGlobalData("configInfo").config.is_disabled_secure;
                            let n = !1;
                            LOG(o, "是否允许截图"), o && o.val ? (n = 1 === Number(o.val), i > 1090 ? t.$page.setSecure(n) : LOG("setSecure方法不支持", i), LOG("setSecure", n, i, t.$page.setSecure)) : (i > 1090 ? t.$page.setSecure(e) : LOG("setSecure方法不支持", i), LOG("setSecure", e, i, t.$page.setSecure))
                        }, isShowFuli: function () {
                            let t = !1;
                            try {
                                t = Number(TACTICS_SDK.getGlobalData("configInfo").config.is_show_welfare_page.val)
                            } catch (t) {
                            }
                            return t
                        }, getProbabilityNum: function (t, e) {
                            var i = Math.floor(100 * Math.random()) + 1;
                            return i >= 1 && i <= e ? t : 0
                        }, requestFullscreen: function (t) {
                            try {
                                if ("huawei" !== t.$app.$def.brand) {
                                    let e = TACTICS_SDK.getGlobalData("configInfo").config.is_full_screen;
                                    e = e && Number(e.val) || 0, e && t.$element("fStack").requestFullscreen()
                                }
                            } catch (t) {
                            }
                        }, getRouterInfo: function () {
                            return s.getState()
                        }
                    }
                }, 7395: (t, e) => {
                    "use strict";

                    function i(t, e) {
                        const i = t;
                        for (let t = 0; t < i._childrenVms.length; t++) if ("start-mask" === i._childrenVms[t]._type) {
                            i._childrenVms[t].isShowPage = e;
                            break
                        }
                    }

                    Object.defineProperty(e, "__esModule", {value: !0}), e.default = void 0, e.default = {
                        page_param_handler: async function (t, e) {
                            if (LOG("page_param_handler===================>", e.$page.query), 0 == Number(e.intent) || !e.intent) try {
                                e.$app.$emit("pageParamHandler", {})
                            } catch (t) {
                            }
                            if (0 == Number(e.intent)) {
                                let i = t.getPagesCodeInfo(NaN != Number(e.selectIndex) ? Number(e.selectIndex) : 0);
                                return e.pathUrl = i.pathUrl, e.pageDetail.pageOrigin = i.pageOrigin, void t.changeCommonDataByPageShow(e)
                            }
                            await t.initDeviceInfo(), TACTICS_SDK_UTILS.tactics_sdk_data.isTacticsSdkInit = !1, COMMON_REPORT_UTILS.set_attr("init_status", 0), 2 != e.intent && 3 != e.intent || (t.utm_ad_id = e.$page.query.adid || e.$page.query.aid || e.$page.query.ad_id || e.$page.query.campaign_id || "", t.utm_source = e.$page.query.ua || e.$page.query.site || e.$page.query.adgroup_id || e.$page.query.encrypted_position_id || e.$page.query.unionid || "", t.utm_content = e.$page.query.cid || e.$page.query.creativeid || e.$page.query.content_id || "", t.utm_campaign = e.$page.query.campaignid && "__CAMPAIGN_ID__" !== e.$page.query.campaignid ? `${e.$page.query.campaignid}`.split(",")[0] : "", t.channelId = $utils.getExchangeChannelId(e.channelId), t.linkId = e.linkId, t.linkId || 3 != e.intent || (t.linkId = "tzlmoren"), t.intent = e.intent, t.materialType = e.materialType ? `${e.materialType}` : "", t.uniqueId = e.$page.query.uniqueId, t.hapKey = e.$page.query.hapKey, t.utm_term = e.$page.query.clickid, t.imei = e.$page.query.imei || "", t.utm_medium = e.$page.query.rtype || "", t.sourceId = e.$page.query.bookId || ""), 2 == e.intent ? (t.pageCodeInfo.pathUrl = "hap链接", t.pageCodeInfo.pageOrigin = "CHANNEL_ROOT") : 3 == e.intent ? (t.pageCodeInfo.pathUrl = "通知栏", t.pageCodeInfo.pageOrigin = "NOTICE_ROOT") : (t.pageCodeInfo.pathUrl = "桌面", t.pageCodeInfo.pageOrigin = "DESK_ROOT", await $utils.getStorage("addDesktopUserInfo").then((e => {
                                if (e) {
                                    let i = JSON.parse(e);
                                    t.utm_ad_id = i.addTime || "", t.utm_campaign = i.channelId || "", t.utm_content = i.creativeid || "", t.utm_medium = i.linkId || ""
                                }
                            })));
                            let i = t.getPagesCodeInfo(NaN != Number(e.selectIndex) ? Number(e.selectIndex) : 0);
                            e.pathUrl = i.pathUrl, e.pageDetail.pageOrigin = i.pageOrigin, AD_SDK_UTILS.updataAdConfigData({uploadFristPopClick: 0}), LOG("VIEW", "appInfo.getPagesCodeInfo()2", e.pageDetail, i), t.changeCommonDataByPageShow(e), COMMON_REPORT_UTILS.report_initSdk(t);
                            let o = await $utils.getStorage("tacticsData"),
                                n = o ? String(JSON.parse(o).number_of_visits_today + 1) : "1";
                            COMMON_REPORT_UTILS.hap_report($utils.getSourceType(), $utils.getExtraScene(), t.utm_term, t.imei, t.oaid, n), 1 == e.$page.query.notification_status && 3 == e.intent && COMMON_REPORT_UTILS.notification_click_report(e.$page.query.notification_title || "", e.$page.query.notification_text || "", e.$page.query.notification_url || "", e.$page.query.oChannelId || "", e.$page.query.oLinkId || "")
                        }, page_user_data_init: function (t, e) {
                            return new Promise((async o => {
                                await TACTICS_SDK_UTILS.tacticsSdkInit(t), function (t, e) {
                                    try {
                                        const o = TACTICS_SDK.getGlobalData("configInfo").config;
                                        let n = o.delay_time;
                                        if (n = n && Number(n.val) || 0, t.isOpenScreenAd && t.isOpenScreenAd() && n > 0) setTimeout((() => {
                                            const t = !e.kdxfConfig || e.kdxfConfig && !e.kdxfConfig.isShow;
                                            e.checkPageEnterPop && e.nativeBoostGroupController && !e.nativeBoostGroupController.popShow && t && "SCREEN_TOUCH" == e.nativeBoostGroupController.actionCode && e.checkPageEnterPop(), i(e, !0)
                                        }), n); else {
                                            let t = 0;
                                            "READ_READINFO" === e.pageDetail.pageCode && Number(o.is_open_homeScreen_advert.val) && (t = o.zs_delay_time, t = t && Number(t.val) || 0), t < 200 && (t = 200), setTimeout((() => {
                                                i(e, !0), e.check2GetBannerAdConfig && e.check2GetBannerAdConfig()
                                            }), t)
                                        }
                                    } catch (t) {
                                        LOG("delayTime", t), i(e, !0)
                                    }
                                }(t, e), function (t) {
                                    const e = TACTICS_SDK.getGlobalData("configInfo").config.is_intercept_backpress,
                                        i = e && e.val || 1, o = 1 !== Number(i);
                                    !t.isAllowBackPress && o && (t.isAllowBackPress = o)
                                }(e), t.initAdInfo(e.pageDetail.pageName, e.$app, !0, (t => {
                                    o(t)
                                }))
                            }))
                        }, sMaskChange: i
                    }
                }, 5987: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {value: !0}), e.toDate = e.phoneVerify = e.maxPeak = e.getUserId = e.getTimeText = e.getRandomNumber = e.getPlatform = e.getOAID = e.getInfo = e.getId = e.getAstro = e.generateUUID = e.debounce2 = e.debounce = e.astroList = void 0;
                    var i, o = (i = $app_require$("@app-module/system.device")) && i.__esModule ? i : {default: i};
                    e.debounce = (t, e, i) => {
                        let o;
                        return function () {
                            let n = this, a = arguments;
                            o && clearTimeout(o), o = setTimeout((() => {
                                t.apply(n, a)
                            }), e), i && !o && t.apply(n, a)
                        }
                    }, e.debounce2 = (t, e, i) => {
                        let o;
                        return function () {
                            let n = this, a = arguments;
                            if (o && clearTimeout(o), i) {
                                var s = !o;
                                o = setTimeout((() => {
                                    o = null
                                }), e), s && t.apply(n, a)
                            } else o = setTimeout((function () {
                                t.apply(n, a)
                            }), e)
                        }
                    };
                    let n = {getInfo: null, getPlatform: null};
                    e.getInfo = () => new Promise(((t, e) => {
                        n.getInfo ? t(n.getInfo) : o.default.getInfo({
                            success: e => {
                                t(e)
                            }, fail: t => {
                                e(t)
                            }
                        })
                    })), e.getPlatform = () => (n.getPlatform || (n.getPlatform = o.default.platform), n.getPlatform), e.toDate = (t, e) => {
                        t.toString().length < 13 && (t = 1e3 * parseInt(t));
                        let i = new Date(t), o = i.getFullYear(), n = i.getMonth() + 1, a = i.getDate(),
                            s = i.getHours(), r = i.getMinutes(), p = i.getSeconds(), l = i.getDay(), c = function (t) {
                                return (t < 10 ? "0" : "") + t
                            };
                        return {
                            nowTime: e ? function (t) {
                                return t.replace(/yyyy|MM|dd|hh|mm|ss/g, (function (t) {
                                    let e = "";
                                    switch (t) {
                                        case"yyyy":
                                            e = c(o);
                                            break;
                                        case"MM":
                                            e = c(n);
                                            break;
                                        case"dd":
                                            e = c(a);
                                            break;
                                        case"hh":
                                            e = c(s);
                                            break;
                                        case"mm":
                                            e = c(r);
                                            break;
                                        case"ss":
                                            e = c(p)
                                    }
                                    return e
                                }))
                            }(e) : "",
                            nowYear: o,
                            nowMonth: n,
                            nowDate: a,
                            nowHour: s,
                            nowMinutes: r,
                            nowSeconds: p,
                            nowDayOfWeek: l
                        }
                    }, e.getId = (t = ["device"]) => new Promise(((e, i) => {
                        n.getId ? e(n.getId) : o.default.getId({
                            type: t, success: t => {
                                n.getId = t, e(t)
                            }, fail: t => {
                                i(t)
                            }
                        })
                    })), e.getUserId = () => new Promise(((t, e) => {
                        n.getUserId ? t(n.getUserId) : o.default.getUserId({
                            success: e => {
                                n.getUserId = e, t(e)
                            }, fail: t => {
                                e(t)
                            }
                        })
                    })), e.getOAID = () => new Promise(((t, e) => {
                        n.getOAID ? t(n.getOAID) : o.default.getOAID({
                            success: e => {
                                n.getOAID = e, t(e)
                            }, fail: t => {
                                e(t)
                            }
                        })
                    })), e.phoneVerify = t => !!/^((13\d)|(14[5,7,9])|(15[0-3,5-9])|(166)|(17[0,1,3,5,7,8])|(18[0-9])|(19[8,9]))\d{8}/.test(t), e.maxPeak = t => t.reduce(((t, e) => t.money > e.money ? t : e)), e.generateUUID = () => {
                        let t = (new Date).getTime();
                        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function (e) {
                            let i = (t + 16 * Math.random()) % 16 | 0;
                            return t = Math.floor(t / 16), ("x" === e ? i : 3 & i | 8).toString(16)
                        }))
                    }, e.getTimeText = () => {
                        const t = new Date;
                        return `${t.getFullYear()}-${t.getMonth() + 1}-${t.getDate()}`
                    }, e.astroList = () => [{
                        name: "摩羯座",
                        icon: "/assets/star-sign/capricorn-mj.png",
                        time: "12月22日～1月19日",
                        desc: "摩羯座实际、谨慎且有远见，是脚踏实地的工作者和计划者。他们追求成功和地位，对自己要求严格，有时会被认为过于保守或严肃，但他们的决心和坚韧让他们能在事业上取得显著成就。"
                    }, {
                        name: "水瓶座",
                        icon: "/assets/star-sign/aquarius-sp.png",
                        time: "1月20日～2月18日",
                        desc: "水瓶座的人通常被认为是理性的思想者，具有超前思维和独立精神，厌恶受到束缚。他们喜欢追求自由和革新，对社会公正和个人成长有着深厚的兴趣，同时也倾向于展现出博爱的一面。"
                    }, {
                        name: "双鱼座",
                        icon: "/assets/star-sign/pisces-sy.png",
                        time: "2月19日～3月20日",
                        desc: "双鱼座以其多情、富有想象力和创造力而著称。他们情感丰富且易受情绪影响，常常生活在自己的梦幻世界中。尽管内心柔弱，但对待感情非常投入，有时过于付出可能会让自己受伤。"
                    }, {
                        name: "白羊座",
                        icon: "/assets/star-sign/aries-by.png",
                        time: "3月21日～4月19日",
                        desc: "白羊座是充满活力与热情的星座，他们的行动力强、直率坦诚，总是勇往直前。虽然有时候显得冲动和自我中心，但他们内心纯真，热爱冒险，是天生的领导者。"
                    }, {
                        name: "金牛座",
                        icon: "/assets/star-sign/taurus-jn.png",
                        time: "4月20日～5月20日",
                        desc: "金牛座踏实稳重，对物质世界的享受有深刻理解，崇尚稳定与安全感。他们做事耐心、坚定，并拥有出色的耐力，但同时可能较为固执，不易改变已有的观点或习惯。"
                    }, {
                        name: "双子座",
                        icon: "/assets/star-sign/gemini-sz.png",
                        time: "5月21日～6月21日",
                        desc: "双子座灵活机智、善于沟通交流，对新事物充满好奇心。他们是适应力极强的思想者，但也可能表现出善变和不安分的性格特点，难以长时间专注于单一事务。"
                    }, {
                        name: "巨蟹座",
                        icon: "/assets/star-sign/cancer-jx.png",
                        time: "6月22日～7月22日",
                        desc: "巨蟹座的人温柔体贴、富有同情心和保护欲，家庭观念强烈。他们的情绪化可能导致行为上的波动，但其忠诚和关怀他人的特质为他们在人际关系中赢得信任。"
                    }, {
                        name: "狮子座",
                        icon: "/assets/star-sign/leo-sz.png",
                        time: "7月23日～8月22日",
                        desc: "狮子座自信、慷慨、热情洋溢，天生自带领导风范。他们渴望被关注和赞美，有时会表现出自恋倾向，但他们的忠诚与勇气使他们在团体中成为焦点人物。"
                    }, {
                        name: "处女座",
                        icon: "/assets/star-sign/virgo-cn.png",
                        time: "8月23日～9月22日",
                        desc: "处女座注重细节、追求完美，是个典型的实用主义者。他们勤奋努力，擅长分析问题，但过分挑剔可能导致压力过大，不过他们的服务精神和组织能力令人钦佩。"
                    }, {
                        name: "天秤座",
                        icon: "/assets/star-sign/libra-tp.png",
                        time: "9月23日～10月22日",
                        desc: "天秤座优雅和谐，主张公平正义，擅长在人际交往中寻找平衡点。他们是和平的使者，但对于决策时往往犹豫不决，因为他们希望兼顾各方利益。"
                    }, {
                        name: "天蝎座",
                        icon: "/assets/star-sign/scorpio-tx.png",
                        time: "10月23日～11月21日",
                        desc: "天蝎座深沉、神秘，意志坚定且执着。他们拥有强烈的洞察力和直觉，对于目标矢志不渝，但也会因为太过猜忌和占有欲过强而招致误解。"
                    }, {
                        name: "射手座",
                        icon: "/assets/star-sign/sagittarius-ss.png",
                        time: "11月22日～12月21日",
                        desc: "射手座乐观开朗、热爱自由，热衷于探索真理和新知。他们向往远方，不受拘束，但有时容易给人留下承诺太多却疏于兑现的印象。"
                    }], e.getAstro = () => {
                        const t = new Date, e = t.getMonth() + 1;
                        return e - (t.getDate() < "102223444433".charAt(e - 1) - -19)
                    }, e.getRandomNumber = (t, e) => Math.floor(Math.random() * (e - t) + t)
                }, 9084: t => {
                    "use strict";
                    t.exports = JSON.parse('{"PAGE_ENTRY":{"type":"common","name":"页面进入"},"POPUP_CLOSE":{"type":"common","name":"弹窗关闭"},"PAGE_BACK":{"type":"common","name":"页面返回"},"READ_FIRST_NORMAL":{"type":"custom","name":"章首默认"},"READ_FIRST_CUSTOM":{"type":"custom","name":"章首自定义"},"READ_AD_TEXT_CUSTOM":{"type":"custom","name":"页内自定义"},"READ_AD_TEXT_NORMAL":{"type":"custom","name":"页内默认"},"READ_MIDDLE_CUSTOM":{"type":"custom","name":"中插自定义"},"READ_MIDDLE_NORMAL":{"type":"custom","name":"中插默认"},"READ_PAGE_CLICK":{"type":"custom","name":"翻页解锁"},"AWARD_CLICK":{"type":"custom","name":"任务奖励点击"},"SIGN_IN":{"type":"custom","name":"签到弹窗"},"BOX_CLICK":{"type":"custom","name":"宝箱点击"},"READ_ADD_DESKTOP":{"type":"custom","name":"加桌"},"READ_ADD_DESKTOP_TIMER":{"type":"custom","name":"计时加桌"},"READ_PAGE_SWIPE_COIN":{"type":"custom","name":"翻页金币"},"READ_PAGE_SWIPE_RED_BAG":{"type":"custom","name":"翻页红包"},"READ_TIMER_COIN":{"type":"custom","name":"阅读金币"},"READ_MIDDLE_SENCES":{"type":"custom","name":"中插场景"},"READ_CHAPTER_END":{"type":"custom","name":"章尾场景"},"SCREEN_TOUCH":{"type":"common","name":"开屏场景"},"SECOND_SCREEN_TOUCH":{"type":"common","name":"双开屏场景"},"BUBBLE_CLICK":{"type":"custom","name":"点击气泡"},"OPEN_RED":{"type":"custom","name":"拆红包"},"POWER_SAVING":{"type":"custom","name":"省电"},"BRIGHTNESS":{"type":"custom","name":"亮度"},"VOLUME":{"type":"custom","name":"声音"},"VIDEO_PAUSE":{"type":"common","name":"短剧暂停"},"VIDEO_UNLOCK":{"type":"common","name":"切换剧集"},"READ_MIDDLE_TURN":{"type":"common","name":"阅读翻页"},"TIME_OUT":{"type":"common","name":"定时弹窗"},"DIVINATION_POP":{"type":"common","name":"抽签活动弹窗"},"CANNON_POP":{"type":"common","name":"炮击活动弹窗"},"LOTTERY_COIN_POP":{"type":"common","name":"抽好礼弹窗"},"ROPE_USEUP":{"type":"common","name":"套圈次数用完"},"ROPE_BAG":{"type":"common","name":"套红包"},"ROPE_BOX":{"type":"common","name":"套宝箱"},"ROPE_PHONE":{"type":"common","name":"套手机"},"OPEN_FERTILIZER":{"type":"common","name":"领肥料"},"OPEN_GOLD":{"type":"common","name":"领金币"},"OPEN_WATAR":{"type":"common","name":"领水滴"},"ANSWER_PROMPT":{"type":"common","name":"答案提示"},"WRONG_ANSWER":{"type":"common","name":"回答错误"},"CORRECT_ANSWER":{"type":"common","name":"回答正确"},"OPEN_RED_GOLD":{"type":"common","name":"拆红包-金币"},"DZ_DRAW_GOLD":{"type":"common","name":"大转盘-抽奖领取金币"},"DZ_INCREASED_LUCK":{"type":"common","name":"大转盘-幸运增加"},"DZ_PRIZE_DOUBLE":{"type":"common","name":"大转盘-奖金翻倍"},"DZ_ADD_ONE_TIME":{"type":"common","name":"大转盘-再加1次"},"PAGE_CLICK":{"type":"common","name":"页面点击"},"CHANGE_PAGE":{"type":"common","name":"翻页弹窗"},"DOWNLOAD_IMG":{"type":"common","name":"下载图片"},"SCREEN_CLICK":{"type":"common","name":"屏幕点击"},"ACCOUNTING":{"type":"common","name":"确认记账"},"CHECK_AMOUNT":{"type":"common","name":"支出选项卡"},"CHECK_INCOME":{"type":"common","name":"收入选项卡"}}')
                }
            }, __webpack_module_cache__ = {};

            function __webpack_require__(t) {
                var e = __webpack_module_cache__[t];
                if (void 0 !== e) return e.exports;
                var i = __webpack_module_cache__[t] = {exports: {}};
                return __webpack_modules__[t](i, i.exports, __webpack_require__), i.exports
            }

            var __webpack_exports__ = {};
            (() => {
                __webpack_require__(5288), __webpack_require__(2230), __webpack_require__(3853), __webpack_require__(3678), __webpack_require__(4290), __webpack_require__(903), __webpack_require__(742), __webpack_require__(4457), __webpack_require__(5860);
                var t = __webpack_require__(6968), e = __webpack_require__(7565);
                $app_define$("@app-component/index", [], (function (i, o, n) {
                    e(n, o, i), o.__esModule && o.default && (n.exports = o.default), n.exports.template = __webpack_require__(9996), n.exports.style = t
                })), $app_bootstrap$("@app-component/index", {packagerVersion: "1.9.14"})
            })()
        })()
    };
    if ("undefined" == typeof window) return createPageHandler();
    window.createPageHandler = createPageHandler
})();